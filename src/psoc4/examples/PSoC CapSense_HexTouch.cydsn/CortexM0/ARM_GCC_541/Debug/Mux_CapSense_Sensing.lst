ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Mux_CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Mux_CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	Mux_CapSense_SsTrimIdacsSourcing, %function
  24              	Mux_CapSense_SsTrimIdacsSourcing:
  25              	.LFB19:
  26              		.file 1 "Generated_Source\\PSoC4\\Mux_CapSense_Sensing.c"
   1:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \file Mux_CapSense_Sensing.c
   3:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \version 7.10
   4:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \see Mux_CapSense v7.10 Datasheet
  10:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 2


  32:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #include "Mux_CapSense_Configuration.h"
  42:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #include "Mux_CapSense_Structure.h"
  43:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #include "Mux_CapSense_Sensing.h"
  44:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
  45:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
  48:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
  51:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_CSD_SS_DIS != Mux_CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_ADC_EN)
  57:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_Adc.h"
  58:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (0u != Mux_CapSense_ISX_EN)
  64:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #include "Mux_CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #include "Mux_CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_AUTOTUNE_CAL_LEVEL                     (Mux_CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
  85:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #define Mux_CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #define Mux_CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 3


  89:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #define Mux_CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** } Mux_CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** } Mux_CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_DISABLE == Mux_CapSense_CSDV2)
 123:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_IDAC_SINKING == Mux_CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         static void Mux_CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                (Mux_CapSense_IDAC_SINKING == Mux_CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_IDAC_SOURCING == Mux_CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         static void Mux_CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                (Mux_CapSense_IDAC_SOURCING == Mux_CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
 137:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 139:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 142:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
 145:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 4


 146:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if(((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_DISABLE == Mux_CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static uint8 Mux_CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static uint8 Mux_CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 160:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, Mux_CapSense_RAM_WD_BASE_STRU
 161:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2))
 164:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, Mux_CapSense_RAM_WD_BASE_STRUCT 
 165:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** Mux_CapSense_SENSE_METHOD_ENUM Mux_CapSense_currentSenseMethod = Mux_CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if(Mux_CapSense_ENABLE == Mux_CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8 Mux_CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8 Mux_CapSense_immunity[Mux_CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     const uint8 Mux_CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** volatile uint8 Mux_CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** volatile uint8 Mux_CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** uint8 Mux_CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** Mux_CapSense_RAM_SNS_STRUCT *Mux_CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN))
 198:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_FLASH_WD_STRUCT const *Mux_CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 5


 203:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_FLASH_SNS_STRUCT const *Mux_CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** Mux_CapSense_FLASH_IO_STRUCT const *Mux_CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** Mux_CapSense_IDAC_GAIN_TABLE_STRUCT const Mux_CapSense_idacGainTable[Mux_CapSense_IDAC_GAIN_NUMBER]
 211:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_IsBusy
 215:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    - Mux_CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    - Mux_CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** uint32 Mux_CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (Mux_CapSense_dsRam.status & Mux_CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SetupWidget
 243:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 6


 260:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function does not start sensor scanning, the Mux_CapSense_Scan()
 261:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_WDGT_SW_STS_BUSY == (Mux_CapSense_dsRam.status & Mux_CapSense_WDGT_SW_STS_BUSY
 287:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else if ((Mux_CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (0uL != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch (Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 316:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSX_E:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 7


 317:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 322:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
 328:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_Scan
 345:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function is called only after the Mux_CapSense_SetupWidget()
 353:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  status of a sensor scan must be checked using the Mux_CapSense_IsBusy()
 355:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_Scan(void)
 366:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_WDGT_SW_STS_BUSY == (Mux_CapSense_dsRam.status & Mux_CapSense_WDGT_SW_STS_BUSY
 370:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 373:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 8


 374:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch (Mux_CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 379:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSXScan();
 381:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 384:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSDScan();
 386:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
 389:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ISXScan();
 391:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the Mux_CapSense_SetupWidget() and Mux_CapSense_Scan() functions are
 415:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  using the Mux_CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 9


 431:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_SW_STS_BUSY == (Mux_CapSense_dsRam.status & Mux_CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              wdgtIndex < Mux_CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             scanStatus = Mux_CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (0u != (Mux_CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     if ((Mux_CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_requestScanAllWidget = Mux_CapSense_ENABLE;
 459:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_requestScanAllWidget = Mux_CapSense_DISABLE;
 464:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_requestScanAllWidget = Mux_CapSense_DISABLE;
 469:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif  /* (0u != (Mux_CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 scanStatus = Mux_CapSense_Scan();
 474:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 10


 488:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  requires using the Mux_CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function does the same as Mux_CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  A macro for the widget ID can be found in the Mux_CapSense
 514:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Configuration header file defined as Mux_CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_WDGT_SW_STS_BUSY == (Mux_CapSense_dsRam.status & Mux_CapSense_WDGT_SW_STS_BUSY
 540:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 11


 545:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else if ((Mux_CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (0uL != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (sensorId < Mux_CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch (Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 570:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 576:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
 582:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_ScanExt
 599:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 12


 602:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  using the Mux_CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  by the Mux_CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  by using the Mux_CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  any other way - Mux_CapSense_Scan(), Mux_CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_RunTuner() - (see the Mux_CapSense_RunTuner() function
 624:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  using the Mux_CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_ScanExt(), the Mux_CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_CSXDisconnectTx() or Mux_CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_WDGT_SW_STS_BUSY == (Mux_CapSense_dsRam.status & Mux_CapSense_WDGT_SW_STS_BUSY
 646:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch (Mux_CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 655:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 13


 659:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 660:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
 665:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsInitialize
 680:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  of the Mux_CapSense Component. This function is called from
 685:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the Mux_CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  of the Mux_CapSense Component. This function is called from
 690:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the Mux_CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Calling the Mux_CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the Mux_CapSense Component at power-up. The Mux_CapSense_SsInitialize()
 698:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if ((Mux_CapSense_ENABLE == Mux_CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_MFS_IMO == Mux_CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 14


 716:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (centerFreqTrim < Mux_CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_1] = centerFreqTrim + Mux_CapSense_IMO_
 721:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (Mux_CapSense_IMO
 722:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                                                            Mux_CapS
 723:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (centerFreqTrim > (Mux_CapSense_IMO_FREQUENCY_OFFSET_MAX - Mux_CapSense_IMO_FREQUEN
 725:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_1] = centerFreqTrim - Mux_CapSense_IMO_
 727:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (Mux_CapSense_IMO
 728:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                                                            Mux_CapS
 729:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_1] = centerFreqTrim - Mux_CapSense_IMO_
 733:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_immunity[Mux_CapSense_FREQ_CHANNEL_2] = centerFreqTrim + Mux_CapSense_IMO_
 734:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                (Mux_CapSense_MFS_IMO == Mux_CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_DISABLE == Mux_CapSense_CSDV2)
 742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
 744:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)))
 747:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****               ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && (Mux_CapSense_ENABLE == Mux_CapSense
 750:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_SsSetAllIOsState((uint32)Mux_CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_dsRam.scanCurrentISC = Mux_CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_SsSwitchSensingMode(Mux_CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_ENABLE == Mux_CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #elif (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 758:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsSwitchSensingMode(Mux_CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #elif (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 760:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsSwitchSensingMode(Mux_CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #elif (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
 762:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsSwitchSensingMode(Mux_CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 15


 773:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SetPinState
 774:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function accepts the Mux_CapSense_SHIELD and
 790:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the Mux_CapSense_TX_PIN
 792:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  and Mux_CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  in the design made by the Mux_CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  A macro for the widget ID can be found in the Mux_CapSense Configuration
 806:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  header file defined as Mux_CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Mux_CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     1. Mux_CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     2. Mux_CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *        Analog.
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 16


 830:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     3. Mux_CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     4. Mux_CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     5. Mux_CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     6. Mux_CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_ENABLE == Mux_CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_ENABLE == Mux_CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (Mux_CapSense_GANGED_SNS_MASK == (Mux_CapSense_dsFlash.wdgtArray[widgetId].staticConfig 
 854:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             curFlashSnsPtr = Mux_CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ioPtr = &Mux_CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ioPtr = (Mux_CapSense_FLASH_IO_STRUCT const *)Mux_CapSense_dsFlash.wdgtArray[widgetId].
 863:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ioPtr = (Mux_CapSense_FLASH_IO_STRUCT const *)Mux_CapSense_dsFlash.wdgtArray[widgetId].ptr2
 867:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(Mux_CapSense_HSIOM_SEL_MASK
 876:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(Mux_CapSense_GPIO_PC_MASK << ioPt
 877:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_GROUND:
 882:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (Mux_CapSense_SNS_GROUND_CONNEC
 885:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 17


 887:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_HIGHZ:
 890:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 896:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSOR:
 897:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 case Mux_CapSense_SHIELD:
 903:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (Mux_CapSense_HSI
 906:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN))
 913:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_TX_PIN:
 914:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (Mux_CapSense_HSIOM_S
 916:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (Mux_CapSense_GPIO_STRGDRV 
 917:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_RX_PIN:
 921:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (Mux_CapSense_HSIOM_S
 923:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(Mux_CapSense_GPIO_PC_MASK
 924:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
 938:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function disables CSD mode.
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 18


 944:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(Mux_CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newRegValue &= (uint32)(~Mux_CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(Mux_CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                    (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_HSIOM_PTR, Mux_CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_HSIOM_PTR, Mux_CapSense_CSH_HSIOM_MASK, 0u)
 977:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              (0u != Mux_CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 988:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 19


1001:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_HSIOM_PTR, Mux_CapSense_CintA_HSIOM_MASK, 0u)
1005:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_HSIOM_PTR, Mux_CapSense_CintB_HSIOM_MASK, 0u)
1007:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
1014:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_HSIOM_PTR, Mux_CapSense_CintA_HSIOM_MASK, 0u)
1031:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_HSIOM_PTR, Mux_CapSense_CintB_HSIOM_MASK, 0u)
1033:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 20


1058:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Mux_CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsSwitchSensingMode(Mux_CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (Mux_CapSense_SENSE_METHOD_CSD_E == Mux_CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
1075:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (Mux_CapSense_SENSE_METHOD_CSX_E == Mux_CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
1081:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (Mux_CapSense_SENSE_METHOD_ISX_E == Mux_CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
1087:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (Mux_CapSense_SENSE_METHOD_BIST_E == Mux_CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_ADC_EN)
1099:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (void)Mux_CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (Mux_CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
1108:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_currentSenseMethod = Mux_CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (Mux_CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 21


1115:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
1116:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_currentSenseMethod = Mux_CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (Mux_CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
1124:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_currentSenseMethod = Mux_CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else if (Mux_CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_BistInitialize();
1133:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_currentSenseMethod = Mux_CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_currentSenseMethod = Mux_CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 22


1172:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     snsIoPtr = &Mux_CapSense_ioList[0u];
1202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < Mux_CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(Mux_CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) &&\
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 23


1229:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (0u != Mux_CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if(Mux_CapSense_ENABLE == Mux_CapSense_ADC_EN)
1235:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_ADC_EN)
1241:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** cystatus Mux_CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_SW_STS_BUSY == (Mux_CapSense_dsRam.status & Mux_CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
1274:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
1278:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
1282:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 24


1286:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsSetAllIOsState((uint32)Mux_CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_currentSenseMethod = Mux_CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This is the function used by the Mux_CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (1u != Mux_CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             postScanStatus = Mux_CapSense_SetupWidget((uint32)Mux_CapSense_widgetIndex);
1331:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if((Mux_CapSense_TOTAL_WIDGETS - 1u) == Mux_CapSense_widgetIndex)
1335:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     Mux_CapSense_requestScanAllWidget = Mux_CapSense_DISABLE;
1338:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (void)Mux_CapSense_Scan();
1340:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             else if((Mux_CapSense_TOTAL_WIDGETS - 1u) == Mux_CapSense_widgetIndex)
1342:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 25


1343:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if ((Mux_CapSense_ENABLE == Mux_CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN))
1345:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     if (Mux_CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[Mux_CapSense_
1347:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         CY_SET_REG32(Mux_CapSense_CONFIG_PTR, Mux_CapSense_configCsd);
1350:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                            (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.status &= ~Mux_CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.status &= ~Mux_CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.status |= ((postScanStatus & Mux_CapSense_STATUS_ERR_SIZE) << Mu
1362:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.status &= ~Mux_CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.status |= ((postScanStatus & Mux_CapSense_STATUS_ERR_SIZE) << Mu
1371:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* (1u != Mux_CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 26


1400:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  ((uint32)Mux_CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  Mux_CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  ((uint32)Mux_CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(Mux_CapSense_MODCLK_CMD_PTR) & Mux_CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  (uint32)(((uint32)Mux_CapSense_ModClk__DIV_ID << Mux_CapSense_MODCLK_CMD_DIV_SHIFT
1441:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                   ((uint32)Mux_CapSense_ModClk__PA_DIV_ID << Mux_CapSense_MODCLK_CMD_PA_DIV_SHIFT) 
1442:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                   Mux_CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  CY_GET_REG32(Mux_CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  (uint32)(~Mux_CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(Mux_CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)Mux_CapSense_ModClk
1456:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 27


1457:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  CY_GET_REG32(Mux_CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
1487:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(Mux_CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     newRegValue &= (uint32)(~Mux_CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CY_SET_REG32(Mux_CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      ((uint32)Mux_CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      Mux_CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      ((uint32)Mux_CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 28


1514:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(Mux_CapSense_SNSCLK_CMD_PTR) & Mux_CapSense_SNSCLK_CMD_ENABLE_MAS
1515:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      (uint32)(((uint32)Mux_CapSense_SnsClk__DIV_ID << Mux_CapSense_SNSCLK_CMD_DIV_S
1522:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                       ((uint32)Mux_CapSense_ModClk__PA_DIV_ID << Mux_CapSense_SNSCLK_CMD_PA_DIV_SHI
1523:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                       Mux_CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      CY_GET_REG32(Mux_CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      (uint32)(~(uint32)Mux_CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)Mux_CapSense_Sn
1537:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      CY_GET_REG32(Mux_CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     Mux_CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
1546:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
1570:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Configure Mod clock */
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 29


1571:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Mux_CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Mux_CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Mux_CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus Mux_CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if (Mux_CapSense_TOTAL_WIDGETS <= widgetId)
1627:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 30


1628:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if (0u != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif  /* (Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (Mux_CapSense_ENABLE == Mux_CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     if (Mux_CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                        Mux_CapSense_ISXCalibrateWidget(widgetId, Mux_CapSense_ISX_RAWCOUNT_CAL_LEVE
1661:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif  /* (Mux_CapSense_ENABLE == Mux_CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     if (Mux_CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                        calibrateStatus = Mux_CapSense_CSXCalibrateWidget(widgetId, Mux_CapSense_CSX
1671:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif  /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     if (Mux_CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         calibrateStatus = Mux_CapSense_CSDCalibrateWidget(widgetId, Mux_CapSense_CS
1680:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif  /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #elif (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 31


1685:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 calibrateStatus = Mux_CapSense_CSDCalibrateWidget(widgetId, Mux_CapSense_CSD_RAWCOU
1686:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #elif (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
1689:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 calibrateStatus = Mux_CapSense_CSXCalibrateWidget(widgetId, Mux_CapSense_CSX_RAWCOU
1690:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #elif (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)
1693:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_ISXCalibrateWidget(widgetId, Mux_CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus Mux_CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 32


1742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < Mux_CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             calibrateStatus |= Mux_CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_CSD_SS_DIS != Mux_CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal Mux_CapSense
1759:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Mux_CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Mux_CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus Mux_CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 33


1799:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &Mux_CapSense_dsFlash.wdgtArray[widget
1801:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (Mux_CapSense_RAM_WD_BASE_STRUCT *)ptrFlash
1802:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
1806:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)Mux_CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             minSnsClkDiv = Mux_CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #elif (Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> Mux_CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             minSnsClkDiv = Mux_CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / Mux_CapSense_dsRam.modCsdClk) >> Mux_CapSense_F
1824:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             minSnsClkDiv = Mux_CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
1830:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * Mux_CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         minSnsClkDivTmp /= Mux_CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (Mux_CapSense_AUTOTUNE_CAL_UNITS - 1u)) / Mux_CapSense_AUTOT
1843:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = Mux_CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.vRef = Mux_CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 34


1856:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrRamWidget->resolution = Mux_CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / Mux_CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)Mux_CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / Mux_CapSense_AUTOTUNE_CALIBRATION_FREQ
1871:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)Mux_CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (void)Mux_CapSense_CSDCalibrateWidget(widgetId, Mux_CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.iDacGain = Mux_CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue
1905:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * Mux_CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 ((uint32)(0x01uL << Mux_CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 35


1913:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if ((Mux_CapSense_WD_TOUCHPAD_E == Mux_CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_WD_MATRIX_BUTTON_E == Mux_CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * Mux_CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         ((uint32)(0x01uL << Mux_CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 36


1970:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if (Mux_CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (void)Mux_CapSense_CSDCalibrateWidget(widgetId, Mux_CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.iDacGain = Mux_CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue
1987:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if ((Mux_CapSense_WD_TOUCHPAD_E == Mux_CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_WD_MATRIX_BUTTON_E == Mux_CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         Mux_CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         autoTuneStatus |= Mux_CapSense_CSDCalibrateWidget(widgetId, Mux_CapSense_AUTOTUNE_CAL_LEVEL
2017:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 37


2027:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsAutoTune
2028:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal Mux_CapSense
2032:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus Mux_CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < Mux_CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if (Mux_CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 autoTuneStatus |= Mux_CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_CSD_SS_DIS != Mux_CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_DISABLE == Mux_CapSense_CSDV2)
2067:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if ( ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         || (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_IDAC_SINKING == Mux_CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Function Name: Mux_CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         static void Mux_CapSense_SsTrimIdacsSinking(void)
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 38


2084:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             trimValue = CY_GET_REG32(Mux_CapSense_TRIM2_PTR) & ~Mux_CapSense_IDAC_TRIM2_MOD_SNK_MAS
2089:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(Mux_CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                       Mux_CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 trimValue &= ~Mux_CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(Mux_CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                           Mux_CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(Mux_CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                (Mux_CapSense_IDAC_SINKING == Mux_CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if ( ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         || (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****          (Mux_CapSense_IDAC_SOURCING == Mux_CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Function Name: Mux_CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         static void Mux_CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
  27              		.loc 1 2123 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
2124:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             trimValue = CY_GET_REG32(Mux_CapSense_TRIM1_PTR) & ~Mux_CapSense_IDAC_TRIM1_MOD_SRC_MAS
  36              		.loc 1 2127 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 39


  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
2128:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(Mux_CapSense_SFLASH_TRIM1_PTR) &
  43              		.loc 1 2128 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
2129:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                       Mux_CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 trimValue &= ~Mux_CapSense_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 2133 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
2134:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(Mux_CapSense_SFLASH_TRIM1_PTR) &
  54              		.loc 1 2134 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
2135:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                           Mux_CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(Mux_CapSense_TRIM1_PTR, trimValue);
  59              		.loc 1 2139 0
  60 0020 0360     		str	r3, [r0]
2140:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
  61              		.loc 1 2140 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF2840 		.word	1076428544
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE19:
  71              		.size	Mux_CapSense_SsTrimIdacsSourcing, .-Mux_CapSense_SsTrimIdacsSourcing
  72              		.section	.text.Mux_CapSense_SsTrimIdacs,"ax",%progbits
  73              		.align	2
  74              		.code	16
  75              		.thumb_func
  76              		.type	Mux_CapSense_SsTrimIdacs, %function
  77              	Mux_CapSense_SsTrimIdacs:
  78              	.LFB20:
2141:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                (Mux_CapSense_IDAC_SOURCING == Mux_CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 40


2146:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
  79              		.loc 1 2161 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
2162:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || (Mux_CapSense_ENABLE == Mux_CapSense_IS
2163:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #elif (Mux_CapSense_IDAC_SINKING == Mux_CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #elif (Mux_CapSense_IDAC_SOURCING == Mux_CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_SsTrimIdacsSourcing();
  87              		.loc 1 2168 0
  88 0002 FFF7FEFF 		bl	Mux_CapSense_SsTrimIdacsSourcing
  89              	.LVL4:
2169:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || (Mux_CapSense_ENABLE == Mux_CapSe
2172:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
  90              		.loc 1 2172 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE20:
  95              		.size	Mux_CapSense_SsTrimIdacs, .-Mux_CapSense_SsTrimIdacs
  96              		.section	.text.Mux_CapSense_IsBusy,"ax",%progbits
  97              		.align	2
  98              		.global	Mux_CapSense_IsBusy
  99              		.code	16
 100              		.thumb_func
 101              		.type	Mux_CapSense_IsBusy, %function
 102              	Mux_CapSense_IsBusy:
 103              	.LFB1:
 237:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (Mux_CapSense_dsRam.status & Mux_CapSense_SW_STS_BUSY);
 104              		.loc 1 237 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 41


 108              		@ link register save eliminated.
 238:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 109              		.loc 1 238 0
 110 0000 024B     		ldr	r3, .L6
 111 0002 DB68     		ldr	r3, [r3, #12]
 112 0004 8020     		movs	r0, #128
 113 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 114              		.loc 1 239 0
 115              		@ sp needed
 116 0008 7047     		bx	lr
 117              	.L7:
 118 000a C046     		.align	2
 119              	.L6:
 120 000c 00000000 		.word	Mux_CapSense_dsRam
 121              		.cfi_endproc
 122              	.LFE1:
 123              		.size	Mux_CapSense_IsBusy, .-Mux_CapSense_IsBusy
 124              		.section	.text.Mux_CapSense_SetupWidget,"ax",%progbits
 125              		.align	2
 126              		.global	Mux_CapSense_SetupWidget
 127              		.code	16
 128              		.thumb_func
 129              		.type	Mux_CapSense_SetupWidget, %function
 130              	Mux_CapSense_SetupWidget:
 131              	.LFB2:
 283:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus widgetStatus;
 132              		.loc 1 283 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL5:
 137 0000 10B5     		push	{r4, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 141              		.loc 1 286 0
 142 0002 0E4B     		ldr	r3, .L14
 143 0004 DB68     		ldr	r3, [r3, #12]
 144 0006 DB03     		lsls	r3, r3, #15
 145 0008 0DD4     		bmi	.L11
 296:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (0uL != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 146              		.loc 1 296 0
 147 000a 0028     		cmp	r0, #0
 148 000c 0DD1     		bne	.L12
 297:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 149              		.loc 1 297 0 discriminator 1
 150 000e 4309     		lsrs	r3, r0, #5
 151 0010 0433     		adds	r3, r3, #4
 152 0012 9B00     		lsls	r3, r3, #2
 153 0014 094A     		ldr	r2, .L14
 154 0016 9B58     		ldr	r3, [r3, r2]
 155 0018 1F22     		movs	r2, #31
 156 001a 0240     		ands	r2, r0
 157 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (0uL != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId)))
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 42


 158              		.loc 1 296 0 discriminator 1
 159 001e DB07     		lsls	r3, r3, #31
 160 0020 05D4     		bmi	.L13
 304:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 161              		.loc 1 304 0
 162 0022 0124     		movs	r4, #1
 163 0024 04E0     		b	.L9
 164              	.L11:
 289:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 165              		.loc 1 289 0
 166 0026 1124     		movs	r4, #17
 167 0028 02E0     		b	.L9
 168              	.L12:
 304:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 169              		.loc 1 304 0
 170 002a 0124     		movs	r4, #1
 171 002c 00E0     		b	.L9
 172              	.L13:
 300:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 173              		.loc 1 300 0
 174 002e 0024     		movs	r4, #0
 175              	.L9:
 176              	.LVL6:
 311:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 177              		.loc 1 311 0
 178 0030 002C     		cmp	r4, #0
 179 0032 01D1     		bne	.L10
 324:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 180              		.loc 1 324 0
 181 0034 FFF7FEFF 		bl	Mux_CapSense_CSDSetupWidget
 182              	.LVL7:
 183              	.L10:
 340:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 184              		.loc 1 340 0
 185 0038 2000     		movs	r0, r4
 186              		@ sp needed
 187              	.LVL8:
 188 003a 10BD     		pop	{r4, pc}
 189              	.L15:
 190              		.align	2
 191              	.L14:
 192 003c 00000000 		.word	Mux_CapSense_dsRam
 193              		.cfi_endproc
 194              	.LFE2:
 195              		.size	Mux_CapSense_SetupWidget, .-Mux_CapSense_SetupWidget
 196              		.section	.text.Mux_CapSense_Scan,"ax",%progbits
 197              		.align	2
 198              		.global	Mux_CapSense_Scan
 199              		.code	16
 200              		.thumb_func
 201              		.type	Mux_CapSense_Scan, %function
 202              	Mux_CapSense_Scan:
 203              	.LFB3:
 366:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 204              		.loc 1 366 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 43


 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
 212              	.LVL9:
 369:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 213              		.loc 1 369 0
 214 0002 084B     		ldr	r3, .L22
 215 0004 DB68     		ldr	r3, [r3, #12]
 216 0006 DB03     		lsls	r3, r3, #15
 217 0008 07D4     		bmi	.L19
 376:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 218              		.loc 1 376 0
 219 000a 074B     		ldr	r3, .L22+4
 220 000c 1B78     		ldrb	r3, [r3]
 221 000e 012B     		cmp	r3, #1
 222 0010 05D1     		bne	.L21
 385:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 223              		.loc 1 385 0
 224 0012 FFF7FEFF 		bl	Mux_CapSense_CSDScan
 225              	.LVL10:
 367:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 226              		.loc 1 367 0
 227 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 228              		.loc 1 386 0
 229 0018 03E0     		b	.L17
 230              	.L19:
 372:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 231              		.loc 1 372 0
 232 001a 1120     		movs	r0, #17
 233 001c 01E0     		b	.L17
 234              	.L21:
 394:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 235              		.loc 1 394 0
 236 001e 0120     		movs	r0, #1
 237 0020 4042     		rsbs	r0, r0, #0
 238              	.L17:
 239              	.LVL11:
 399:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 240              		.loc 1 399 0
 241              		@ sp needed
 242 0022 10BD     		pop	{r4, pc}
 243              	.L23:
 244              		.align	2
 245              	.L22:
 246 0024 00000000 		.word	Mux_CapSense_dsRam
 247 0028 00000000 		.word	.LANCHOR0
 248              		.cfi_endproc
 249              	.LFE3:
 250              		.size	Mux_CapSense_Scan, .-Mux_CapSense_Scan
 251              		.section	.text.Mux_CapSense_ScanAllWidgets,"ax",%progbits
 252              		.align	2
 253              		.global	Mux_CapSense_ScanAllWidgets
 254              		.code	16
 255              		.thumb_func
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 44


 256              		.type	Mux_CapSense_ScanAllWidgets, %function
 257              	Mux_CapSense_ScanAllWidgets:
 258              	.LFB4:
 428:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 259              		.loc 1 428 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267              	.LVL12:
 433:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 268              		.loc 1 433 0
 269 0002 0C4B     		ldr	r3, .L30
 270 0004 DB68     		ldr	r3, [r3, #12]
 271 0006 1B06     		lsls	r3, r3, #24
 272 0008 12D4     		bmi	.L29
 273 000a 0024     		movs	r4, #0
 274 000c 0120     		movs	r0, #1
 275 000e 4042     		rsbs	r0, r0, #0
 276 0010 0BE0     		b	.L26
 277              	.LVL13:
 278              	.L28:
 449:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 279              		.loc 1 449 0
 280 0012 2000     		movs	r0, r4
 281              	.LVL14:
 282 0014 FFF7FEFF 		bl	Mux_CapSense_SetupWidget
 283              	.LVL15:
 451:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
 284              		.loc 1 451 0
 285 0018 0028     		cmp	r0, #0
 286 001a 05D1     		bne	.L27
 468:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
 287              		.loc 1 468 0
 288 001c 0022     		movs	r2, #0
 289 001e 064B     		ldr	r3, .L30+4
 290 0020 5A70     		strb	r2, [r3, #1]
 473:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 291              		.loc 1 473 0
 292 0022 FFF7FEFF 		bl	Mux_CapSense_Scan
 293              	.LVL16:
 475:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
 294              		.loc 1 475 0
 295 0026 04E0     		b	.L25
 296              	.L27:
 446:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 297              		.loc 1 446 0
 298 0028 0134     		adds	r4, r4, #1
 299              	.LVL17:
 300              	.L26:
 444:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              wdgtIndex < Mux_CapSense_TOTAL_WIDGETS;
 301              		.loc 1 444 0 discriminator 1
 302 002a 002C     		cmp	r4, #0
 303 002c F1D0     		beq	.L28
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 45


 304 002e 00E0     		b	.L25
 305              	.LVL18:
 306              	.L29:
 436:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 307              		.loc 1 436 0
 308 0030 1120     		movs	r0, #17
 309              	.LVL19:
 310              	.L25:
 481:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 311              		.loc 1 481 0
 312              		@ sp needed
 313 0032 10BD     		pop	{r4, pc}
 314              	.L31:
 315              		.align	2
 316              	.L30:
 317 0034 00000000 		.word	Mux_CapSense_dsRam
 318 0038 00000000 		.word	.LANCHOR0
 319              		.cfi_endproc
 320              	.LFE4:
 321              		.size	Mux_CapSense_ScanAllWidgets, .-Mux_CapSense_ScanAllWidgets
 322              		.section	.text.Mux_CapSense_SetupWidgetExt,"ax",%progbits
 323              		.align	2
 324              		.global	Mux_CapSense_SetupWidgetExt
 325              		.code	16
 326              		.thumb_func
 327              		.type	Mux_CapSense_SetupWidgetExt, %function
 328              	Mux_CapSense_SetupWidgetExt:
 329              	.LFB5:
 536:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus widgetStatus;
 330              		.loc 1 536 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL20:
 335 0000 10B5     		push	{r4, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 339              		.loc 1 539 0
 340 0002 124B     		ldr	r3, .L39
 341 0004 DB68     		ldr	r3, [r3, #12]
 342 0006 DB03     		lsls	r3, r3, #15
 343 0008 13D4     		bmi	.L35
 549:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (0uL != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 344              		.loc 1 549 0
 345 000a 0028     		cmp	r0, #0
 346 000c 13D1     		bne	.L36
 550:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (sensorId < Mux_CapSense_GET_SENSOR_COUNT(widgetId)))
 347              		.loc 1 550 0 discriminator 1
 348 000e 4309     		lsrs	r3, r0, #5
 349 0010 0433     		adds	r3, r3, #4
 350 0012 9B00     		lsls	r3, r3, #2
 351 0014 0D4A     		ldr	r2, .L39
 352 0016 9B58     		ldr	r3, [r3, r2]
 353 0018 1F22     		movs	r2, #31
 354 001a 0240     		ands	r2, r0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 46


 355 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (0uL != Mux_CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 356              		.loc 1 549 0 discriminator 1
 357 001e DB07     		lsls	r3, r3, #31
 358 0020 0BD5     		bpl	.L37
 551:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 359              		.loc 1 551 0
 360 0022 4301     		lsls	r3, r0, #5
 361 0024 0A4A     		ldr	r2, .L39+4
 362 0026 D318     		adds	r3, r2, r3
 363 0028 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         (sensorId < Mux_CapSense_GET_SENSOR_COUNT(widgetId)))
 364              		.loc 1 550 0
 365 002a 8B42     		cmp	r3, r1
 366 002c 07D8     		bhi	.L38
 558:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 367              		.loc 1 558 0
 368 002e 0124     		movs	r4, #1
 369 0030 06E0     		b	.L33
 370              	.L35:
 542:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 371              		.loc 1 542 0
 372 0032 1124     		movs	r4, #17
 373 0034 04E0     		b	.L33
 374              	.L36:
 558:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 375              		.loc 1 558 0
 376 0036 0124     		movs	r4, #1
 377 0038 02E0     		b	.L33
 378              	.L37:
 379 003a 0124     		movs	r4, #1
 380 003c 00E0     		b	.L33
 381              	.L38:
 554:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 382              		.loc 1 554 0
 383 003e 0024     		movs	r4, #0
 384              	.L33:
 385              	.LVL21:
 565:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 386              		.loc 1 565 0
 387 0040 002C     		cmp	r4, #0
 388 0042 01D1     		bne	.L34
 578:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 389              		.loc 1 578 0
 390 0044 FFF7FEFF 		bl	Mux_CapSense_CSDSetupWidgetExt
 391              	.LVL22:
 392              	.L34:
 594:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 393              		.loc 1 594 0
 394 0048 2000     		movs	r0, r4
 395              		@ sp needed
 396              	.LVL23:
 397 004a 10BD     		pop	{r4, pc}
 398              	.L40:
 399              		.align	2
 400              	.L39:
 401 004c 00000000 		.word	Mux_CapSense_dsRam
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 47


 402 0050 00000000 		.word	Mux_CapSense_dsFlash
 403              		.cfi_endproc
 404              	.LFE5:
 405              		.size	Mux_CapSense_SetupWidgetExt, .-Mux_CapSense_SetupWidgetExt
 406              		.section	.text.Mux_CapSense_ScanExt,"ax",%progbits
 407              		.align	2
 408              		.global	Mux_CapSense_ScanExt
 409              		.code	16
 410              		.thumb_func
 411              		.type	Mux_CapSense_ScanExt, %function
 412              	Mux_CapSense_ScanExt:
 413              	.LFB6:
 642:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 414              		.loc 1 642 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422              	.LVL24:
 645:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 423              		.loc 1 645 0
 424 0002 084B     		ldr	r3, .L47
 425 0004 DB68     		ldr	r3, [r3, #12]
 426 0006 DB03     		lsls	r3, r3, #15
 427 0008 07D4     		bmi	.L44
 652:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 428              		.loc 1 652 0
 429 000a 074B     		ldr	r3, .L47+4
 430 000c 1B78     		ldrb	r3, [r3]
 431 000e 012B     		cmp	r3, #1
 432 0010 05D1     		bne	.L46
 661:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 433              		.loc 1 661 0
 434 0012 FFF7FEFF 		bl	Mux_CapSense_CSDScanExt
 435              	.LVL25:
 643:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 436              		.loc 1 643 0
 437 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
 438              		.loc 1 662 0
 439 0018 03E0     		b	.L42
 440              	.L44:
 648:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 441              		.loc 1 648 0
 442 001a 1120     		movs	r0, #17
 443 001c 01E0     		b	.L42
 444              	.L46:
 670:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 445              		.loc 1 670 0
 446 001e 0120     		movs	r0, #1
 447 0020 4042     		rsbs	r0, r0, #0
 448              	.L42:
 449              	.LVL26:
 675:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 48


 450              		.loc 1 675 0
 451              		@ sp needed
 452 0022 10BD     		pop	{r4, pc}
 453              	.L48:
 454              		.align	2
 455              	.L47:
 456 0024 00000000 		.word	Mux_CapSense_dsRam
 457 0028 00000000 		.word	.LANCHOR0
 458              		.cfi_endproc
 459              	.LFE6:
 460              		.size	Mux_CapSense_ScanExt, .-Mux_CapSense_ScanExt
 461              		.section	.text.Mux_CapSense_SetPinState,"ax",%progbits
 462              		.align	2
 463              		.global	Mux_CapSense_SetPinState
 464              		.code	16
 465              		.thumb_func
 466              		.type	Mux_CapSense_SetPinState, %function
 467              	Mux_CapSense_SetPinState:
 468              	.LFB8:
 841:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 eltdNum;
 469              		.loc 1 841 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL27:
 474 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 475              		.cfi_def_cfa_offset 24
 476              		.cfi_offset 3, -24
 477              		.cfi_offset 4, -20
 478              		.cfi_offset 5, -16
 479              		.cfi_offset 6, -12
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         eltdNum = 1u;
 483              		.loc 1 866 0
 484 0004 4001     		lsls	r0, r0, #5
 485              	.LVL28:
 486 0006 244B     		ldr	r3, .L56
 487 0008 C458     		ldr	r4, [r0, r3]
 488 000a CB00     		lsls	r3, r1, #3
 489 000c 591A     		subs	r1, r3, r1
 490              	.LVL29:
 491 000e 8B00     		lsls	r3, r1, #2
 492 0010 E418     		adds	r4, r4, r3
 493              	.LVL30:
 871:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 494              		.loc 1 871 0
 495 0012 0025     		movs	r5, #0
 496 0014 3CE0     		b	.L50
 497              	.LVL31:
 498              	.L55:
 874:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(Mux_CapSense_HSIOM_SEL_MASK
 499              		.loc 1 874 0
 500 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 501              	.LVL32:
 875:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(Mux_CapSense_GPIO_PC_MASK << ioPt
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 49


 502              		.loc 1 875 0
 503 001a 2168     		ldr	r1, [r4]
 504 001c 0B68     		ldr	r3, [r1]
 505 001e 277E     		ldrb	r7, [r4, #24]
 506 0020 0F22     		movs	r2, #15
 507 0022 BA40     		lsls	r2, r2, r7
 508 0024 9343     		bics	r3, r2
 509 0026 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 510              		.loc 1 876 0
 511 0028 6168     		ldr	r1, [r4, #4]
 512 002a 0B68     		ldr	r3, [r1]
 513 002c A77E     		ldrb	r7, [r4, #26]
 514 002e 0722     		movs	r2, #7
 515 0030 BA40     		lsls	r2, r2, r7
 516 0032 9343     		bics	r3, r2
 517 0034 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 518              		.loc 1 877 0
 519 0036 FFF7FEFF 		bl	CyExitCriticalSection
 520              	.LVL33:
 879:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 521              		.loc 1 879 0
 522 003a 012E     		cmp	r6, #1
 523 003c 17D0     		beq	.L52
 524 003e 002E     		cmp	r6, #0
 525 0040 02D0     		beq	.L53
 526 0042 032E     		cmp	r6, #3
 527 0044 1FD0     		beq	.L54
 528 0046 21E0     		b	.L51
 529              	.L53:
 883:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (Mux_CapSense_SNS_GROUND_CONNEC
 530              		.loc 1 883 0
 531 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 532              	.LVL34:
 884:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 533              		.loc 1 884 0
 534 004c 6268     		ldr	r2, [r4, #4]
 535 004e 1168     		ldr	r1, [r2]
 536 0050 A77E     		ldrb	r7, [r4, #26]
 537 0052 0623     		movs	r3, #6
 538 0054 BB40     		lsls	r3, r3, r7
 539 0056 0B43     		orrs	r3, r1
 540 0058 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 541              		.loc 1 885 0
 542 005a A168     		ldr	r1, [r4, #8]
 543 005c 0B68     		ldr	r3, [r1]
 544 005e 677E     		ldrb	r7, [r4, #25]
 545 0060 0122     		movs	r2, #1
 546 0062 BA40     		lsls	r2, r2, r7
 547 0064 9343     		bics	r3, r2
 548 0066 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 549              		.loc 1 886 0
 550 0068 FFF7FEFF 		bl	CyExitCriticalSection
 551              	.LVL35:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 50


 887:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 552              		.loc 1 887 0
 553 006c 0EE0     		b	.L51
 554              	.L52:
 890:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 555              		.loc 1 890 0
 556 006e FFF7FEFF 		bl	CyEnterCriticalSection
 557              	.LVL36:
 891:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 558              		.loc 1 891 0
 559 0072 A168     		ldr	r1, [r4, #8]
 560 0074 0B68     		ldr	r3, [r1]
 561 0076 677E     		ldrb	r7, [r4, #25]
 562 0078 0122     		movs	r2, #1
 563 007a BA40     		lsls	r2, r2, r7
 564 007c 9343     		bics	r3, r2
 565 007e 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 566              		.loc 1 892 0
 567 0080 FFF7FEFF 		bl	CyExitCriticalSection
 568              	.LVL37:
 893:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 569              		.loc 1 893 0
 570 0084 02E0     		b	.L51
 571              	.L54:
 898:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 572              		.loc 1 898 0
 573 0086 2000     		movs	r0, r4
 574 0088 FFF7FEFF 		bl	Mux_CapSense_CSDConnectSns
 575              	.LVL38:
 576              	.L51:
 933:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 577              		.loc 1 933 0 discriminator 2
 578 008c 1C34     		adds	r4, r4, #28
 579              	.LVL39:
 871:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 580              		.loc 1 871 0 discriminator 2
 581 008e 0135     		adds	r5, r5, #1
 582              	.LVL40:
 583              	.L50:
 871:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 584              		.loc 1 871 0 is_stmt 0 discriminator 1
 585 0090 002D     		cmp	r5, #0
 586 0092 C0D0     		beq	.L55
 935:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 587              		.loc 1 935 0 is_stmt 1
 588              		@ sp needed
 589              	.LVL41:
 590              	.LVL42:
 591              	.LVL43:
 592 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 593              	.L57:
 594 0096 C046     		.align	2
 595              	.L56:
 596 0098 00000000 		.word	Mux_CapSense_dsFlash
 597              		.cfi_endproc
 598              	.LFE8:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 51


 599              		.size	Mux_CapSense_SetPinState, .-Mux_CapSense_SetPinState
 600              		.section	.text.Mux_CapSense_SsSetAllIOsState,"ax",%progbits
 601              		.align	2
 602              		.global	Mux_CapSense_SsSetAllIOsState
 603              		.code	16
 604              		.thumb_func
 605              		.type	Mux_CapSense_SsSetAllIOsState, %function
 606              	Mux_CapSense_SsSetAllIOsState:
 607              	.LFB11:
1167:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8  interruptState;
 608              		.loc 1 1167 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL44:
 613 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 614              		.cfi_def_cfa_offset 24
 615              		.cfi_offset 3, -24
 616              		.cfi_offset 4, -20
 617              		.cfi_offset 5, -16
 618              		.cfi_offset 6, -12
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 4F46     		mov	r7, r9
 622 0004 4646     		mov	r6, r8
 623 0006 C0B4     		push	{r6, r7}
 624              		.cfi_def_cfa_offset 32
 625              		.cfi_offset 8, -32
 626              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 627              		.loc 1 1180 0
 628 0008 0128     		cmp	r0, #1
 629 000a 0BD0     		beq	.L64
 630 000c 0228     		cmp	r0, #2
 631 000e 04D0     		beq	.L61
1184:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 632              		.loc 1 1184 0
 633 0010 0023     		movs	r3, #0
 634 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_GPIO;
 635              		.loc 1 1183 0
 636 0014 0633     		adds	r3, r3, #6
 637 0016 9846     		mov	r8, r3
 638 0018 07E0     		b	.L60
 639              	.L61:
 640              	.LVL45:
1192:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 641              		.loc 1 1192 0
 642 001a 0523     		movs	r3, #5
 643 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_CSD_SHIELD;
 644              		.loc 1 1191 0
 645 001e 0023     		movs	r3, #0
 646 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
 647              		.loc 1 1193 0
 648 0022 02E0     		b	.L60
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 52


 649              	.LVL46:
 650              	.L64:
1188:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
 651              		.loc 1 1188 0
 652 0024 0023     		movs	r3, #0
 653 0026 9946     		mov	r9, r3
1187:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             newPinHsiomVal = Mux_CapSense_HSIOM_SEL_GPIO;
 654              		.loc 1 1187 0
 655 0028 9846     		mov	r8, r3
 656              	.L60:
 657              	.LVL47:
1201:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < Mux_CapSense_TOTAL_ELECTRODES; loopIndex++)
 658              		.loc 1 1201 0
 659 002a 144C     		ldr	r4, .L65
1202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 660              		.loc 1 1202 0
 661 002c 0025     		movs	r5, #0
 662 002e 1FE0     		b	.L62
 663              	.LVL48:
 664              	.L63:
1204:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 665              		.loc 1 1204 0 discriminator 3
 666 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 667              	.LVL49:
1206:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 668              		.loc 1 1206 0 discriminator 3
 669 0034 2268     		ldr	r2, [r4]
 670 0036 1368     		ldr	r3, [r2]
 671              	.LVL50:
1207:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 672              		.loc 1 1207 0 discriminator 3
 673 0038 2169     		ldr	r1, [r4, #16]
 674 003a 8B43     		bics	r3, r1
 675              	.LVL51:
1208:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 676              		.loc 1 1208 0 discriminator 3
 677 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(Mux_CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 678              		.loc 1 1210 0 discriminator 3
 679 003e 6668     		ldr	r6, [r4, #4]
 680 0040 3268     		ldr	r2, [r6]
 681              	.LVL52:
1211:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 682              		.loc 1 1211 0 discriminator 3
 683 0042 A77E     		ldrb	r7, [r4, #26]
 684 0044 0721     		movs	r1, #7
 685 0046 B940     		lsls	r1, r1, r7
 686 0048 8A43     		bics	r2, r1
 687              	.LVL53:
1212:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 688              		.loc 1 1212 0 discriminator 3
 689 004a 4146     		mov	r1, r8
 690 004c B940     		lsls	r1, r1, r7
 691 004e 0A43     		orrs	r2, r1
 692              	.LVL54:
1213:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 693              		.loc 1 1213 0 discriminator 3
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 53


 694 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 695              		.loc 1 1215 0 discriminator 3
 696 0052 227E     		ldrb	r2, [r4, #24]
 697              	.LVL55:
 698 0054 4946     		mov	r1, r9
 699 0056 9140     		lsls	r1, r1, r2
 700 0058 0B43     		orrs	r3, r1
 701              	.LVL56:
1216:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 702              		.loc 1 1216 0 discriminator 3
 703 005a 2268     		ldr	r2, [r4]
 704 005c 1360     		str	r3, [r2]
 705              	.LVL57:
1218:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 706              		.loc 1 1218 0 discriminator 3
 707 005e A268     		ldr	r2, [r4, #8]
 708 0060 1368     		ldr	r3, [r2]
 709              	.LVL58:
1219:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 710              		.loc 1 1219 0 discriminator 3
 711 0062 6169     		ldr	r1, [r4, #20]
 712 0064 8B43     		bics	r3, r1
 713              	.LVL59:
1220:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 714              		.loc 1 1220 0 discriminator 3
 715 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 716              		.loc 1 1222 0 discriminator 3
 717 0068 FFF7FEFF 		bl	CyExitCriticalSection
 718              	.LVL60:
1225:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 719              		.loc 1 1225 0 discriminator 3
 720 006c 1C34     		adds	r4, r4, #28
 721              	.LVL61:
1202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 722              		.loc 1 1202 0 discriminator 3
 723 006e 0135     		adds	r5, r5, #1
 724              	.LVL62:
 725              	.L62:
1202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 726              		.loc 1 1202 0 is_stmt 0 discriminator 1
 727 0070 072D     		cmp	r5, #7
 728 0072 DDD9     		bls	.L63
1238:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 729              		.loc 1 1238 0 is_stmt 1
 730              		@ sp needed
 731              	.LVL63:
 732              	.LVL64:
 733              	.LVL65:
 734              	.LVL66:
 735 0074 0CBC     		pop	{r2, r3}
 736 0076 9046     		mov	r8, r2
 737 0078 9946     		mov	r9, r3
 738 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 739              	.L66:
 740              		.align	2
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 54


 741              	.L65:
 742 007c 00000000 		.word	Mux_CapSense_ioList
 743              		.cfi_endproc
 744              	.LFE11:
 745              		.size	Mux_CapSense_SsSetAllIOsState, .-Mux_CapSense_SsSetAllIOsState
 746              		.section	.text.Mux_CapSense_SsPostAllWidgetsScan,"ax",%progbits
 747              		.align	2
 748              		.global	Mux_CapSense_SsPostAllWidgetsScan
 749              		.code	16
 750              		.thumb_func
 751              		.type	Mux_CapSense_SsPostAllWidgetsScan, %function
 752              	Mux_CapSense_SsPostAllWidgetsScan:
 753              	.LFB12:
1317:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*
 754              		.loc 1 1317 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
1374:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 759              		.loc 1 1374 0
 760              		@ sp needed
 761 0000 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE12:
 764              		.size	Mux_CapSense_SsPostAllWidgetsScan, .-Mux_CapSense_SsPostAllWidgetsScan
 765 0002 C046     		.section	.text.Mux_CapSense_SsIsrInitialize,"ax",%progbits
 766              		.align	2
 767              		.global	Mux_CapSense_SsIsrInitialize
 768              		.code	16
 769              		.thumb_func
 770              		.type	Mux_CapSense_SsIsrInitialize, %function
 771              	Mux_CapSense_SsIsrInitialize:
 772              	.LFB13:
1394:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_ISR_StartEx(address);
 773              		.loc 1 1394 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL67:
 778 0000 10B5     		push	{r4, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 4, -8
 781              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 782              		.loc 1 1395 0
 783 0002 FFF7FEFF 		bl	Mux_CapSense_ISR_StartEx
 784              	.LVL68:
1396:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 785              		.loc 1 1396 0
 786              		@ sp needed
 787 0006 10BD     		pop	{r4, pc}
 788              		.cfi_endproc
 789              	.LFE13:
 790              		.size	Mux_CapSense_SsIsrInitialize, .-Mux_CapSense_SsIsrInitialize
 791              		.section	.text.Mux_CapSense_SsSetModClkClockDivider,"ax",%progbits
 792              		.align	2
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 55


 793              		.global	Mux_CapSense_SsSetModClkClockDivider
 794              		.code	16
 795              		.thumb_func
 796              		.type	Mux_CapSense_SsSetModClkClockDivider, %function
 797              	Mux_CapSense_SsSetModClkClockDivider:
 798              	.LFB14:
1417:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK)
 799              		.loc 1 1417 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL69:
1420:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  ((uint32)Mux_CapSense_ModClk__DIV_ID <<
 805              		.loc 1 1420 0
 806 0000 074A     		ldr	r2, .L71
 807 0002 084B     		ldr	r3, .L71+4
 808 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 809              		.loc 1 1430 0
 810 0006 0138     		subs	r0, r0, #1
 811              	.LVL70:
 812 0008 0002     		lsls	r0, r0, #8
 813              	.LVL71:
 814 000a 074B     		ldr	r3, .L71+8
 815 000c 1860     		str	r0, [r3]
 816              	.L70:
1433:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 817              		.loc 1 1433 0 discriminator 1
 818 000e 054B     		ldr	r3, .L71+4
 819 0010 1B68     		ldr	r3, [r3]
 820 0012 002B     		cmp	r3, #0
 821 0014 FBDB     		blt	.L70
1439:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                  (uint32)(((uint32)Mux_CapSense_ModClk__DIV_ID << Mux_CapSense_MODCLK_CMD_DIV_SHIFT
 822              		.loc 1 1439 0
 823 0016 054A     		ldr	r2, .L71+12
 824 0018 024B     		ldr	r3, .L71+4
 825 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 826              		.loc 1 1464 0
 827              		@ sp needed
 828 001c 7047     		bx	lr
 829              	.L72:
 830 001e C046     		.align	2
 831              	.L71:
 832 0020 40000040 		.word	1073741888
 833 0024 00000140 		.word	1073807360
 834 0028 00030140 		.word	1073808128
 835 002c 40FF0080 		.word	-2147418304
 836              		.cfi_endproc
 837              	.LFE14:
 838              		.size	Mux_CapSense_SsSetModClkClockDivider, .-Mux_CapSense_SsSetModClkClockDivider
 839              		.section	.text.Mux_CapSense_SsSetSnsClockDivider,"ax",%progbits
 840              		.align	2
 841              		.global	Mux_CapSense_SsSetSnsClockDivider
 842              		.code	16
 843              		.thumb_func
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 56


 844              		.type	Mux_CapSense_SsSetSnsClockDivider, %function
 845              	Mux_CapSense_SsSetSnsClockDivider:
 846              	.LFB15:
1485:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
 847              		.loc 1 1485 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL72:
1501:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      ((uint32)Mux_CapSense_SnsClk__DIV_ID <<
 853              		.loc 1 1501 0
 854 0000 074A     		ldr	r2, .L75
 855 0002 084B     		ldr	r3, .L75+4
 856 0004 1A60     		str	r2, [r3]
1511:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 857              		.loc 1 1511 0
 858 0006 0138     		subs	r0, r0, #1
 859              	.LVL73:
 860 0008 0002     		lsls	r0, r0, #8
 861              	.LVL74:
 862 000a 074B     		ldr	r3, .L75+8
 863 000c 1860     		str	r0, [r3]
 864              	.L74:
1514:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 865              		.loc 1 1514 0 discriminator 1
 866 000e 054B     		ldr	r3, .L75+4
 867 0010 1B68     		ldr	r3, [r3]
 868 0012 002B     		cmp	r3, #0
 869 0014 FBDB     		blt	.L74
1520:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                      (uint32)(((uint32)Mux_CapSense_SnsClk__DIV_ID << Mux_CapSense_SNSCLK_CMD_DIV_S
 870              		.loc 1 1520 0
 871 0016 054A     		ldr	r2, .L75+12
 872 0018 024B     		ldr	r3, .L75+4
 873 001a 1A60     		str	r2, [r3]
1546:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 874              		.loc 1 1546 0
 875              		@ sp needed
 876 001c 7047     		bx	lr
 877              	.L76:
 878 001e C046     		.align	2
 879              	.L75:
 880 0020 41000040 		.word	1073741889
 881 0024 00000140 		.word	1073807360
 882 0028 04030140 		.word	1073808132
 883 002c 41FF0080 		.word	-2147418303
 884              		.cfi_endproc
 885              	.LFE15:
 886              		.size	Mux_CapSense_SsSetSnsClockDivider, .-Mux_CapSense_SsSetSnsClockDivider
 887              		.section	.text.Mux_CapSense_SsSetClockDividers,"ax",%progbits
 888              		.align	2
 889              		.global	Mux_CapSense_SsSetClockDividers
 890              		.code	16
 891              		.thumb_func
 892              		.type	Mux_CapSense_SsSetClockDividers, %function
 893              	Mux_CapSense_SsSetClockDividers:
 894              	.LFB16:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 57


1569:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Configure Mod clock */
 895              		.loc 1 1569 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LVL75:
 900 0000 10B5     		push	{r4, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 4, -8
 903              		.cfi_offset 14, -4
 904 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 905              		.loc 1 1571 0
 906 0004 0800     		movs	r0, r1
 907              	.LVL76:
 908 0006 FFF7FEFF 		bl	Mux_CapSense_SsSetModClkClockDivider
 909              	.LVL77:
1574:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 910              		.loc 1 1574 0
 911 000a 2000     		movs	r0, r4
 912 000c FFF7FEFF 		bl	Mux_CapSense_SsSetSnsClockDivider
 913              	.LVL78:
1575:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 914              		.loc 1 1575 0
 915              		@ sp needed
 916              	.LVL79:
 917 0010 10BD     		pop	{r4, pc}
 918              		.cfi_endproc
 919              	.LFE16:
 920              		.size	Mux_CapSense_SsSetClockDividers, .-Mux_CapSense_SsSetClockDividers
 921 0012 C046     		.section	.text.Mux_CapSense_CalibrateWidget,"ax",%progbits
 922              		.align	2
 923              		.global	Mux_CapSense_CalibrateWidget
 924              		.code	16
 925              		.thumb_func
 926              		.type	Mux_CapSense_CalibrateWidget, %function
 927              	Mux_CapSense_CalibrateWidget:
 928              	.LFB17:
1621:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 929              		.loc 1 1621 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL80:
 934 0000 10B5     		push	{r4, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 4, -8
 937              		.cfi_offset 14, -4
 938 0002 031E     		subs	r3, r0, #0
 939              	.LVL81:
1626:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
 940              		.loc 1 1626 0
 941 0004 01D1     		bne	.L81
1622:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 942              		.loc 1 1622 0
 943 0006 0020     		movs	r0, #0
 944              	.LVL82:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 58


 945 0008 00E0     		b	.L79
 946              	.LVL83:
 947              	.L81:
1628:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
 948              		.loc 1 1628 0
 949 000a 0120     		movs	r0, #1
 950              	.LVL84:
 951              	.L79:
1646:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
 952              		.loc 1 1646 0
 953 000c 0028     		cmp	r0, #0
 954 000e 03D1     		bne	.L80
1685:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 955              		.loc 1 1685 0
 956 0010 5521     		movs	r1, #85
 957 0012 1800     		movs	r0, r3
 958              	.LVL85:
 959 0014 FFF7FEFF 		bl	Mux_CapSense_CSDCalibrateWidget
 960              	.LVL86:
 961              	.L80:
1701:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 962              		.loc 1 1701 0
 963              		@ sp needed
 964 0018 10BD     		pop	{r4, pc}
 965              		.cfi_endproc
 966              	.LFE17:
 967              		.size	Mux_CapSense_CalibrateWidget, .-Mux_CapSense_CalibrateWidget
 968 001a C046     		.section	.text.Mux_CapSense_CalibrateAllWidgets,"ax",%progbits
 969              		.align	2
 970              		.global	Mux_CapSense_CalibrateAllWidgets
 971              		.code	16
 972              		.thumb_func
 973              		.type	Mux_CapSense_CalibrateAllWidgets, %function
 974              	Mux_CapSense_CalibrateAllWidgets:
 975              	.LFB18:
1738:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 976              		.loc 1 1738 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980 0000 70B5     		push	{r4, r5, r6, lr}
 981              		.cfi_def_cfa_offset 16
 982              		.cfi_offset 4, -16
 983              		.cfi_offset 5, -12
 984              		.cfi_offset 6, -8
 985              		.cfi_offset 14, -4
 986              	.LVL87:
1742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 987              		.loc 1 1742 0
 988 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 wdgtIndex;
 989              		.loc 1 1739 0
 990 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 991              		.loc 1 1742 0
 992 0006 04E0     		b	.L83
 993              	.LVL88:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 59


 994              	.L84:
1744:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 995              		.loc 1 1744 0 discriminator 3
 996 0008 2000     		movs	r0, r4
 997 000a FFF7FEFF 		bl	Mux_CapSense_CalibrateWidget
 998              	.LVL89:
 999 000e 0543     		orrs	r5, r0
 1000              	.LVL90:
1742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1001              		.loc 1 1742 0 discriminator 3
 1002 0010 0134     		adds	r4, r4, #1
 1003              	.LVL91:
 1004              	.L83:
1742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1005              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1006 0012 002C     		cmp	r4, #0
 1007 0014 F8D0     		beq	.L84
1748:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ANYMODE_AUTOCAL) */
 1008              		.loc 1 1748 0 is_stmt 1
 1009 0016 2800     		movs	r0, r5
 1010              		@ sp needed
 1011              	.LVL92:
 1012              	.LVL93:
 1013 0018 70BD     		pop	{r4, r5, r6, pc}
 1014              		.cfi_endproc
 1015              	.LFE18:
 1016              		.size	Mux_CapSense_CalibrateAllWidgets, .-Mux_CapSense_CalibrateAllWidgets
 1017 001a C046     		.section	.text.Mux_CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1018              		.align	2
 1019              		.global	Mux_CapSense_SsCSDGetColSnsClkDivider
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	Mux_CapSense_SsCSDGetColSnsClkDivider, %function
 1023              	Mux_CapSense_SsCSDGetColSnsClkDivider:
 1024              	.LFB23:
2173:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif  /* (Mux_CapSense_DISABLE == Mux_CapSense_CSDV2) */
2174:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  trims are contained in the Mux_CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     void Mux_CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, Mux_CapSense_immunity[value]);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 60


2195:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     void Mux_CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (0u != Mux_CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
2221:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
2223:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if((Mux_CapSense_CLK_SOURCE_PRS8  == Mux_CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_CLK_SOURCE_PRS12 == Mux_CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((0u != Mux_CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              ((Mux_CapSense_DISABLE == Mux_CapSense_CSX_COMMON_TX_CLK_EN) && (0u != Mux_CapSense_TO
2233:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &Mux_CapSense_dsFlash.wdgtArray[Mux_
2234:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (Mux_CapSense_RAM_WD_BASE_STRUCT *)ptr
2235:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch(Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[Mux_CapSense_widgetInd
2238:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (0u != Mux_CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     snsClkDivider = Mux_CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #else /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         if (Mux_CapSense_dsFlash.wdgtArray[Mux_CapSense_widgetIndex].numCols <= Mux
2248:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         else
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 61


2252:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #endif /* (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGE
2258:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 freqOffset1 = Mux_CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 freqOffset2 = Mux_CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if((Mux_CapSense_CLK_SOURCE_PRS8  == Mux_CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     (Mux_CapSense_CLK_SOURCE_PRS12 == Mux_CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         if (Mux_CapSense_dsFlash.wdgtArray[Mux_CapSense_widgetIndex].numCols <= Mux
2270:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #endif /* (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGE
2280:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     default:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 62


2309:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
2315:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     conversionsNum = Mux_CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint3
2317:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     CY_SET_REG32(Mux_CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & Mux_CapSense_SEQ_
2318:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
2319:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if((Mux_CapSense_CLK_SOURCE_PRS8  == Mux_CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     (Mux_CapSense_CLK_SOURCE_PRS12 == Mux_CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* #if (0u != Mux_CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (0u != Mux_CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     snsClkDivider = Mux_CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #else /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 freqOffset1 = Mux_CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 freqOffset2 = Mux_CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     case Mux_CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 63


2366:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* #if (0u != Mux_CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif  /* (Mux_CapSense_ENABLE == Mux_CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)))
2392:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < Mux_CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrWdgt = (Mux_CapSense_RAM_WD_BASE_STRUCT *)Mux_CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2
2412:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch (Mux_CapSense_GET_SENSE_METHOD(&Mux_CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
2416:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && (Mux_CapSense_ENABLE == Mux_CapSense_C
2421:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 64


2423:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || (Mux_CapSense_ENABLE == Mux_Cap
2425:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_ENABLE == Mux_CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
2440:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, Mux_CapSense_RAM_WD_BASE_STRU
2458:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if(Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if(Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
2464:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
2466:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if(Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             snsClkDivider = Mux_CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if(Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
2473:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 conversionsNum = Mux_CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2474:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                                                              Mux_Ca
2475:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrSize = Mux_CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if (Mux_CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 65


2480:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     lfsrSize = Mux_CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2483:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrScale = Mux_CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrSize = Mux_CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2491:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
2493:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrSize = (uint8)Mux_CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << Mux_CapSense_CLK_SOURCE_LFSR_SCALE_
2500:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if ((Mux_CapSense_WD_TOUCHPAD_E == (Mux_CapSense_WD_TYPE_ENUM)Mux_CapSense_dsFlash.wdgt
2503:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_WD_MATRIX_BUTTON_E == (Mux_CapSense_WD_TYPE_ENUM)Mux_CapSense_dsFlash
2504:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if(Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     snsClkDivider = Mux_CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #if(Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
2509:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         lfsrSize = Mux_CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         if (Mux_CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                             lfsrSize = Mux_CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)
2517:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         lfsrScale = Mux_CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         lfsrSize = Mux_CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2525:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
2527:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     lfsrSize = (uint8)Mux_CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif /* (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << Mux_CapSense_CLK_SOURCE_
2532:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 66


2537:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2))
2539:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     static void Mux_CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, Mux_CapSense_RAM_WD_BASE_STRUCT 
2556:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****              (Mux_CapSense_DISABLE == Mux_CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if(Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_DISABLE == Mux_CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 snsClkDivider = Mux_CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrSize = Mux_CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrScale = Mux_CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrSize = (uint8)Mux_CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrSize = (uint8)Mux_CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << Mux_CapSense_CLK_SOURCE_LFSR_SCALE_
2586:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && (Mux_CapSense_ENABLE == Mux_CapSense_CSD
2588:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if(((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_DISABLE == Mux_CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSX_TX_CLK_SOURCE)) ||\
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 67


2594:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** static uint8 Mux_CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if((Mux_CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****        (Mux_CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****        (0uL == (conversionsNum % Mux_CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrSize = Mux_CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else if((Mux_CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (0uL == (conversionsNum % Mux_CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrSize = Mux_CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else if((Mux_CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (0uL == (conversionsNum % Mux_CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrSize = Mux_CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else if((Mux_CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (0uL == (conversionsNum % Mux_CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrSize = Mux_CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrSize = (uint8)Mux_CapSense_CLK_SOURCE_DIRECT;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 68


2651:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          For devices with Mux_CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          For devices with Mux_CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *          Mux_CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** static uint8 Mux_CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrRange = Mux_CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 69


2708:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrRange = Mux_CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrRange = Mux_CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         case Mux_CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrRange = Mux_CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if((lfsrSize != Mux_CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         while(lfsrDither < Mux_CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         if(lfsrDither > Mux_CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
2758:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (((Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_DISABLE == Mux_CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****           ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 70


2765:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
2769:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 Mux_CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 1025              		.loc 1 2793 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030              	.LVL94:
2794:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE != Mux_CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             ptrWdgt = (Mux_CapSense_RAM_WD_BASE_STRUCT *)
 1031              		.loc 1 2800 0
 1032 0000 4001     		lsls	r0, r0, #5
 1033              	.LVL95:
 1034 0002 024B     		ldr	r3, .L86
 1035 0004 1818     		adds	r0, r3, r0
 1036 0006 4368     		ldr	r3, [r0, #4]
 1037              	.LVL96:
2801:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1038              		.loc 1 2803 0
 1039 0008 9889     		ldrh	r0, [r3, #12]
 1040              	.LVL97:
2804:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             retVal = (uint32)Mux_CapSense_dsRam.snsCsdClk;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 71


2806:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
 1041              		.loc 1 2811 0
 1042              		@ sp needed
 1043 000a 7047     		bx	lr
 1044              	.L87:
 1045              		.align	2
 1046              	.L86:
 1047 000c 00000000 		.word	Mux_CapSense_dsFlash
 1048              		.cfi_endproc
 1049              	.LFE23:
 1050              		.size	Mux_CapSense_SsCSDGetColSnsClkDivider, .-Mux_CapSense_SsCSDGetColSnsClkDivider
 1051              		.section	.text.Mux_CapSense_SsCSDGetRowSnsClkDivider,"ax",%progbits
 1052              		.align	2
 1053              		.global	Mux_CapSense_SsCSDGetRowSnsClkDivider
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	Mux_CapSense_SsCSDGetRowSnsClkDivider, %function
 1057              	Mux_CapSense_SsCSDGetRowSnsClkDivider:
 1058              	.LFB24:
2812:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Function Name: Mux_CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 Mux_CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1059              		.loc 1 2837 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064              	.LVL98:
2838:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 retVal;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 72


2839:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE != Mux_CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 ptrWdgt = (Mux_CapSense_RAM_WD_BASE_STRUCT *)
 1065              		.loc 1 2844 0
 1066 0000 4001     		lsls	r0, r0, #5
 1067              	.LVL99:
 1068 0002 024B     		ldr	r3, .L89
 1069 0004 1818     		adds	r0, r3, r0
 1070 0006 4368     		ldr	r3, [r0, #4]
 1071              	.LVL100:
2845:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
 1072              		.loc 1 2847 0
 1073 0008 D889     		ldrh	r0, [r3, #14]
 1074              	.LVL101:
2848:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 retVal = (uint32)Mux_CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 1075              		.loc 1 2855 0
 1076              		@ sp needed
 1077 000a 7047     		bx	lr
 1078              	.L90:
 1079              		.align	2
 1080              	.L89:
 1081 000c 00000000 		.word	Mux_CapSense_dsFlash
 1082              		.cfi_endproc
 1083              	.LFE24:
 1084              		.size	Mux_CapSense_SsCSDGetRowSnsClkDivider, .-Mux_CapSense_SsCSDGetRowSnsClkDivider
 1085              		.section	.text.Mux_CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1086              		.align	2
 1087              		.global	Mux_CapSense_SsCSDCalcPrsSize
 1088              		.code	16
 1089              		.thumb_func
 1090              		.type	Mux_CapSense_SsCSDCalcPrsSize, %function
 1091              	Mux_CapSense_SsCSDCalcPrsSize:
 1092              	.LFB25:
2856:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* (Mux_CapSense_CSD_MATRIX_WIDGET_EN || Mux_CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * Function Name: Mux_CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 73


2868:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 Mux_CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1093              		.loc 1 2881 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              	.LVL102:
 1098 0000 10B5     		push	{r4, lr}
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 4, -8
 1101              		.cfi_offset 14, -4
 1102              	.LVL103:
2882:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if (Mux_CapSense_ENABLE != Mux_CapSense_CSDV2)
2886:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #if(Mux_CapSense_ENABLE == Mux_CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     modClkDivider = (uint32)Mux_CapSense_dsRam.modCsdClk;
 1103              		.loc 1 2887 0
 1104 0002 0B4B     		ldr	r3, .L95
 1105 0004 1C7F     		ldrb	r4, [r3, #28]
 1106              	.LVL104:
2888:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
 1107              		.loc 1 2894 0
 1108 0006 4200     		lsls	r2, r0, #1
 1109              	.LVL105:
2895:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             if ((snsClkDivider * Mux_CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001L
 1110              		.loc 1 2897 0
 1111 0008 4003     		lsls	r0, r0, #13
 1112 000a 801A     		subs	r0, r0, r2
 1113 000c 0123     		movs	r3, #1
 1114 000e 8B40     		lsls	r3, r3, r1
 1115 0010 013B     		subs	r3, r3, #1
 1116 0012 6343     		muls	r3, r4
 1117 0014 9842     		cmp	r0, r3
 1118 0016 05D9     		bls	.L93
2898:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 74


2899:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 prsSize = Mux_CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             else if ((snsClkDivider * Mux_CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000
 1119              		.loc 1 2902 0
 1120 0018 1102     		lsls	r1, r2, #8
 1121              	.LVL106:
 1122 001a 8A1A     		subs	r2, r1, r2
 1123              	.LVL107:
 1124 001c 9342     		cmp	r3, r2
 1125 001e 03D3     		bcc	.L94
2903:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 prsSize = Mux_CapSense_PRS_8_CONFIG;
 1126              		.loc 1 2905 0
 1127 0020 4020     		movs	r0, #64
 1128 0022 02E0     		b	.L92
 1129              	.LVL108:
 1130              	.L93:
2900:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
 1131              		.loc 1 2900 0
 1132 0024 C020     		movs	r0, #192
 1133 0026 00E0     		b	.L92
 1134              	.LVL109:
 1135              	.L94:
2906:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 prsSize = Mux_CapSense_CLK_SOURCE_DIRECT;
 1136              		.loc 1 2910 0
 1137 0028 0020     		movs	r0, #0
 1138              	.L92:
 1139              	.LVL110:
2911:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             return (uint8)prsSize;
 1140              		.loc 1 2913 0
 1141 002a C0B2     		uxtb	r0, r0
 1142              	.LVL111:
2914:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 1143              		.loc 1 2914 0
 1144              		@ sp needed
 1145              	.LVL112:
 1146 002c 10BD     		pop	{r4, pc}
 1147              	.L96:
 1148 002e C046     		.align	2
 1149              	.L95:
 1150 0030 00000000 		.word	Mux_CapSense_dsRam
 1151              		.cfi_endproc
 1152              	.LFE25:
 1153              		.size	Mux_CapSense_SsCSDCalcPrsSize, .-Mux_CapSense_SsCSDCalcPrsSize
 1154              		.section	.text.Mux_CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1155              		.align	2
 1156              		.code	16
 1157              		.thumb_func
 1158              		.type	Mux_CapSense_SsSetWidgetSenseClkSrc, %function
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 75


 1159              	Mux_CapSense_SsSetWidgetSenseClkSrc:
 1160              	.LFB22:
2458:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8 lfsrSize;
 1161              		.loc 1 2458 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              	.LVL113:
 1166 0000 70B5     		push	{r4, r5, r6, lr}
 1167              		.cfi_def_cfa_offset 16
 1168              		.cfi_offset 4, -16
 1169              		.cfi_offset 5, -12
 1170              		.cfi_offset 6, -8
 1171              		.cfi_offset 14, -4
 1172 0002 0400     		movs	r4, r0
 1173 0004 0E00     		movs	r6, r1
2470:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1174              		.loc 1 2470 0
 1175 0006 FFF7FEFF 		bl	Mux_CapSense_SsCSDGetColSnsClkDivider
 1176              	.LVL114:
2490:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 lfsrScale = 0u;
 1177              		.loc 1 2490 0
 1178 000a 4000     		lsls	r0, r0, #1
 1179              	.LVL115:
 1180 000c 3588     		ldrh	r5, [r6]
 1181 000e 2900     		movs	r1, r5
 1182 0010 FFF7FEFF 		bl	Mux_CapSense_SsCSDCalcPrsSize
 1183              	.LVL116:
2499:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1184              		.loc 1 2499 0
 1185 0014 3074     		strb	r0, [r6, #16]
2502:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_WD_MATRIX_BUTTON_E == (Mux_CapSense_WD_TYPE_ENUM)Mux_CapSense_dsFlash
 1186              		.loc 1 2502 0
 1187 0016 6301     		lsls	r3, r4, #5
 1188 0018 074A     		ldr	r2, .L99
 1189 001a D318     		adds	r3, r2, r3
 1190 001c 9B7E     		ldrb	r3, [r3, #26]
 1191 001e 043B     		subs	r3, r3, #4
 1192 0020 DBB2     		uxtb	r3, r3
 1193 0022 012B     		cmp	r3, #1
 1194 0024 07D8     		bhi	.L97
2506:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1195              		.loc 1 2506 0
 1196 0026 2000     		movs	r0, r4
 1197              	.LVL117:
 1198 0028 FFF7FEFF 		bl	Mux_CapSense_SsCSDGetRowSnsClkDivider
 1199              	.LVL118:
2524:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                         lfsrScale = 0u;
 1200              		.loc 1 2524 0
 1201 002c 4000     		lsls	r0, r0, #1
 1202              	.LVL119:
 1203 002e 2900     		movs	r1, r5
 1204 0030 FFF7FEFF 		bl	Mux_CapSense_SsCSDCalcPrsSize
 1205              	.LVL120:
2531:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             }
 1206              		.loc 1 2531 0
 1207 0034 7074     		strb	r0, [r6, #17]
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 76


 1208              	.L97:
2534:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 1209              		.loc 1 2534 0
 1210              		@ sp needed
 1211              	.LVL121:
 1212              	.LVL122:
 1213 0036 70BD     		pop	{r4, r5, r6, pc}
 1214              	.L100:
 1215              		.align	2
 1216              	.L99:
 1217 0038 00000000 		.word	Mux_CapSense_dsFlash
 1218              		.cfi_endproc
 1219              	.LFE22:
 1220              		.size	Mux_CapSense_SsSetWidgetSenseClkSrc, .-Mux_CapSense_SsSetWidgetSenseClkSrc
 1221              		.section	.text.Mux_CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1222              		.align	2
 1223              		.global	Mux_CapSense_SsInitializeSourceSenseClk
 1224              		.code	16
 1225              		.thumb_func
 1226              		.type	Mux_CapSense_SsInitializeSourceSenseClk, %function
 1227              	Mux_CapSense_SsInitializeSourceSenseClk:
 1228              	.LFB21:
2405:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32 wdgtIndex;
 1229              		.loc 1 2405 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233 0000 10B5     		push	{r4, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 4, -8
 1236              		.cfi_offset 14, -4
 1237              	.LVL123:
2409:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 1238              		.loc 1 2409 0
 1239 0002 0024     		movs	r4, #0
 1240 0004 07E0     		b	.L102
 1241              	.LVL124:
 1242              	.L103:
2411:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1243              		.loc 1 2411 0
 1244 0006 6301     		lsls	r3, r4, #5
 1245 0008 044A     		ldr	r2, .L104
 1246 000a D318     		adds	r3, r2, r3
 1247 000c 5968     		ldr	r1, [r3, #4]
 1248              	.LVL125:
2417:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 1249              		.loc 1 2417 0
 1250 000e 2000     		movs	r0, r4
 1251 0010 FFF7FEFF 		bl	Mux_CapSense_SsSetWidgetSenseClkSrc
 1252              	.LVL126:
2409:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 1253              		.loc 1 2409 0
 1254 0014 0134     		adds	r4, r4, #1
 1255              	.LVL127:
 1256              	.L102:
2409:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 1257              		.loc 1 2409 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 77


 1258 0016 002C     		cmp	r4, #0
 1259 0018 F5D0     		beq	.L103
2432:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) || \
 1260              		.loc 1 2432 0 is_stmt 1
 1261              		@ sp needed
 1262              	.LVL128:
 1263 001a 10BD     		pop	{r4, pc}
 1264              	.L105:
 1265              		.align	2
 1266              	.L104:
 1267 001c 00000000 		.word	Mux_CapSense_dsFlash
 1268              		.cfi_endproc
 1269              	.LFE21:
 1270              		.size	Mux_CapSense_SsInitializeSourceSenseClk, .-Mux_CapSense_SsInitializeSourceSenseClk
 1271              		.section	.text.Mux_CapSense_SetInactiveElectrodeState,"ax",%progbits
 1272              		.align	2
 1273              		.global	Mux_CapSense_SetInactiveElectrodeState
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	Mux_CapSense_SetInactiveElectrodeState, %function
 1277              	Mux_CapSense_SetInactiveElectrodeState:
 1278              	.LFB27:
2915:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* (Mux_CapSense_CLK_SOURCE_PRSAUTO == Mux_CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2)
2920:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     void Mux_CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
2940:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(Mux_CapSense_EXT_CAP_HSIOM_PTR) & Mux_CapSense_EXT_CAP_HSIOM_MASK;
2948:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         drReg = CY_GET_REG32(Mux_CapSense_EXT_CAP_DR_PTR) & Mux_CapSense_EXT_CAP_DR_MASK;
2949:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         pcReg = CY_GET_REG32(Mux_CapSense_EXT_CAP_PC_PTR) & Mux_CapSense_EXT_CAP_PC_MASK;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 78


2950:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2953:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_EXT_CAP_HSIOM_PTR);
2954:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)Mux_CapSense_EXT_CAP_HSIOM_MASK);
2955:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2956:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2957:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2960:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_EXT_CAP_DR_PTR);
2961:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)Mux_CapSense_EXT_CAP_DR_MASK);
2962:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_EXT_CAP_DR_PTR, newRegValue);
2963:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2964:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2967:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_EXT_CAP_PC_PTR);
2968:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)Mux_CapSense_EXT_CAP_PC_MASK));
2969:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue |= (Mux_CapSense_EXT_CAP_PC_STRONG_CFG);
2970:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_EXT_CAP_PC_PTR, newRegValue);
2971:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2972:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
2975:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2978:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_EXT_CAP_PC_PTR);
2979:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)Mux_CapSense_EXT_CAP_PC_MASK));
2980:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue |= pcReg;
2981:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_EXT_CAP_PC_PTR, newRegValue);
2982:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2983:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2985:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_EXT_CAP_DR_PTR);
2986:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)Mux_CapSense_EXT_CAP_DR_MASK);
2987:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue |= drReg;
2988:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_EXT_CAP_DR_PTR, newRegValue);
2989:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2990:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2992:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(Mux_CapSense_EXT_CAP_HSIOM_PTR);
2993:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)Mux_CapSense_EXT_CAP_HSIOM_MASK);
2994:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         newRegValue |= hsiomReg;
2995:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CY_SET_REG32(Mux_CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2996:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2997:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
2998:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
3000:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if (Mux_CapSense_ENABLE == Mux_CapSense_CSDV1)
3003:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 79


3007:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     void Mux_CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
3025:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(Mux_CapSense_CMOD_HSIOM_PTR) & Mux_CapSense_EXT_CAP_HSI
3026:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(Mux_CapSense_CMOD_DR_PTR) & Mux_CapSense_EXT_CAP_DR_MASK_C
3027:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(Mux_CapSense_CMOD_PC_PTR) & Mux_CapSense_EXT_CAP_PC_MASK_C
3028:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if((Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(Mux_CapSense_CSH_HSIOM_PTR) & Mux_CapSense_EXT_CAP_H
3033:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(Mux_CapSense_CSH_DR_PTR) & Mux_CapSense_EXT_CAP_DR_MASK
3034:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(Mux_CapSense_CSH_PC_PTR) & Mux_CapSense_EXT_CAP_PC_MASK
3035:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
3039:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(Mux_CapSense_CintA_HSIOM_PTR) & Mux_CapSense_EXT_CAP_H
3041:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(Mux_CapSense_CintA_DR_PTR) & Mux_CapSense_EXT_CAP_DR_MASK
3042:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(Mux_CapSense_CintA_PC_PTR) & Mux_CapSense_EXT_CAP_PC_MASK
3043:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(Mux_CapSense_CintB_HSIOM_PTR) & Mux_CapSense_EXT_CAP_H
3046:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(Mux_CapSense_CintB_DR_PTR) & Mux_CapSense_EXT_CAP_DR_MASK
3047:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(Mux_CapSense_CintB_PC_PTR) & Mux_CapSense_EXT_CAP_PC_MASK
3048:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
3051:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_HSIOM_PTR, Mux_CapSense_EXT_CAP_HSIOM_MASK
3053:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_DR_PTR, Mux_CapSense_EXT_CAP_DR_MASK_CMOD,
3055:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_PC_PTR, Mux_CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if((Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_HSIOM_PTR, Mux_CapSense_EXT_CAP_HSIOM_M
3062:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                Mux_CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_DR_PTR, Mux_CapSense_EXT_CAP_DR_MASK_CS
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 80


3064:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_PC_PTR, Mux_CapSense_EXT_CAP_PC_MASK_CS
3065:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                Mux_CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
3070:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_HSIOM_PTR, Mux_CapSense_EXT_CAP_HSIOM_MAS
3072:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_DR_PTR, Mux_CapSense_EXT_CAP_DR_MASK_CINT
3074:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_PC_PTR, Mux_CapSense_EXT_CAP_PC_MASK_CINT
3075:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_HSIOM_PTR, Mux_CapSense_EXT_CAP_HSIOM_MAS
3079:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_DR_PTR, Mux_CapSense_EXT_CAP_DR_MASK_CINT
3081:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_PC_PTR, Mux_CapSense_EXT_CAP_PC_MASK_CINT
3082:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
3089:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #if((Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                Mux_CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                Mux_CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_WriteBitsSafe(Mux_CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                                Mux_CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
3110:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 81


3121:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV1) */
3128:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #if((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN))
3132:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * Function Name: Mux_CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *   - Mux_CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     The Mux_CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *   - Mux_CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     The Mux_CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *   - Mux_CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     This register is initialized with the Mux_CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     The Mux_CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *   - Mux_CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     capacitance. This register is initialized with the Mux_CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     The Mux_CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *   - Mux_CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     the Mux_CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     The Mux_CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 82


3178:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *        - Mux_CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *        - Mux_CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *        - Mux_CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *        - Mux_CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *        - Mux_CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *         - Mux_CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *         - Mux_CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *         - Mux_CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *           Mux_CapSense_SNS_CONNECTION_SHIELD option for the Mux_CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint32_t Mux_CapSense_SetInactiveElectrodeState(Mux_CapSense_OPERATION_MODE_ENUM mode, uint32_t
3205:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 1279              		.loc 1 3205 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              	.LVL129:
 1284 0000 10B5     		push	{r4, lr}
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 4, -8
 1287              		.cfi_offset 14, -4
 1288              	.LVL130:
3206:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         switch(mode)
 1289              		.loc 1 3208 0
 1290 0002 0028     		cmp	r0, #0
 1291 0004 03D1     		bne	.L110
3209:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if(Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN)
3211:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.scanCsdISC = (uint8)state;
 1292              		.loc 1 3212 0
 1293 0006 8A23     		movs	r3, #138
 1294 0008 034A     		ldr	r2, .L111
 1295 000a D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
 1296              		.loc 1 3213 0
 1297 000c 03E0     		b	.L109
 1298              	.L110:
3214:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 83


3215:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if(Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
3217:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if((Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN))
3225:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if((Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN))
3233:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if((Mux_CapSense_ENABLE == Mux_CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             (Mux_CapSense_ENABLE == Mux_CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             case Mux_CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 if((Mux_CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                    (Mux_CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                     Mux_CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             CYASSERT(0u);
 1299              		.loc 1 3256 0 discriminator 1
 1300 000e 0020     		movs	r0, #0
 1301              	.LVL131:
 1302 0010 FFF7FEFF 		bl	CyHalt
 1303              	.LVL132:
3257:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1304              		.loc 1 3257 0 discriminator 1
 1305 0014 0120     		movs	r0, #1
 1306              	.LVL133:
 1307              	.L109:
3258:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     }
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 84


 1308              		.loc 1 3262 0
 1309              		@ sp needed
 1310 0016 10BD     		pop	{r4, pc}
 1311              	.L112:
 1312              		.align	2
 1313              	.L111:
 1314 0018 00000000 		.word	Mux_CapSense_dsRam
 1315              		.cfi_endproc
 1316              	.LFE27:
 1317              		.size	Mux_CapSense_SetInactiveElectrodeState, .-Mux_CapSense_SetInactiveElectrodeState
 1318              		.section	.text.Mux_CapSense_WriteBitsSafe,"ax",%progbits
 1319              		.align	2
 1320              		.global	Mux_CapSense_WriteBitsSafe
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	Mux_CapSense_WriteBitsSafe, %function
 1324              	Mux_CapSense_WriteBitsSafe:
 1325              	.LFB28:
3263:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****            (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * Function Name: Mux_CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** void Mux_CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** {
 1326              		.loc 1 3290 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              	.LVL134:
 1331 0000 70B5     		push	{r4, r5, r6, lr}
 1332              		.cfi_def_cfa_offset 16
 1333              		.cfi_offset 4, -16
 1334              		.cfi_offset 5, -12
 1335              		.cfi_offset 6, -8
 1336              		.cfi_offset 14, -4
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 85


 1337 0002 0500     		movs	r5, r0
 1338 0004 0E00     		movs	r6, r1
 1339 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1340              		.loc 1 3291 0
 1341 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1342              	.LVL135:
3292:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1343              		.loc 1 3292 0
 1344 000c 2B68     		ldr	r3, [r5]
 1345 000e 5C40     		eors	r4, r3
 1346              	.LVL136:
 1347 0010 3440     		ands	r4, r6
 1348 0012 5C40     		eors	r4, r3
 1349 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1350              		.loc 1 3293 0
 1351 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1352              	.LVL137:
3294:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** }
 1353              		.loc 1 3294 0
 1354              		@ sp needed
 1355              	.LVL138:
 1356              	.LVL139:
 1357 001a 70BD     		pop	{r4, r5, r6, pc}
 1358              		.cfi_endproc
 1359              	.LFE28:
 1360              		.size	Mux_CapSense_WriteBitsSafe, .-Mux_CapSense_WriteBitsSafe
 1361              		.section	.text.Mux_CapSense_SsCSDDisableMode,"ax",%progbits
 1362              		.align	2
 1363              		.code	16
 1364              		.thumb_func
 1365              		.type	Mux_CapSense_SsCSDDisableMode, %function
 1366              	Mux_CapSense_SsCSDDisableMode:
 1367              	.LFB9:
 954:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         #if ((Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) && \
 1368              		.loc 1 954 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372 0000 10B5     		push	{r4, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 4, -8
 1375              		.cfi_offset 14, -4
 968:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1376              		.loc 1 968 0
 1377 0002 0022     		movs	r2, #0
 1378 0004 0F21     		movs	r1, #15
 1379 0006 0348     		ldr	r0, .L115
 1380 0008 FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1381              	.LVL140:
 971:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1382              		.loc 1 971 0
 1383 000c FFF7FEFF 		bl	Mux_CapSense_SsCSDElectrodeCheck
 1384              	.LVL141:
 983:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 1385              		.loc 1 983 0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 86


 1386              		@ sp needed
 1387 0010 10BD     		pop	{r4, pc}
 1388              	.L116:
 1389 0012 C046     		.align	2
 1390              	.L115:
 1391 0014 00040240 		.word	1073873920
 1392              		.cfi_endproc
 1393              	.LFE9:
 1394              		.size	Mux_CapSense_SsCSDDisableMode, .-Mux_CapSense_SsCSDDisableMode
 1395              		.section	.text.Mux_CapSense_SsSwitchSensingMode,"ax",%progbits
 1396              		.align	2
 1397              		.global	Mux_CapSense_SsSwitchSensingMode
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	Mux_CapSense_SsSwitchSensingMode, %function
 1401              	Mux_CapSense_SsSwitchSensingMode:
 1402              	.LFB10:
1068:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     if (Mux_CapSense_currentSenseMethod != mode)
 1403              		.loc 1 1068 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              	.LVL142:
 1408 0000 10B5     		push	{r4, lr}
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 4, -8
 1411              		.cfi_offset 14, -4
 1412 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     {
 1413              		.loc 1 1069 0
 1414 0004 0C4B     		ldr	r3, .L121
 1415 0006 1B78     		ldrb	r3, [r3]
 1416 0008 8342     		cmp	r3, r0
 1417 000a 14D0     		beq	.L117
1072:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1418              		.loc 1 1072 0
 1419 000c 012B     		cmp	r3, #1
 1420 000e 01D1     		bne	.L119
1075:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 1421              		.loc 1 1075 0
 1422 0010 FFF7FEFF 		bl	Mux_CapSense_SsCSDDisableMode
 1423              	.LVL143:
 1424              	.L119:
1105:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1425              		.loc 1 1105 0
 1426 0014 012C     		cmp	r4, #1
 1427 0016 05D1     		bne	.L120
1109:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                 Mux_CapSense_currentSenseMethod = Mux_CapSense_SENSE_METHOD_CSD_E;
 1428              		.loc 1 1109 0
 1429 0018 FFF7FEFF 		bl	Mux_CapSense_SsCSDInitialize
 1430              	.LVL144:
1110:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) */
 1431              		.loc 1 1110 0
 1432 001c 0122     		movs	r2, #1
 1433 001e 064B     		ldr	r3, .L121
 1434 0020 1A70     		strb	r2, [r3]
 1435 0022 08E0     		b	.L117
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 87


 1436              	.L120:
1113:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1437              		.loc 1 1113 0
 1438 0024 022C     		cmp	r4, #2
 1439 0026 06D0     		beq	.L117
1121:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1440              		.loc 1 1121 0
 1441 0028 042C     		cmp	r4, #4
 1442 002a 04D0     		beq	.L117
1129:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         {
 1443              		.loc 1 1129 0
 1444 002c 032C     		cmp	r4, #3
 1445 002e 02D0     		beq	.L117
1138:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         }
 1446              		.loc 1 1138 0
 1447 0030 0022     		movs	r2, #0
 1448 0032 014B     		ldr	r3, .L121
 1449 0034 1A70     		strb	r2, [r3]
 1450              	.L117:
1141:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1451              		.loc 1 1141 0
 1452              		@ sp needed
 1453 0036 10BD     		pop	{r4, pc}
 1454              	.L122:
 1455              		.align	2
 1456              	.L121:
 1457 0038 00000000 		.word	.LANCHOR0
 1458              		.cfi_endproc
 1459              	.LFE10:
 1460              		.size	Mux_CapSense_SsSwitchSensingMode, .-Mux_CapSense_SsSwitchSensingMode
 1461              		.section	.text.Mux_CapSense_SsInitialize,"ax",%progbits
 1462              		.align	2
 1463              		.global	Mux_CapSense_SsInitialize
 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	Mux_CapSense_SsInitialize, %function
 1467              	Mux_CapSense_SsInitialize:
 1468              	.LFB7:
 708:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     cystatus initStatus;
 1469              		.loc 1 708 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473 0000 10B5     		push	{r4, lr}
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 4, -8
 1476              		.cfi_offset 14, -4
 1477              	.LVL145:
 742:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV2) */
 1478              		.loc 1 742 0
 1479 0002 FFF7FEFF 		bl	Mux_CapSense_SsTrimIdacs
 1480              	.LVL146:
 747:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #endif /* ((Mux_CapSense_ENABLE == Mux_CapSense_CSD_EN) ||\
 1481              		.loc 1 747 0
 1482 0006 FFF7FEFF 		bl	Mux_CapSense_SsInitializeSourceSenseClk
 1483              	.LVL147:
 752:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     Mux_CapSense_dsRam.scanCurrentISC = Mux_CapSense_SNS_CONNECTION_GROUND;
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 88


 1484              		.loc 1 752 0
 1485 000a 0020     		movs	r0, #0
 1486 000c FFF7FEFF 		bl	Mux_CapSense_SsSetAllIOsState
 1487              	.LVL148:
 753:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1488              		.loc 1 753 0
 1489 0010 0021     		movs	r1, #0
 1490 0012 8B23     		movs	r3, #139
 1491 0014 044A     		ldr	r2, .L124
 1492 0016 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #if (Mux_CapSense_ENABLE == Mux_CapSense_MANY_SENSE_MODES_EN)
 1493              		.loc 1 755 0
 1494 0018 0020     		movs	r0, #0
 1495 001a FFF7FEFF 		bl	Mux_CapSense_SsSwitchSensingMode
 1496              	.LVL149:
 758:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****     #elif (Mux_CapSense_ENABLE == Mux_CapSense_CSX_EN)
 1497              		.loc 1 758 0
 1498 001e 0120     		movs	r0, #1
 1499 0020 FFF7FEFF 		bl	Mux_CapSense_SsSwitchSensingMode
 1500              	.LVL150:
 769:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1501              		.loc 1 769 0
 1502 0024 0020     		movs	r0, #0
 1503              		@ sp needed
 1504 0026 10BD     		pop	{r4, pc}
 1505              	.L125:
 1506              		.align	2
 1507              	.L124:
 1508 0028 00000000 		.word	Mux_CapSense_dsRam
 1509              		.cfi_endproc
 1510              	.LFE7:
 1511              		.size	Mux_CapSense_SsInitialize, .-Mux_CapSense_SsInitialize
 1512              		.section	.text.Mux_CapSense_DischargeExtCapacitors,"ax",%progbits
 1513              		.align	2
 1514              		.global	Mux_CapSense_DischargeExtCapacitors
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	Mux_CapSense_DischargeExtCapacitors, %function
 1518              	Mux_CapSense_DischargeExtCapacitors:
 1519              	.LFB26:
3022:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1520              		.loc 1 3022 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 8
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              	.LVL151:
 1525 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1526              		.cfi_def_cfa_offset 20
 1527              		.cfi_offset 4, -20
 1528              		.cfi_offset 5, -16
 1529              		.cfi_offset 6, -12
 1530              		.cfi_offset 7, -8
 1531              		.cfi_offset 14, -4
 1532 0002 5746     		mov	r7, r10
 1533 0004 4646     		mov	r6, r8
 1534 0006 C0B4     		push	{r6, r7}
 1535              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 89


 1536              		.cfi_offset 8, -28
 1537              		.cfi_offset 10, -24
 1538 0008 83B0     		sub	sp, sp, #12
 1539              		.cfi_def_cfa_offset 40
 1540 000a 0190     		str	r0, [sp, #4]
3025:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(Mux_CapSense_CMOD_DR_PTR) & Mux_CapSense_EXT_CAP_DR_MASK_C
 1541              		.loc 1 3025 0
 1542 000c 1A4C     		ldr	r4, .L127
 1543 000e 2368     		ldr	r3, [r4]
 1544 0010 0F25     		movs	r5, #15
 1545 0012 1D40     		ands	r5, r3
 1546 0014 A846     		mov	r8, r5
 1547              	.LVL152:
3026:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(Mux_CapSense_CMOD_PC_PTR) & Mux_CapSense_EXT_CAP_PC_MASK_C
 1548              		.loc 1 3026 0
 1549 0016 194E     		ldr	r6, .L127+4
 1550 0018 3368     		ldr	r3, [r6]
 1551 001a 0122     		movs	r2, #1
 1552 001c 1A40     		ands	r2, r3
 1553 001e 1700     		movs	r7, r2
 1554              	.LVL153:
3027:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1555              		.loc 1 3027 0
 1556 0020 174D     		ldr	r5, .L127+8
 1557              	.LVL154:
 1558 0022 2B68     		ldr	r3, [r5]
 1559 0024 0722     		movs	r2, #7
 1560              	.LVL155:
 1561 0026 1A40     		ands	r2, r3
 1562 0028 9246     		mov	r10, r2
 1563              	.LVL156:
3052:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_HSIOM_SEL_GPIO);
 1564              		.loc 1 3052 0
 1565 002a 0022     		movs	r2, #0
 1566              	.LVL157:
 1567 002c 0F21     		movs	r1, #15
 1568 002e 2000     		movs	r0, r4
 1569              	.LVL158:
 1570 0030 FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1571              	.LVL159:
3054:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****             Mux_CapSense_WriteBitsSafe(Mux_CapSense_CMOD_PC_PTR, Mux_CapSense_EXT_CAP_PC_MASK_CMOD,
 1572              		.loc 1 3054 0
 1573 0034 0022     		movs	r2, #0
 1574 0036 0121     		movs	r1, #1
 1575 0038 3000     		movs	r0, r6
 1576 003a FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1577              	.LVL160:
3055:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
 1578              		.loc 1 3055 0
 1579 003e 0622     		movs	r2, #6
 1580 0040 0721     		movs	r1, #7
 1581 0042 2800     		movs	r0, r5
 1582 0044 FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1583              	.LVL161:
3086:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** 
 1584              		.loc 1 3086 0
 1585 0048 6B46     		mov	r3, sp
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 90


 1586 004a 9888     		ldrh	r0, [r3, #4]
 1587 004c FFF7FEFF 		bl	CyDelayUs
 1588              	.LVL162:
3090:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
 1589              		.loc 1 3090 0
 1590 0050 5246     		mov	r2, r10
 1591 0052 0721     		movs	r1, #7
 1592 0054 2800     		movs	r0, r5
 1593 0056 FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1594              	.LVL163:
3092:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
 1595              		.loc 1 3092 0
 1596 005a 3A00     		movs	r2, r7
 1597 005c 0121     		movs	r1, #1
 1598 005e 3000     		movs	r0, r6
 1599 0060 FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1600              	.LVL164:
3094:Generated_Source\PSoC4/Mux_CapSense_Sensing.c ****                                            Mux_CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
 1601              		.loc 1 3094 0
 1602 0064 4246     		mov	r2, r8
 1603 0066 0F21     		movs	r1, #15
 1604 0068 2000     		movs	r0, r4
 1605 006a FFF7FEFF 		bl	Mux_CapSense_WriteBitsSafe
 1606              	.LVL165:
3126:Generated_Source\PSoC4/Mux_CapSense_Sensing.c **** #endif /* (Mux_CapSense_ENABLE == Mux_CapSense_CSDV1) */
 1607              		.loc 1 3126 0
 1608 006e 03B0     		add	sp, sp, #12
 1609              		@ sp needed
 1610              	.LVL166:
 1611              	.LVL167:
 1612              	.LVL168:
 1613 0070 0CBC     		pop	{r2, r3}
 1614 0072 9046     		mov	r8, r2
 1615 0074 9A46     		mov	r10, r3
 1616 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 1617              	.L128:
 1618              		.align	2
 1619              	.L127:
 1620 0078 00040240 		.word	1073873920
 1621 007c 00040440 		.word	1074004992
 1622 0080 08040440 		.word	1074005000
 1623              		.cfi_endproc
 1624              	.LFE26:
 1625              		.size	Mux_CapSense_DischargeExtCapacitors, .-Mux_CapSense_DischargeExtCapacitors
 1626              		.global	Mux_CapSense_idacGainTable
 1627              		.comm	Mux_CapSense_curSnsIOPtr,4,4
 1628              		.comm	Mux_CapSense_curRamSnsPtr,4,4
 1629              		.global	Mux_CapSense_requestScanAllWidget
 1630              		.global	Mux_CapSense_sensorIndex
 1631              		.global	Mux_CapSense_widgetIndex
 1632              		.global	Mux_CapSense_scanFreqIndex
 1633              		.global	Mux_CapSense_currentSenseMethod
 1634              		.section	.rodata
 1635              		.align	2
 1636              		.type	Mux_CapSense_idacGainTable, %object
 1637              		.size	Mux_CapSense_idacGainTable, 16
 1638              	Mux_CapSense_idacGainTable:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 91


 1639 0000 00000000 		.word	0
 1640 0004 804F1200 		.word	1200000
 1641 0008 00040000 		.word	1024
 1642 000c 009F2400 		.word	2400000
 1643              		.type	Mux_CapSense_scanFreqIndex, %object
 1644              		.size	Mux_CapSense_scanFreqIndex, 1
 1645              	Mux_CapSense_scanFreqIndex:
 1646 0010 00       		.space	1
 1647              		.bss
 1648              		.set	.LANCHOR0,. + 0
 1649              		.type	Mux_CapSense_currentSenseMethod, %object
 1650              		.size	Mux_CapSense_currentSenseMethod, 1
 1651              	Mux_CapSense_currentSenseMethod:
 1652 0000 00       		.space	1
 1653              		.type	Mux_CapSense_requestScanAllWidget, %object
 1654              		.size	Mux_CapSense_requestScanAllWidget, 1
 1655              	Mux_CapSense_requestScanAllWidget:
 1656 0001 00       		.space	1
 1657              		.type	Mux_CapSense_sensorIndex, %object
 1658              		.size	Mux_CapSense_sensorIndex, 1
 1659              	Mux_CapSense_sensorIndex:
 1660 0002 00       		.space	1
 1661              		.type	Mux_CapSense_widgetIndex, %object
 1662              		.size	Mux_CapSense_widgetIndex, 1
 1663              	Mux_CapSense_widgetIndex:
 1664 0003 00       		.space	1
 1665              		.text
 1666              	.Letext0:
 1667              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1668              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1669              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1670              		.file 5 "Generated_Source\\PSoC4\\Mux_CapSense_Configuration.h"
 1671              		.file 6 "Generated_Source\\PSoC4\\Mux_CapSense_Structure.h"
 1672              		.file 7 "Generated_Source\\PSoC4\\Mux_CapSense_Sensing.h"
 1673              		.file 8 "Generated_Source\\PSoC4\\Mux_CapSense_SensingCSD_LL.h"
 1674              		.file 9 "Generated_Source\\PSoC4/CyLib.h"
 1675              		.file 10 "Generated_Source\\PSoC4\\Mux_CapSense_ISR.h"
 1676              		.section	.debug_info,"",%progbits
 1677              	.Ldebug_info0:
 1678 0000 12120000 		.4byte	0x1212
 1679 0004 0400     		.2byte	0x4
 1680 0006 00000000 		.4byte	.Ldebug_abbrev0
 1681 000a 04       		.byte	0x4
 1682 000b 01       		.uleb128 0x1
 1683 000c F5020000 		.4byte	.LASF205
 1684 0010 0C       		.byte	0xc
 1685 0011 8B010000 		.4byte	.LASF206
 1686 0015 EC0A0000 		.4byte	.LASF207
 1687 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1688 001d 00000000 		.4byte	0
 1689 0021 00000000 		.4byte	.Ldebug_line0
 1690 0025 02       		.uleb128 0x2
 1691 0026 01       		.byte	0x1
 1692 0027 06       		.byte	0x6
 1693 0028 140E0000 		.4byte	.LASF0
 1694 002c 02       		.uleb128 0x2
 1695 002d 01       		.byte	0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 92


 1696 002e 08       		.byte	0x8
 1697 002f EA0C0000 		.4byte	.LASF1
 1698 0033 02       		.uleb128 0x2
 1699 0034 02       		.byte	0x2
 1700 0035 05       		.byte	0x5
 1701 0036 240A0000 		.4byte	.LASF2
 1702 003a 02       		.uleb128 0x2
 1703 003b 02       		.byte	0x2
 1704 003c 07       		.byte	0x7
 1705 003d 250E0000 		.4byte	.LASF3
 1706 0041 02       		.uleb128 0x2
 1707 0042 04       		.byte	0x4
 1708 0043 05       		.byte	0x5
 1709 0044 2E0A0000 		.4byte	.LASF4
 1710 0048 03       		.uleb128 0x3
 1711 0049 020D0000 		.4byte	.LASF9
 1712 004d 02       		.byte	0x2
 1713 004e 41       		.byte	0x41
 1714 004f 53000000 		.4byte	0x53
 1715 0053 02       		.uleb128 0x2
 1716 0054 04       		.byte	0x4
 1717 0055 07       		.byte	0x7
 1718 0056 E10B0000 		.4byte	.LASF5
 1719 005a 02       		.uleb128 0x2
 1720 005b 08       		.byte	0x8
 1721 005c 05       		.byte	0x5
 1722 005d D7060000 		.4byte	.LASF6
 1723 0061 02       		.uleb128 0x2
 1724 0062 08       		.byte	0x8
 1725 0063 07       		.byte	0x7
 1726 0064 6E020000 		.4byte	.LASF7
 1727 0068 04       		.uleb128 0x4
 1728 0069 04       		.byte	0x4
 1729 006a 05       		.byte	0x5
 1730 006b 696E7400 		.ascii	"int\000"
 1731 006f 02       		.uleb128 0x2
 1732 0070 04       		.byte	0x4
 1733 0071 07       		.byte	0x7
 1734 0072 D7000000 		.4byte	.LASF8
 1735 0076 03       		.uleb128 0x3
 1736 0077 D1010000 		.4byte	.LASF10
 1737 007b 03       		.byte	0x3
 1738 007c 30       		.byte	0x30
 1739 007d 48000000 		.4byte	0x48
 1740 0081 05       		.uleb128 0x5
 1741 0082 A10E0000 		.4byte	.LASF11
 1742 0086 04       		.byte	0x4
 1743 0087 FC01     		.2byte	0x1fc
 1744 0089 2C000000 		.4byte	0x2c
 1745 008d 05       		.uleb128 0x5
 1746 008e 2B060000 		.4byte	.LASF12
 1747 0092 04       		.byte	0x4
 1748 0093 FD01     		.2byte	0x1fd
 1749 0095 3A000000 		.4byte	0x3a
 1750 0099 05       		.uleb128 0x5
 1751 009a 43080000 		.4byte	.LASF13
 1752 009e 04       		.byte	0x4
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 93


 1753 009f FE01     		.2byte	0x1fe
 1754 00a1 53000000 		.4byte	0x53
 1755 00a5 02       		.uleb128 0x2
 1756 00a6 04       		.byte	0x4
 1757 00a7 04       		.byte	0x4
 1758 00a8 51020000 		.4byte	.LASF14
 1759 00ac 02       		.uleb128 0x2
 1760 00ad 08       		.byte	0x8
 1761 00ae 04       		.byte	0x4
 1762 00af A70E0000 		.4byte	.LASF15
 1763 00b3 02       		.uleb128 0x2
 1764 00b4 01       		.byte	0x1
 1765 00b5 08       		.byte	0x8
 1766 00b6 9F050000 		.4byte	.LASF16
 1767 00ba 05       		.uleb128 0x5
 1768 00bb C20C0000 		.4byte	.LASF17
 1769 00bf 04       		.byte	0x4
 1770 00c0 9E02     		.2byte	0x29e
 1771 00c2 53000000 		.4byte	0x53
 1772 00c6 05       		.uleb128 0x5
 1773 00c7 24010000 		.4byte	.LASF18
 1774 00cb 04       		.byte	0x4
 1775 00cc A602     		.2byte	0x2a6
 1776 00ce D2000000 		.4byte	0xd2
 1777 00d2 06       		.uleb128 0x6
 1778 00d3 81000000 		.4byte	0x81
 1779 00d7 05       		.uleb128 0x5
 1780 00d8 58090000 		.4byte	.LASF19
 1781 00dc 04       		.byte	0x4
 1782 00dd A802     		.2byte	0x2a8
 1783 00df E3000000 		.4byte	0xe3
 1784 00e3 06       		.uleb128 0x6
 1785 00e4 99000000 		.4byte	0x99
 1786 00e8 05       		.uleb128 0x5
 1787 00e9 FE070000 		.4byte	.LASF20
 1788 00ed 04       		.byte	0x4
 1789 00ee B802     		.2byte	0x2b8
 1790 00f0 F4000000 		.4byte	0xf4
 1791 00f4 07       		.uleb128 0x7
 1792 00f5 04       		.byte	0x4
 1793 00f6 FA000000 		.4byte	0xfa
 1794 00fa 08       		.uleb128 0x8
 1795 00fb 05       		.uleb128 0x5
 1796 00fc 4F070000 		.4byte	.LASF21
 1797 0100 05       		.byte	0x5
 1798 0101 2F01     		.2byte	0x12f
 1799 0103 8D000000 		.4byte	0x8d
 1800 0107 05       		.uleb128 0x5
 1801 0108 00000000 		.4byte	.LASF22
 1802 010c 05       		.byte	0x5
 1803 010d 3301     		.2byte	0x133
 1804 010f 81000000 		.4byte	0x81
 1805 0113 09       		.uleb128 0x9
 1806 0114 01       		.byte	0x1
 1807 0115 2C000000 		.4byte	0x2c
 1808 0119 06       		.byte	0x6
 1809 011a 61       		.byte	0x61
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 94


 1810 011b 4A010000 		.4byte	0x14a
 1811 011f 0A       		.uleb128 0xa
 1812 0120 5A0B0000 		.4byte	.LASF23
 1813 0124 01       		.byte	0x1
 1814 0125 0A       		.uleb128 0xa
 1815 0126 E4050000 		.4byte	.LASF24
 1816 012a 02       		.byte	0x2
 1817 012b 0A       		.uleb128 0xa
 1818 012c D5020000 		.4byte	.LASF25
 1819 0130 03       		.byte	0x3
 1820 0131 0A       		.uleb128 0xa
 1821 0132 0C020000 		.4byte	.LASF26
 1822 0136 04       		.byte	0x4
 1823 0137 0A       		.uleb128 0xa
 1824 0138 E7080000 		.4byte	.LASF27
 1825 013c 05       		.byte	0x5
 1826 013d 0A       		.uleb128 0xa
 1827 013e 080A0000 		.4byte	.LASF28
 1828 0142 06       		.byte	0x6
 1829 0143 0A       		.uleb128 0xa
 1830 0144 C3030000 		.4byte	.LASF29
 1831 0148 07       		.byte	0x7
 1832 0149 00       		.byte	0
 1833 014a 03       		.uleb128 0x3
 1834 014b 3C060000 		.4byte	.LASF30
 1835 014f 06       		.byte	0x6
 1836 0150 69       		.byte	0x69
 1837 0151 13010000 		.4byte	0x113
 1838 0155 09       		.uleb128 0x9
 1839 0156 01       		.byte	0x1
 1840 0157 2C000000 		.4byte	0x2c
 1841 015b 06       		.byte	0x6
 1842 015c 70       		.byte	0x70
 1843 015d 80010000 		.4byte	0x180
 1844 0161 0A       		.uleb128 0xa
 1845 0162 BE000000 		.4byte	.LASF31
 1846 0166 00       		.byte	0
 1847 0167 0A       		.uleb128 0xa
 1848 0168 0C090000 		.4byte	.LASF32
 1849 016c 01       		.byte	0x1
 1850 016d 0A       		.uleb128 0xa
 1851 016e 0B080000 		.4byte	.LASF33
 1852 0172 02       		.byte	0x2
 1853 0173 0A       		.uleb128 0xa
 1854 0174 A70B0000 		.4byte	.LASF34
 1855 0178 03       		.byte	0x3
 1856 0179 0A       		.uleb128 0xa
 1857 017a 68060000 		.4byte	.LASF35
 1858 017e 04       		.byte	0x4
 1859 017f 00       		.byte	0
 1860 0180 03       		.uleb128 0x3
 1861 0181 30010000 		.4byte	.LASF36
 1862 0185 06       		.byte	0x6
 1863 0186 76       		.byte	0x76
 1864 0187 55010000 		.4byte	0x155
 1865 018b 0B       		.uleb128 0xb
 1866 018c 12       		.byte	0x12
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 95


 1867 018d 06       		.byte	0x6
 1868 018e AD       		.byte	0xad
 1869 018f 3D020000 		.4byte	0x23d
 1870 0193 0C       		.uleb128 0xc
 1871 0194 56060000 		.4byte	.LASF37
 1872 0198 06       		.byte	0x6
 1873 0199 B2       		.byte	0xb2
 1874 019a 8D000000 		.4byte	0x8d
 1875 019e 00       		.byte	0
 1876 019f 0C       		.uleb128 0xc
 1877 01a0 6E0C0000 		.4byte	.LASF38
 1878 01a4 06       		.byte	0x6
 1879 01a5 B7       		.byte	0xb7
 1880 01a6 FB000000 		.4byte	0xfb
 1881 01aa 02       		.byte	0x2
 1882 01ab 0C       		.uleb128 0xc
 1883 01ac 97050000 		.4byte	.LASF39
 1884 01b0 06       		.byte	0x6
 1885 01b1 BC       		.byte	0xbc
 1886 01b2 81000000 		.4byte	0x81
 1887 01b6 04       		.byte	0x4
 1888 01b7 0C       		.uleb128 0xc
 1889 01b8 D5070000 		.4byte	.LASF40
 1890 01bc 06       		.byte	0x6
 1891 01bd C1       		.byte	0xc1
 1892 01be 81000000 		.4byte	0x81
 1893 01c2 05       		.byte	0x5
 1894 01c3 0C       		.uleb128 0xc
 1895 01c4 1C040000 		.4byte	.LASF41
 1896 01c8 06       		.byte	0x6
 1897 01c9 C7       		.byte	0xc7
 1898 01ca 81000000 		.4byte	0x81
 1899 01ce 06       		.byte	0x6
 1900 01cf 0C       		.uleb128 0xc
 1901 01d0 44070000 		.4byte	.LASF42
 1902 01d4 06       		.byte	0x6
 1903 01d5 CD       		.byte	0xcd
 1904 01d6 81000000 		.4byte	0x81
 1905 01da 07       		.byte	0x7
 1906 01db 0C       		.uleb128 0xc
 1907 01dc A1040000 		.4byte	.LASF43
 1908 01e0 06       		.byte	0x6
 1909 01e1 D4       		.byte	0xd4
 1910 01e2 07010000 		.4byte	0x107
 1911 01e6 08       		.byte	0x8
 1912 01e7 0C       		.uleb128 0xc
 1913 01e8 020C0000 		.4byte	.LASF44
 1914 01ec 06       		.byte	0x6
 1915 01ed DB       		.byte	0xdb
 1916 01ee 3D020000 		.4byte	0x23d
 1917 01f2 09       		.byte	0x9
 1918 01f3 0C       		.uleb128 0xc
 1919 01f4 910B0000 		.4byte	.LASF45
 1920 01f8 06       		.byte	0x6
 1921 01f9 E2       		.byte	0xe2
 1922 01fa 3D020000 		.4byte	0x23d
 1923 01fe 0A       		.byte	0xa
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 96


 1924 01ff 0C       		.uleb128 0xc
 1925 0200 FE010000 		.4byte	.LASF46
 1926 0204 06       		.byte	0x6
 1927 0205 E7       		.byte	0xe7
 1928 0206 81000000 		.4byte	0x81
 1929 020a 0B       		.byte	0xb
 1930 020b 0C       		.uleb128 0xc
 1931 020c D50D0000 		.4byte	.LASF47
 1932 0210 06       		.byte	0x6
 1933 0211 EF       		.byte	0xef
 1934 0212 8D000000 		.4byte	0x8d
 1935 0216 0C       		.byte	0xc
 1936 0217 0C       		.uleb128 0xc
 1937 0218 32060000 		.4byte	.LASF48
 1938 021c 06       		.byte	0x6
 1939 021d F6       		.byte	0xf6
 1940 021e 8D000000 		.4byte	0x8d
 1941 0222 0E       		.byte	0xe
 1942 0223 0C       		.uleb128 0xc
 1943 0224 F2090000 		.4byte	.LASF49
 1944 0228 06       		.byte	0x6
 1945 0229 FB       		.byte	0xfb
 1946 022a 81000000 		.4byte	0x81
 1947 022e 10       		.byte	0x10
 1948 022f 0D       		.uleb128 0xd
 1949 0230 BA050000 		.4byte	.LASF50
 1950 0234 06       		.byte	0x6
 1951 0235 0001     		.2byte	0x100
 1952 0237 81000000 		.4byte	0x81
 1953 023b 11       		.byte	0x11
 1954 023c 00       		.byte	0
 1955 023d 0E       		.uleb128 0xe
 1956 023e 81000000 		.4byte	0x81
 1957 0242 4D020000 		.4byte	0x24d
 1958 0246 0F       		.uleb128 0xf
 1959 0247 4D020000 		.4byte	0x24d
 1960 024b 00       		.byte	0
 1961 024c 00       		.byte	0
 1962 024d 02       		.uleb128 0x2
 1963 024e 04       		.byte	0x4
 1964 024f 07       		.byte	0x7
 1965 0250 D00B0000 		.4byte	.LASF51
 1966 0254 05       		.uleb128 0x5
 1967 0255 5A050000 		.4byte	.LASF52
 1968 0259 06       		.byte	0x6
 1969 025a 0101     		.2byte	0x101
 1970 025c 8B010000 		.4byte	0x18b
 1971 0260 10       		.uleb128 0x10
 1972 0261 16       		.byte	0x16
 1973 0262 06       		.byte	0x6
 1974 0263 0601     		.2byte	0x106
 1975 0265 47030000 		.4byte	0x347
 1976 0269 0D       		.uleb128 0xd
 1977 026a 56060000 		.4byte	.LASF37
 1978 026e 06       		.byte	0x6
 1979 026f 0B01     		.2byte	0x10b
 1980 0271 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 97


 1981 0275 00       		.byte	0
 1982 0276 0D       		.uleb128 0xd
 1983 0277 6E0C0000 		.4byte	.LASF38
 1984 027b 06       		.byte	0x6
 1985 027c 1001     		.2byte	0x110
 1986 027e FB000000 		.4byte	0xfb
 1987 0282 02       		.byte	0x2
 1988 0283 0D       		.uleb128 0xd
 1989 0284 97050000 		.4byte	.LASF39
 1990 0288 06       		.byte	0x6
 1991 0289 1501     		.2byte	0x115
 1992 028b 81000000 		.4byte	0x81
 1993 028f 04       		.byte	0x4
 1994 0290 0D       		.uleb128 0xd
 1995 0291 D5070000 		.4byte	.LASF40
 1996 0295 06       		.byte	0x6
 1997 0296 1A01     		.2byte	0x11a
 1998 0298 81000000 		.4byte	0x81
 1999 029c 05       		.byte	0x5
 2000 029d 0D       		.uleb128 0xd
 2001 029e 1C040000 		.4byte	.LASF41
 2002 02a2 06       		.byte	0x6
 2003 02a3 2001     		.2byte	0x120
 2004 02a5 81000000 		.4byte	0x81
 2005 02a9 06       		.byte	0x6
 2006 02aa 0D       		.uleb128 0xd
 2007 02ab 44070000 		.4byte	.LASF42
 2008 02af 06       		.byte	0x6
 2009 02b0 2601     		.2byte	0x126
 2010 02b2 81000000 		.4byte	0x81
 2011 02b6 07       		.byte	0x7
 2012 02b7 0D       		.uleb128 0xd
 2013 02b8 A1040000 		.4byte	.LASF43
 2014 02bc 06       		.byte	0x6
 2015 02bd 2D01     		.2byte	0x12d
 2016 02bf 07010000 		.4byte	0x107
 2017 02c3 08       		.byte	0x8
 2018 02c4 0D       		.uleb128 0xd
 2019 02c5 020C0000 		.4byte	.LASF44
 2020 02c9 06       		.byte	0x6
 2021 02ca 3401     		.2byte	0x134
 2022 02cc 3D020000 		.4byte	0x23d
 2023 02d0 09       		.byte	0x9
 2024 02d1 0D       		.uleb128 0xd
 2025 02d2 910B0000 		.4byte	.LASF45
 2026 02d6 06       		.byte	0x6
 2027 02d7 3B01     		.2byte	0x13b
 2028 02d9 3D020000 		.4byte	0x23d
 2029 02dd 0A       		.byte	0xa
 2030 02de 0D       		.uleb128 0xd
 2031 02df FE010000 		.4byte	.LASF46
 2032 02e3 06       		.byte	0x6
 2033 02e4 4001     		.2byte	0x140
 2034 02e6 81000000 		.4byte	0x81
 2035 02ea 0B       		.byte	0xb
 2036 02eb 0D       		.uleb128 0xd
 2037 02ec D50D0000 		.4byte	.LASF47
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 98


 2038 02f0 06       		.byte	0x6
 2039 02f1 4801     		.2byte	0x148
 2040 02f3 8D000000 		.4byte	0x8d
 2041 02f7 0C       		.byte	0xc
 2042 02f8 0D       		.uleb128 0xd
 2043 02f9 32060000 		.4byte	.LASF48
 2044 02fd 06       		.byte	0x6
 2045 02fe 4F01     		.2byte	0x14f
 2046 0300 8D000000 		.4byte	0x8d
 2047 0304 0E       		.byte	0xe
 2048 0305 0D       		.uleb128 0xd
 2049 0306 F2090000 		.4byte	.LASF49
 2050 030a 06       		.byte	0x6
 2051 030b 5401     		.2byte	0x154
 2052 030d 81000000 		.4byte	0x81
 2053 0311 10       		.byte	0x10
 2054 0312 0D       		.uleb128 0xd
 2055 0313 BA050000 		.4byte	.LASF50
 2056 0317 06       		.byte	0x6
 2057 0318 5901     		.2byte	0x159
 2058 031a 81000000 		.4byte	0x81
 2059 031e 11       		.byte	0x11
 2060 031f 0D       		.uleb128 0xd
 2061 0320 9A0E0000 		.4byte	.LASF53
 2062 0324 06       		.byte	0x6
 2063 0325 5E01     		.2byte	0x15e
 2064 0327 81000000 		.4byte	0x81
 2065 032b 12       		.byte	0x12
 2066 032c 0D       		.uleb128 0xd
 2067 032d C2010000 		.4byte	.LASF54
 2068 0331 06       		.byte	0x6
 2069 0332 6301     		.2byte	0x163
 2070 0334 81000000 		.4byte	0x81
 2071 0338 13       		.byte	0x13
 2072 0339 0D       		.uleb128 0xd
 2073 033a FF090000 		.4byte	.LASF55
 2074 033e 06       		.byte	0x6
 2075 033f 6801     		.2byte	0x168
 2076 0341 81000000 		.4byte	0x81
 2077 0345 14       		.byte	0x14
 2078 0346 00       		.byte	0
 2079 0347 05       		.uleb128 0x5
 2080 0348 59010000 		.4byte	.LASF56
 2081 034c 06       		.byte	0x6
 2082 034d 6901     		.2byte	0x169
 2083 034f 60020000 		.4byte	0x260
 2084 0353 10       		.uleb128 0x10
 2085 0354 16       		.byte	0x16
 2086 0355 06       		.byte	0x6
 2087 0356 6F01     		.2byte	0x16f
 2088 0358 6A030000 		.4byte	0x36a
 2089 035c 0D       		.uleb128 0xd
 2090 035d 34080000 		.4byte	.LASF57
 2091 0361 06       		.byte	0x6
 2092 0362 7401     		.2byte	0x174
 2093 0364 47030000 		.4byte	0x347
 2094 0368 00       		.byte	0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 99


 2095 0369 00       		.byte	0
 2096 036a 05       		.uleb128 0x5
 2097 036b 44000000 		.4byte	.LASF58
 2098 036f 06       		.byte	0x6
 2099 0370 7501     		.2byte	0x175
 2100 0372 53030000 		.4byte	0x353
 2101 0376 10       		.uleb128 0x10
 2102 0377 0A       		.byte	0xa
 2103 0378 06       		.byte	0x6
 2104 0379 7B01     		.2byte	0x17b
 2105 037b CE030000 		.4byte	0x3ce
 2106 037f 11       		.uleb128 0x11
 2107 0380 72617700 		.ascii	"raw\000"
 2108 0384 06       		.byte	0x6
 2109 0385 8001     		.2byte	0x180
 2110 0387 CE030000 		.4byte	0x3ce
 2111 038b 00       		.byte	0
 2112 038c 0D       		.uleb128 0xd
 2113 038d 200E0000 		.4byte	.LASF59
 2114 0391 06       		.byte	0x6
 2115 0392 8501     		.2byte	0x185
 2116 0394 CE030000 		.4byte	0x3ce
 2117 0398 02       		.byte	0x2
 2118 0399 0D       		.uleb128 0xd
 2119 039a 940C0000 		.4byte	.LASF60
 2120 039e 06       		.byte	0x6
 2121 039f 8B01     		.2byte	0x18b
 2122 03a1 3D020000 		.4byte	0x23d
 2123 03a5 04       		.byte	0x4
 2124 03a6 0D       		.uleb128 0xd
 2125 03a7 920A0000 		.4byte	.LASF61
 2126 03ab 06       		.byte	0x6
 2127 03ac 9001     		.2byte	0x190
 2128 03ae FB000000 		.4byte	0xfb
 2129 03b2 06       		.byte	0x6
 2130 03b3 0D       		.uleb128 0xd
 2131 03b4 AE0E0000 		.4byte	.LASF62
 2132 03b8 06       		.byte	0x6
 2133 03b9 9501     		.2byte	0x195
 2134 03bb DE030000 		.4byte	0x3de
 2135 03bf 08       		.byte	0x8
 2136 03c0 0D       		.uleb128 0xd
 2137 03c1 AC060000 		.4byte	.LASF63
 2138 03c5 06       		.byte	0x6
 2139 03c6 9A01     		.2byte	0x19a
 2140 03c8 3D020000 		.4byte	0x23d
 2141 03cc 09       		.byte	0x9
 2142 03cd 00       		.byte	0
 2143 03ce 0E       		.uleb128 0xe
 2144 03cf 8D000000 		.4byte	0x8d
 2145 03d3 DE030000 		.4byte	0x3de
 2146 03d7 0F       		.uleb128 0xf
 2147 03d8 4D020000 		.4byte	0x24d
 2148 03dc 00       		.byte	0
 2149 03dd 00       		.byte	0
 2150 03de 0E       		.uleb128 0xe
 2151 03df 07010000 		.4byte	0x107
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 100


 2152 03e3 EE030000 		.4byte	0x3ee
 2153 03e7 0F       		.uleb128 0xf
 2154 03e8 4D020000 		.4byte	0x24d
 2155 03ec 00       		.byte	0
 2156 03ed 00       		.byte	0
 2157 03ee 05       		.uleb128 0x5
 2158 03ef F60E0000 		.4byte	.LASF64
 2159 03f3 06       		.byte	0x6
 2160 03f4 9B01     		.2byte	0x19b
 2161 03f6 76030000 		.4byte	0x376
 2162 03fa 10       		.uleb128 0x10
 2163 03fb 50       		.byte	0x50
 2164 03fc 06       		.byte	0x6
 2165 03fd A101     		.2byte	0x1a1
 2166 03ff 11040000 		.4byte	0x411
 2167 0403 0D       		.uleb128 0xd
 2168 0404 34080000 		.4byte	.LASF57
 2169 0408 06       		.byte	0x6
 2170 0409 A601     		.2byte	0x1a6
 2171 040b 11040000 		.4byte	0x411
 2172 040f 00       		.byte	0
 2173 0410 00       		.byte	0
 2174 0411 0E       		.uleb128 0xe
 2175 0412 EE030000 		.4byte	0x3ee
 2176 0416 21040000 		.4byte	0x421
 2177 041a 0F       		.uleb128 0xf
 2178 041b 4D020000 		.4byte	0x24d
 2179 041f 07       		.byte	0x7
 2180 0420 00       		.byte	0
 2181 0421 05       		.uleb128 0x5
 2182 0422 DC0D0000 		.4byte	.LASF65
 2183 0426 06       		.byte	0x6
 2184 0427 A701     		.2byte	0x1a7
 2185 0429 FA030000 		.4byte	0x3fa
 2186 042d 10       		.uleb128 0x10
 2187 042e 8C       		.byte	0x8c
 2188 042f 06       		.byte	0x6
 2189 0430 AD01     		.2byte	0x1ad
 2190 0432 2E050000 		.4byte	0x52e
 2191 0436 0D       		.uleb128 0xd
 2192 0437 71090000 		.4byte	.LASF66
 2193 043b 06       		.byte	0x6
 2194 043c B401     		.2byte	0x1b4
 2195 043e 8D000000 		.4byte	0x8d
 2196 0442 00       		.byte	0
 2197 0443 0D       		.uleb128 0xd
 2198 0444 ED0E0000 		.4byte	.LASF67
 2199 0448 06       		.byte	0x6
 2200 0449 B901     		.2byte	0x1b9
 2201 044b 8D000000 		.4byte	0x8d
 2202 044f 02       		.byte	0x2
 2203 0450 0D       		.uleb128 0xd
 2204 0451 F0000000 		.4byte	.LASF68
 2205 0455 06       		.byte	0x6
 2206 0456 BE01     		.2byte	0x1be
 2207 0458 8D000000 		.4byte	0x8d
 2208 045c 04       		.byte	0x4
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 101


 2209 045d 0D       		.uleb128 0xd
 2210 045e B30A0000 		.4byte	.LASF69
 2211 0462 06       		.byte	0x6
 2212 0463 C401     		.2byte	0x1c4
 2213 0465 8D000000 		.4byte	0x8d
 2214 0469 06       		.byte	0x6
 2215 046a 0D       		.uleb128 0xd
 2216 046b E4000000 		.4byte	.LASF70
 2217 046f 06       		.byte	0x6
 2218 0470 C901     		.2byte	0x1c9
 2219 0472 8D000000 		.4byte	0x8d
 2220 0476 08       		.byte	0x8
 2221 0477 0D       		.uleb128 0xd
 2222 0478 61060000 		.4byte	.LASF71
 2223 047c 06       		.byte	0x6
 2224 047d CE01     		.2byte	0x1ce
 2225 047f E3000000 		.4byte	0xe3
 2226 0483 0C       		.byte	0xc
 2227 0484 0D       		.uleb128 0xd
 2228 0485 370A0000 		.4byte	.LASF72
 2229 0489 06       		.byte	0x6
 2230 048a D401     		.2byte	0x1d4
 2231 048c 2E050000 		.4byte	0x52e
 2232 0490 10       		.byte	0x10
 2233 0491 0D       		.uleb128 0xd
 2234 0492 9C0B0000 		.4byte	.LASF73
 2235 0496 06       		.byte	0x6
 2236 0497 DB01     		.2byte	0x1db
 2237 0499 2E050000 		.4byte	0x52e
 2238 049d 14       		.byte	0x14
 2239 049e 0D       		.uleb128 0xd
 2240 049f E8090000 		.4byte	.LASF74
 2241 04a3 06       		.byte	0x6
 2242 04a4 EB01     		.2byte	0x1eb
 2243 04a6 3D020000 		.4byte	0x23d
 2244 04aa 18       		.byte	0x18
 2245 04ab 0D       		.uleb128 0xd
 2246 04ac F3070000 		.4byte	.LASF75
 2247 04b0 06       		.byte	0x6
 2248 04b1 F101     		.2byte	0x1f1
 2249 04b3 8D000000 		.4byte	0x8d
 2250 04b7 1A       		.byte	0x1a
 2251 04b8 0D       		.uleb128 0xd
 2252 04b9 83030000 		.4byte	.LASF76
 2253 04bd 06       		.byte	0x6
 2254 04be F601     		.2byte	0x1f6
 2255 04c0 81000000 		.4byte	0x81
 2256 04c4 1C       		.byte	0x1c
 2257 04c5 0D       		.uleb128 0xd
 2258 04c6 7B070000 		.4byte	.LASF77
 2259 04ca 06       		.byte	0x6
 2260 04cb FB01     		.2byte	0x1fb
 2261 04cd 6A030000 		.4byte	0x36a
 2262 04d1 1E       		.byte	0x1e
 2263 04d2 0D       		.uleb128 0xd
 2264 04d3 66020000 		.4byte	.LASF78
 2265 04d7 06       		.byte	0x6
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 102


 2266 04d8 0002     		.2byte	0x200
 2267 04da 21040000 		.4byte	0x421
 2268 04de 34       		.byte	0x34
 2269 04df 0D       		.uleb128 0xd
 2270 04e0 AE000000 		.4byte	.LASF79
 2271 04e4 06       		.byte	0x6
 2272 04e5 0502     		.2byte	0x205
 2273 04e7 81000000 		.4byte	0x81
 2274 04eb 84       		.byte	0x84
 2275 04ec 0D       		.uleb128 0xd
 2276 04ed 9E020000 		.4byte	.LASF80
 2277 04f1 06       		.byte	0x6
 2278 04f2 0A02     		.2byte	0x20a
 2279 04f4 81000000 		.4byte	0x81
 2280 04f8 85       		.byte	0x85
 2281 04f9 0D       		.uleb128 0xd
 2282 04fa 5E090000 		.4byte	.LASF81
 2283 04fe 06       		.byte	0x6
 2284 04ff 0F02     		.2byte	0x20f
 2285 0501 8D000000 		.4byte	0x8d
 2286 0505 86       		.byte	0x86
 2287 0506 0D       		.uleb128 0xd
 2288 0507 A4070000 		.4byte	.LASF82
 2289 050b 06       		.byte	0x6
 2290 050c 1402     		.2byte	0x214
 2291 050e CE030000 		.4byte	0x3ce
 2292 0512 88       		.byte	0x88
 2293 0513 0D       		.uleb128 0xd
 2294 0514 F8000000 		.4byte	.LASF83
 2295 0518 06       		.byte	0x6
 2296 0519 1902     		.2byte	0x219
 2297 051b 81000000 		.4byte	0x81
 2298 051f 8A       		.byte	0x8a
 2299 0520 0D       		.uleb128 0xd
 2300 0521 5D0D0000 		.4byte	.LASF84
 2301 0525 06       		.byte	0x6
 2302 0526 1E02     		.2byte	0x21e
 2303 0528 81000000 		.4byte	0x81
 2304 052c 8B       		.byte	0x8b
 2305 052d 00       		.byte	0
 2306 052e 0E       		.uleb128 0xe
 2307 052f 99000000 		.4byte	0x99
 2308 0533 3E050000 		.4byte	0x53e
 2309 0537 0F       		.uleb128 0xf
 2310 0538 4D020000 		.4byte	0x24d
 2311 053c 00       		.byte	0
 2312 053d 00       		.byte	0
 2313 053e 05       		.uleb128 0x5
 2314 053f 450D0000 		.4byte	.LASF85
 2315 0543 06       		.byte	0x6
 2316 0544 1F02     		.2byte	0x21f
 2317 0546 2D040000 		.4byte	0x42d
 2318 054a 10       		.uleb128 0x10
 2319 054b 1C       		.byte	0x1c
 2320 054c 06       		.byte	0x6
 2321 054d 2502     		.2byte	0x225
 2322 054f C9050000 		.4byte	0x5c9
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 103


 2323 0553 0D       		.uleb128 0xd
 2324 0554 2B080000 		.4byte	.LASF86
 2325 0558 06       		.byte	0x6
 2326 0559 2A02     		.2byte	0x22a
 2327 055b C9050000 		.4byte	0x5c9
 2328 055f 00       		.byte	0
 2329 0560 0D       		.uleb128 0xd
 2330 0561 D1060000 		.4byte	.LASF87
 2331 0565 06       		.byte	0x6
 2332 0566 2F02     		.2byte	0x22f
 2333 0568 C9050000 		.4byte	0x5c9
 2334 056c 04       		.byte	0x4
 2335 056d 0D       		.uleb128 0xd
 2336 056e E1030000 		.4byte	.LASF88
 2337 0572 06       		.byte	0x6
 2338 0573 3402     		.2byte	0x234
 2339 0575 C9050000 		.4byte	0x5c9
 2340 0579 08       		.byte	0x8
 2341 057a 0D       		.uleb128 0xd
 2342 057b BC0A0000 		.4byte	.LASF89
 2343 057f 06       		.byte	0x6
 2344 0580 3902     		.2byte	0x239
 2345 0582 C9050000 		.4byte	0x5c9
 2346 0586 0C       		.byte	0xc
 2347 0587 0D       		.uleb128 0xd
 2348 0588 CB0D0000 		.4byte	.LASF90
 2349 058c 06       		.byte	0x6
 2350 058d 3E02     		.2byte	0x23e
 2351 058f 99000000 		.4byte	0x99
 2352 0593 10       		.byte	0x10
 2353 0594 0D       		.uleb128 0xd
 2354 0595 84080000 		.4byte	.LASF91
 2355 0599 06       		.byte	0x6
 2356 059a 4302     		.2byte	0x243
 2357 059c 99000000 		.4byte	0x99
 2358 05a0 14       		.byte	0x14
 2359 05a1 0D       		.uleb128 0xd
 2360 05a2 04060000 		.4byte	.LASF92
 2361 05a6 06       		.byte	0x6
 2362 05a7 4802     		.2byte	0x248
 2363 05a9 81000000 		.4byte	0x81
 2364 05ad 18       		.byte	0x18
 2365 05ae 0D       		.uleb128 0xd
 2366 05af D90B0000 		.4byte	.LASF93
 2367 05b3 06       		.byte	0x6
 2368 05b4 4D02     		.2byte	0x24d
 2369 05b6 81000000 		.4byte	0x81
 2370 05ba 19       		.byte	0x19
 2371 05bb 0D       		.uleb128 0xd
 2372 05bc 57020000 		.4byte	.LASF94
 2373 05c0 06       		.byte	0x6
 2374 05c1 5202     		.2byte	0x252
 2375 05c3 81000000 		.4byte	0x81
 2376 05c7 1A       		.byte	0x1a
 2377 05c8 00       		.byte	0
 2378 05c9 07       		.uleb128 0x7
 2379 05ca 04       		.byte	0x4
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 104


 2380 05cb D7000000 		.4byte	0xd7
 2381 05cf 05       		.uleb128 0x5
 2382 05d0 7A050000 		.4byte	.LASF95
 2383 05d4 06       		.byte	0x6
 2384 05d5 5302     		.2byte	0x253
 2385 05d7 4A050000 		.4byte	0x54a
 2386 05db 10       		.uleb128 0x10
 2387 05dc 20       		.byte	0x20
 2388 05dd 06       		.byte	0x6
 2389 05de 8602     		.2byte	0x286
 2390 05e0 67060000 		.4byte	0x667
 2391 05e4 0D       		.uleb128 0xd
 2392 05e5 8D0E0000 		.4byte	.LASF96
 2393 05e9 06       		.byte	0x6
 2394 05ea 8F02     		.2byte	0x28f
 2395 05ec 67060000 		.4byte	0x667
 2396 05f0 00       		.byte	0
 2397 05f1 0D       		.uleb128 0xd
 2398 05f2 6C0D0000 		.4byte	.LASF97
 2399 05f6 06       		.byte	0x6
 2400 05f7 9602     		.2byte	0x296
 2401 05f9 6E060000 		.4byte	0x66e
 2402 05fd 04       		.byte	0x4
 2403 05fe 0D       		.uleb128 0xd
 2404 05ff 7A090000 		.4byte	.LASF98
 2405 0603 06       		.byte	0x6
 2406 0604 9C02     		.2byte	0x29c
 2407 0606 70060000 		.4byte	0x670
 2408 060a 08       		.byte	0x8
 2409 060b 0D       		.uleb128 0xd
 2410 060c 4A080000 		.4byte	.LASF99
 2411 0610 06       		.byte	0x6
 2412 0611 A202     		.2byte	0x2a2
 2413 0613 6E060000 		.4byte	0x66e
 2414 0617 0C       		.byte	0xc
 2415 0618 0D       		.uleb128 0xd
 2416 0619 240C0000 		.4byte	.LASF100
 2417 061d 06       		.byte	0x6
 2418 061e A902     		.2byte	0x2a9
 2419 0620 76060000 		.4byte	0x676
 2420 0624 10       		.byte	0x10
 2421 0625 0D       		.uleb128 0xd
 2422 0626 1E0D0000 		.4byte	.LASF101
 2423 062a 06       		.byte	0x6
 2424 062b AE02     		.2byte	0x2ae
 2425 062d 99000000 		.4byte	0x99
 2426 0631 14       		.byte	0x14
 2427 0632 0D       		.uleb128 0xd
 2428 0633 00050000 		.4byte	.LASF102
 2429 0637 06       		.byte	0x6
 2430 0638 B502     		.2byte	0x2b5
 2431 063a 8D000000 		.4byte	0x8d
 2432 063e 18       		.byte	0x18
 2433 063f 0D       		.uleb128 0xd
 2434 0640 AE020000 		.4byte	.LASF103
 2435 0644 06       		.byte	0x6
 2436 0645 BC02     		.2byte	0x2bc
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 105


 2437 0647 81000000 		.4byte	0x81
 2438 064b 1A       		.byte	0x1a
 2439 064c 0D       		.uleb128 0xd
 2440 064d E5060000 		.4byte	.LASF104
 2441 0651 06       		.byte	0x6
 2442 0652 C602     		.2byte	0x2c6
 2443 0654 81000000 		.4byte	0x81
 2444 0658 1B       		.byte	0x1b
 2445 0659 0D       		.uleb128 0xd
 2446 065a B30D0000 		.4byte	.LASF105
 2447 065e 06       		.byte	0x6
 2448 065f CE02     		.2byte	0x2ce
 2449 0661 81000000 		.4byte	0x81
 2450 0665 1C       		.byte	0x1c
 2451 0666 00       		.byte	0
 2452 0667 07       		.uleb128 0x7
 2453 0668 04       		.byte	0x4
 2454 0669 6D060000 		.4byte	0x66d
 2455 066d 12       		.uleb128 0x12
 2456 066e 13       		.uleb128 0x13
 2457 066f 04       		.byte	0x4
 2458 0670 07       		.uleb128 0x7
 2459 0671 04       		.byte	0x4
 2460 0672 EE030000 		.4byte	0x3ee
 2461 0676 07       		.uleb128 0x7
 2462 0677 04       		.byte	0x4
 2463 0678 81000000 		.4byte	0x81
 2464 067c 05       		.uleb128 0x5
 2465 067d 8D030000 		.4byte	.LASF106
 2466 0681 06       		.byte	0x6
 2467 0682 CF02     		.2byte	0x2cf
 2468 0684 DB050000 		.4byte	0x5db
 2469 0688 10       		.uleb128 0x10
 2470 0689 20       		.byte	0x20
 2471 068a 06       		.byte	0x6
 2472 068b D502     		.2byte	0x2d5
 2473 068d 9F060000 		.4byte	0x69f
 2474 0691 0D       		.uleb128 0xd
 2475 0692 7C0F0000 		.4byte	.LASF107
 2476 0696 06       		.byte	0x6
 2477 0697 DA02     		.2byte	0x2da
 2478 0699 9F060000 		.4byte	0x69f
 2479 069d 00       		.byte	0
 2480 069e 00       		.byte	0
 2481 069f 0E       		.uleb128 0xe
 2482 06a0 7C060000 		.4byte	0x67c
 2483 06a4 AF060000 		.4byte	0x6af
 2484 06a8 0F       		.uleb128 0xf
 2485 06a9 4D020000 		.4byte	0x24d
 2486 06ad 00       		.byte	0
 2487 06ae 00       		.byte	0
 2488 06af 05       		.uleb128 0x5
 2489 06b0 CA050000 		.4byte	.LASF108
 2490 06b4 06       		.byte	0x6
 2491 06b5 DB02     		.2byte	0x2db
 2492 06b7 88060000 		.4byte	0x688
 2493 06bb 02       		.uleb128 0x2
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 106


 2494 06bc 08       		.byte	0x8
 2495 06bd 04       		.byte	0x4
 2496 06be 4C090000 		.4byte	.LASF109
 2497 06c2 09       		.uleb128 0x9
 2498 06c3 01       		.byte	0x1
 2499 06c4 2C000000 		.4byte	0x2c
 2500 06c8 07       		.byte	0x7
 2501 06c9 43       		.byte	0x43
 2502 06ca ED060000 		.4byte	0x6ed
 2503 06ce 0A       		.uleb128 0xa
 2504 06cf 7A0A0000 		.4byte	.LASF110
 2505 06d3 00       		.byte	0
 2506 06d4 0A       		.uleb128 0xa
 2507 06d5 0E070000 		.4byte	.LASF111
 2508 06d9 01       		.byte	0x1
 2509 06da 0A       		.uleb128 0xa
 2510 06db BE040000 		.4byte	.LASF112
 2511 06df 02       		.byte	0x2
 2512 06e0 0A       		.uleb128 0xa
 2513 06e1 6D0E0000 		.4byte	.LASF113
 2514 06e5 03       		.byte	0x3
 2515 06e6 0A       		.uleb128 0xa
 2516 06e7 85090000 		.4byte	.LASF114
 2517 06eb 04       		.byte	0x4
 2518 06ec 00       		.byte	0
 2519 06ed 03       		.uleb128 0x3
 2520 06ee ED060000 		.4byte	.LASF115
 2521 06f2 07       		.byte	0x7
 2522 06f3 49       		.byte	0x49
 2523 06f4 C2060000 		.4byte	0x6c2
 2524 06f8 0B       		.uleb128 0xb
 2525 06f9 08       		.byte	0x8
 2526 06fa 07       		.byte	0x7
 2527 06fb CF       		.byte	0xcf
 2528 06fc 19070000 		.4byte	0x719
 2529 0700 0C       		.uleb128 0xc
 2530 0701 830B0000 		.4byte	.LASF116
 2531 0705 07       		.byte	0x7
 2532 0706 D4       		.byte	0xd4
 2533 0707 99000000 		.4byte	0x99
 2534 070b 00       		.byte	0
 2535 070c 0C       		.uleb128 0xc
 2536 070d 7A080000 		.4byte	.LASF117
 2537 0711 07       		.byte	0x7
 2538 0712 D9       		.byte	0xd9
 2539 0713 99000000 		.4byte	0x99
 2540 0717 04       		.byte	0x4
 2541 0718 00       		.byte	0
 2542 0719 03       		.uleb128 0x3
 2543 071a DA010000 		.4byte	.LASF118
 2544 071e 07       		.byte	0x7
 2545 071f DA       		.byte	0xda
 2546 0720 F8060000 		.4byte	0x6f8
 2547 0724 14       		.uleb128 0x14
 2548 0725 65040000 		.4byte	.LASF119
 2549 0729 01       		.byte	0x1
 2550 072a 4A08     		.2byte	0x84a
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 107


 2551 072c 00000000 		.4byte	.LFB19
 2552 0730 2C000000 		.4byte	.LFE19-.LFB19
 2553 0734 01       		.uleb128 0x1
 2554 0735 9C       		.byte	0x9c
 2555 0736 4B070000 		.4byte	0x74b
 2556 073a 15       		.uleb128 0x15
 2557 073b F80C0000 		.4byte	.LASF121
 2558 073f 01       		.byte	0x1
 2559 0740 4C08     		.2byte	0x84c
 2560 0742 99000000 		.4byte	0x99
 2561 0746 00000000 		.4byte	.LLST0
 2562 074a 00       		.byte	0
 2563 074b 14       		.uleb128 0x14
 2564 074c 95000000 		.4byte	.LASF120
 2565 0750 01       		.byte	0x1
 2566 0751 7008     		.2byte	0x870
 2567 0753 00000000 		.4byte	.LFB20
 2568 0757 08000000 		.4byte	.LFE20-.LFB20
 2569 075b 01       		.uleb128 0x1
 2570 075c 9C       		.byte	0x9c
 2571 075d 6B070000 		.4byte	0x76b
 2572 0761 16       		.uleb128 0x16
 2573 0762 06000000 		.4byte	.LVL4
 2574 0766 24070000 		.4byte	0x724
 2575 076a 00       		.byte	0
 2576 076b 17       		.uleb128 0x17
 2577 076c 380E0000 		.4byte	.LASF208
 2578 0770 01       		.byte	0x1
 2579 0771 EC       		.byte	0xec
 2580 0772 99000000 		.4byte	0x99
 2581 0776 00000000 		.4byte	.LFB1
 2582 077a 10000000 		.4byte	.LFE1-.LFB1
 2583 077e 01       		.uleb128 0x1
 2584 077f 9C       		.byte	0x9c
 2585 0780 18       		.uleb128 0x18
 2586 0781 D30A0000 		.4byte	.LASF123
 2587 0785 01       		.byte	0x1
 2588 0786 1A01     		.2byte	0x11a
 2589 0788 BA000000 		.4byte	0xba
 2590 078c 00000000 		.4byte	.LFB2
 2591 0790 40000000 		.4byte	.LFE2-.LFB2
 2592 0794 01       		.uleb128 0x1
 2593 0795 9C       		.byte	0x9c
 2594 0796 C4070000 		.4byte	0x7c4
 2595 079a 19       		.uleb128 0x19
 2596 079b 550F0000 		.4byte	.LASF129
 2597 079f 01       		.byte	0x1
 2598 07a0 1A01     		.2byte	0x11a
 2599 07a2 99000000 		.4byte	0x99
 2600 07a6 1E000000 		.4byte	.LLST1
 2601 07aa 15       		.uleb128 0x15
 2602 07ab 2D0F0000 		.4byte	.LASF122
 2603 07af 01       		.byte	0x1
 2604 07b0 1C01     		.2byte	0x11c
 2605 07b2 BA000000 		.4byte	0xba
 2606 07b6 3F000000 		.4byte	.LLST2
 2607 07ba 16       		.uleb128 0x16
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 108


 2608 07bb 38000000 		.4byte	.LVL7
 2609 07bf 7E110000 		.4byte	0x117e
 2610 07c3 00       		.byte	0
 2611 07c4 18       		.uleb128 0x18
 2612 07c5 AC040000 		.4byte	.LASF124
 2613 07c9 01       		.byte	0x1
 2614 07ca 6D01     		.2byte	0x16d
 2615 07cc BA000000 		.4byte	0xba
 2616 07d0 00000000 		.4byte	.LFB3
 2617 07d4 2C000000 		.4byte	.LFE3-.LFB3
 2618 07d8 01       		.uleb128 0x1
 2619 07d9 9C       		.byte	0x9c
 2620 07da F8070000 		.4byte	0x7f8
 2621 07de 15       		.uleb128 0x15
 2622 07df 72000000 		.4byte	.LASF125
 2623 07e3 01       		.byte	0x1
 2624 07e4 6F01     		.2byte	0x16f
 2625 07e6 BA000000 		.4byte	0xba
 2626 07ea 5D000000 		.4byte	.LLST3
 2627 07ee 16       		.uleb128 0x16
 2628 07ef 16000000 		.4byte	.LVL10
 2629 07f3 8A110000 		.4byte	0x118a
 2630 07f7 00       		.byte	0
 2631 07f8 18       		.uleb128 0x18
 2632 07f9 0F060000 		.4byte	.LASF126
 2633 07fd 01       		.byte	0x1
 2634 07fe AB01     		.2byte	0x1ab
 2635 0800 BA000000 		.4byte	0xba
 2636 0804 00000000 		.4byte	.LFB4
 2637 0808 3C000000 		.4byte	.LFE4-.LFB4
 2638 080c 01       		.uleb128 0x1
 2639 080d 9C       		.byte	0x9c
 2640 080e 50080000 		.4byte	0x850
 2641 0812 15       		.uleb128 0x15
 2642 0813 72000000 		.4byte	.LASF125
 2643 0817 01       		.byte	0x1
 2644 0818 AD01     		.2byte	0x1ad
 2645 081a BA000000 		.4byte	0xba
 2646 081e 7C000000 		.4byte	.LLST4
 2647 0822 15       		.uleb128 0x15
 2648 0823 02090000 		.4byte	.LASF127
 2649 0827 01       		.byte	0x1
 2650 0828 AF01     		.2byte	0x1af
 2651 082a 99000000 		.4byte	0x99
 2652 082e CA000000 		.4byte	.LLST5
 2653 0832 1A       		.uleb128 0x1a
 2654 0833 18000000 		.4byte	.LVL15
 2655 0837 80070000 		.4byte	0x780
 2656 083b 46080000 		.4byte	0x846
 2657 083f 1B       		.uleb128 0x1b
 2658 0840 01       		.uleb128 0x1
 2659 0841 50       		.byte	0x50
 2660 0842 02       		.uleb128 0x2
 2661 0843 74       		.byte	0x74
 2662 0844 00       		.sleb128 0
 2663 0845 00       		.byte	0
 2664 0846 16       		.uleb128 0x16
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 109


 2665 0847 26000000 		.4byte	.LVL16
 2666 084b C4070000 		.4byte	0x7c4
 2667 084f 00       		.byte	0
 2668 0850 18       		.uleb128 0x18
 2669 0851 970A0000 		.4byte	.LASF128
 2670 0855 01       		.byte	0x1
 2671 0856 1702     		.2byte	0x217
 2672 0858 BA000000 		.4byte	0xba
 2673 085c 00000000 		.4byte	.LFB5
 2674 0860 54000000 		.4byte	.LFE5-.LFB5
 2675 0864 01       		.uleb128 0x1
 2676 0865 9C       		.byte	0x9c
 2677 0866 A4080000 		.4byte	0x8a4
 2678 086a 19       		.uleb128 0x19
 2679 086b 550F0000 		.4byte	.LASF129
 2680 086f 01       		.byte	0x1
 2681 0870 1702     		.2byte	0x217
 2682 0872 99000000 		.4byte	0x99
 2683 0876 DD000000 		.4byte	.LLST6
 2684 087a 19       		.uleb128 0x19
 2685 087b B9010000 		.4byte	.LASF130
 2686 087f 01       		.byte	0x1
 2687 0880 1702     		.2byte	0x217
 2688 0882 99000000 		.4byte	0x99
 2689 0886 FE000000 		.4byte	.LLST7
 2690 088a 15       		.uleb128 0x15
 2691 088b 2D0F0000 		.4byte	.LASF122
 2692 088f 01       		.byte	0x1
 2693 0890 1902     		.2byte	0x219
 2694 0892 BA000000 		.4byte	0xba
 2695 0896 1F010000 		.4byte	.LLST8
 2696 089a 16       		.uleb128 0x16
 2697 089b 48000000 		.4byte	.LVL22
 2698 089f 96110000 		.4byte	0x1196
 2699 08a3 00       		.byte	0
 2700 08a4 18       		.uleb128 0x18
 2701 08a5 27040000 		.4byte	.LASF131
 2702 08a9 01       		.byte	0x1
 2703 08aa 8102     		.2byte	0x281
 2704 08ac BA000000 		.4byte	0xba
 2705 08b0 00000000 		.4byte	.LFB6
 2706 08b4 2C000000 		.4byte	.LFE6-.LFB6
 2707 08b8 01       		.uleb128 0x1
 2708 08b9 9C       		.byte	0x9c
 2709 08ba D8080000 		.4byte	0x8d8
 2710 08be 15       		.uleb128 0x15
 2711 08bf 72000000 		.4byte	.LASF125
 2712 08c3 01       		.byte	0x1
 2713 08c4 8302     		.2byte	0x283
 2714 08c6 BA000000 		.4byte	0xba
 2715 08ca 3D010000 		.4byte	.LLST9
 2716 08ce 16       		.uleb128 0x16
 2717 08cf 16000000 		.4byte	.LVL25
 2718 08d3 A2110000 		.4byte	0x11a2
 2719 08d7 00       		.byte	0
 2720 08d8 1C       		.uleb128 0x1c
 2721 08d9 780D0000 		.4byte	.LASF138
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 110


 2722 08dd 01       		.byte	0x1
 2723 08de 4803     		.2byte	0x348
 2724 08e0 00000000 		.4byte	.LFB8
 2725 08e4 9C000000 		.4byte	.LFE8-.LFB8
 2726 08e8 01       		.uleb128 0x1
 2727 08e9 9C       		.byte	0x9c
 2728 08ea A2090000 		.4byte	0x9a2
 2729 08ee 19       		.uleb128 0x19
 2730 08ef 550F0000 		.4byte	.LASF129
 2731 08f3 01       		.byte	0x1
 2732 08f4 4803     		.2byte	0x348
 2733 08f6 99000000 		.4byte	0x99
 2734 08fa 5C010000 		.4byte	.LLST10
 2735 08fe 19       		.uleb128 0x19
 2736 08ff 64000000 		.4byte	.LASF132
 2737 0903 01       		.byte	0x1
 2738 0904 4803     		.2byte	0x348
 2739 0906 99000000 		.4byte	0x99
 2740 090a 7D010000 		.4byte	.LLST11
 2741 090e 19       		.uleb128 0x19
 2742 090f BB0D0000 		.4byte	.LASF133
 2743 0913 01       		.byte	0x1
 2744 0914 4803     		.2byte	0x348
 2745 0916 99000000 		.4byte	0x99
 2746 091a 9E010000 		.4byte	.LLST12
 2747 091e 1D       		.uleb128 0x1d
 2748 091f 86040000 		.4byte	.LASF134
 2749 0923 01       		.byte	0x1
 2750 0924 4A03     		.2byte	0x34a
 2751 0926 99000000 		.4byte	0x99
 2752 092a 01       		.byte	0x1
 2753 092b 15       		.uleb128 0x15
 2754 092c C10D0000 		.4byte	.LASF135
 2755 0930 01       		.byte	0x1
 2756 0931 4B03     		.2byte	0x34b
 2757 0933 99000000 		.4byte	0x99
 2758 0937 CA010000 		.4byte	.LLST13
 2759 093b 15       		.uleb128 0x15
 2760 093c 15010000 		.4byte	.LASF136
 2761 0940 01       		.byte	0x1
 2762 0941 4C03     		.2byte	0x34c
 2763 0943 81000000 		.4byte	0x81
 2764 0947 E9010000 		.4byte	.LLST14
 2765 094b 15       		.uleb128 0x15
 2766 094c 8B0B0000 		.4byte	.LASF137
 2767 0950 01       		.byte	0x1
 2768 0951 4D03     		.2byte	0x34d
 2769 0953 A2090000 		.4byte	0x9a2
 2770 0957 12020000 		.4byte	.LLST15
 2771 095b 16       		.uleb128 0x16
 2772 095c 1A000000 		.4byte	.LVL32
 2773 0960 AE110000 		.4byte	0x11ae
 2774 0964 16       		.uleb128 0x16
 2775 0965 3A000000 		.4byte	.LVL33
 2776 0969 B9110000 		.4byte	0x11b9
 2777 096d 16       		.uleb128 0x16
 2778 096e 4C000000 		.4byte	.LVL34
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 111


 2779 0972 AE110000 		.4byte	0x11ae
 2780 0976 16       		.uleb128 0x16
 2781 0977 6C000000 		.4byte	.LVL35
 2782 097b B9110000 		.4byte	0x11b9
 2783 097f 16       		.uleb128 0x16
 2784 0980 72000000 		.4byte	.LVL36
 2785 0984 AE110000 		.4byte	0x11ae
 2786 0988 16       		.uleb128 0x16
 2787 0989 84000000 		.4byte	.LVL37
 2788 098d B9110000 		.4byte	0x11b9
 2789 0991 1E       		.uleb128 0x1e
 2790 0992 8C000000 		.4byte	.LVL38
 2791 0996 C4110000 		.4byte	0x11c4
 2792 099a 1B       		.uleb128 0x1b
 2793 099b 01       		.uleb128 0x1
 2794 099c 50       		.byte	0x50
 2795 099d 02       		.uleb128 0x2
 2796 099e 74       		.byte	0x74
 2797 099f 00       		.sleb128 0
 2798 09a0 00       		.byte	0
 2799 09a1 00       		.byte	0
 2800 09a2 07       		.uleb128 0x7
 2801 09a3 04       		.byte	0x4
 2802 09a4 A8090000 		.4byte	0x9a8
 2803 09a8 1F       		.uleb128 0x1f
 2804 09a9 CF050000 		.4byte	0x5cf
 2805 09ad 1C       		.uleb128 0x1c
 2806 09ae 26070000 		.4byte	.LASF139
 2807 09b2 01       		.byte	0x1
 2808 09b3 8E04     		.2byte	0x48e
 2809 09b5 00000000 		.4byte	.LFB11
 2810 09b9 80000000 		.4byte	.LFE11-.LFB11
 2811 09bd 01       		.uleb128 0x1
 2812 09be 9C       		.byte	0x9c
 2813 09bf 560A0000 		.4byte	0xa56
 2814 09c3 19       		.uleb128 0x19
 2815 09c4 BB0D0000 		.4byte	.LASF133
 2816 09c8 01       		.byte	0x1
 2817 09c9 8E04     		.2byte	0x48e
 2818 09cb 99000000 		.4byte	0x99
 2819 09cf 25020000 		.4byte	.LLST16
 2820 09d3 15       		.uleb128 0x15
 2821 09d4 15010000 		.4byte	.LASF136
 2822 09d8 01       		.byte	0x1
 2823 09d9 9004     		.2byte	0x490
 2824 09db 81000000 		.4byte	0x81
 2825 09df 46020000 		.4byte	.LLST17
 2826 09e3 15       		.uleb128 0x15
 2827 09e4 2C020000 		.4byte	.LASF140
 2828 09e8 01       		.byte	0x1
 2829 09e9 9204     		.2byte	0x492
 2830 09eb 99000000 		.4byte	0x99
 2831 09ef 59020000 		.4byte	.LLST18
 2832 09f3 15       		.uleb128 0x15
 2833 09f4 10040000 		.4byte	.LASF141
 2834 09f8 01       		.byte	0x1
 2835 09f9 9404     		.2byte	0x494
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 112


 2836 09fb 99000000 		.4byte	0x99
 2837 09ff 78020000 		.4byte	.LLST19
 2838 0a03 15       		.uleb128 0x15
 2839 0a04 C6020000 		.4byte	.LASF142
 2840 0a08 01       		.byte	0x1
 2841 0a09 9504     		.2byte	0x495
 2842 0a0b 99000000 		.4byte	0x99
 2843 0a0f 97020000 		.4byte	.LLST20
 2844 0a13 15       		.uleb128 0x15
 2845 0a14 730B0000 		.4byte	.LASF143
 2846 0a18 01       		.byte	0x1
 2847 0a19 9704     		.2byte	0x497
 2848 0a1b 99000000 		.4byte	0x99
 2849 0a1f B6020000 		.4byte	.LLST21
 2850 0a23 15       		.uleb128 0x15
 2851 0a24 0D0D0000 		.4byte	.LASF144
 2852 0a28 01       		.byte	0x1
 2853 0a29 9804     		.2byte	0x498
 2854 0a2b 99000000 		.4byte	0x99
 2855 0a2f E0020000 		.4byte	.LLST22
 2856 0a33 15       		.uleb128 0x15
 2857 0a34 5D020000 		.4byte	.LASF145
 2858 0a38 01       		.byte	0x1
 2859 0a39 9A04     		.2byte	0x49a
 2860 0a3b A2090000 		.4byte	0x9a2
 2861 0a3f F3020000 		.4byte	.LLST23
 2862 0a43 16       		.uleb128 0x16
 2863 0a44 34000000 		.4byte	.LVL49
 2864 0a48 AE110000 		.4byte	0x11ae
 2865 0a4c 16       		.uleb128 0x16
 2866 0a4d 6C000000 		.4byte	.LVL60
 2867 0a51 B9110000 		.4byte	0x11b9
 2868 0a55 00       		.byte	0
 2869 0a56 20       		.uleb128 0x20
 2870 0a57 E7030000 		.4byte	.LASF209
 2871 0a5b 01       		.byte	0x1
 2872 0a5c 2405     		.2byte	0x524
 2873 0a5e 00000000 		.4byte	.LFB12
 2874 0a62 02000000 		.4byte	.LFE12-.LFB12
 2875 0a66 01       		.uleb128 0x1
 2876 0a67 9C       		.byte	0x9c
 2877 0a68 1C       		.uleb128 0x1c
 2878 0a69 770C0000 		.4byte	.LASF146
 2879 0a6d 01       		.byte	0x1
 2880 0a6e 7105     		.2byte	0x571
 2881 0a70 00000000 		.4byte	.LFB13
 2882 0a74 08000000 		.4byte	.LFE13-.LFB13
 2883 0a78 01       		.uleb128 0x1
 2884 0a79 9C       		.byte	0x9c
 2885 0a7a A00A0000 		.4byte	0xaa0
 2886 0a7e 19       		.uleb128 0x19
 2887 0a7f FA0B0000 		.4byte	.LASF147
 2888 0a83 01       		.byte	0x1
 2889 0a84 7105     		.2byte	0x571
 2890 0a86 E8000000 		.4byte	0xe8
 2891 0a8a 06030000 		.4byte	.LLST24
 2892 0a8e 1E       		.uleb128 0x1e
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 113


 2893 0a8f 06000000 		.4byte	.LVL68
 2894 0a93 D0110000 		.4byte	0x11d0
 2895 0a97 1B       		.uleb128 0x1b
 2896 0a98 01       		.uleb128 0x1
 2897 0a99 50       		.byte	0x50
 2898 0a9a 03       		.uleb128 0x3
 2899 0a9b F3       		.byte	0xf3
 2900 0a9c 01       		.uleb128 0x1
 2901 0a9d 50       		.byte	0x50
 2902 0a9e 00       		.byte	0
 2903 0a9f 00       		.byte	0
 2904 0aa0 1C       		.uleb128 0x1c
 2905 0aa1 1F000000 		.4byte	.LASF148
 2906 0aa5 01       		.byte	0x1
 2907 0aa6 8805     		.2byte	0x588
 2908 0aa8 00000000 		.4byte	.LFB14
 2909 0aac 30000000 		.4byte	.LFE14-.LFB14
 2910 0ab0 01       		.uleb128 0x1
 2911 0ab1 9C       		.byte	0x9c
 2912 0ab2 C70A0000 		.4byte	0xac7
 2913 0ab6 19       		.uleb128 0x19
 2914 0ab7 09040000 		.4byte	.LASF149
 2915 0abb 01       		.byte	0x1
 2916 0abc 8805     		.2byte	0x588
 2917 0abe 99000000 		.4byte	0x99
 2918 0ac2 27030000 		.4byte	.LLST25
 2919 0ac6 00       		.byte	0
 2920 0ac7 1C       		.uleb128 0x1c
 2921 0ac8 910D0000 		.4byte	.LASF150
 2922 0acc 01       		.byte	0x1
 2923 0acd CC05     		.2byte	0x5cc
 2924 0acf 00000000 		.4byte	.LFB15
 2925 0ad3 30000000 		.4byte	.LFE15-.LFB15
 2926 0ad7 01       		.uleb128 0x1
 2927 0ad8 9C       		.byte	0x9c
 2928 0ad9 EE0A0000 		.4byte	0xaee
 2929 0add 19       		.uleb128 0x19
 2930 0ade D50D0000 		.4byte	.LASF47
 2931 0ae2 01       		.byte	0x1
 2932 0ae3 CC05     		.2byte	0x5cc
 2933 0ae5 99000000 		.4byte	0x99
 2934 0ae9 55030000 		.4byte	.LLST26
 2935 0aed 00       		.byte	0
 2936 0aee 1C       		.uleb128 0x1c
 2937 0aef 84070000 		.4byte	.LASF151
 2938 0af3 01       		.byte	0x1
 2939 0af4 2006     		.2byte	0x620
 2940 0af6 00000000 		.4byte	.LFB16
 2941 0afa 12000000 		.4byte	.LFE16-.LFB16
 2942 0afe 01       		.uleb128 0x1
 2943 0aff 9C       		.byte	0x9c
 2944 0b00 4A0B0000 		.4byte	0xb4a
 2945 0b04 19       		.uleb128 0x19
 2946 0b05 D50D0000 		.4byte	.LASF47
 2947 0b09 01       		.byte	0x1
 2948 0b0a 2006     		.2byte	0x620
 2949 0b0c 99000000 		.4byte	0x99
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 114


 2950 0b10 83030000 		.4byte	.LLST27
 2951 0b14 19       		.uleb128 0x19
 2952 0b15 09040000 		.4byte	.LASF149
 2953 0b19 01       		.byte	0x1
 2954 0b1a 2006     		.2byte	0x620
 2955 0b1c 99000000 		.4byte	0x99
 2956 0b20 AF030000 		.4byte	.LLST28
 2957 0b24 1A       		.uleb128 0x1a
 2958 0b25 0A000000 		.4byte	.LVL77
 2959 0b29 A00A0000 		.4byte	0xaa0
 2960 0b2d 390B0000 		.4byte	0xb39
 2961 0b31 1B       		.uleb128 0x1b
 2962 0b32 01       		.uleb128 0x1
 2963 0b33 50       		.byte	0x50
 2964 0b34 03       		.uleb128 0x3
 2965 0b35 F3       		.byte	0xf3
 2966 0b36 01       		.uleb128 0x1
 2967 0b37 51       		.byte	0x51
 2968 0b38 00       		.byte	0
 2969 0b39 1E       		.uleb128 0x1e
 2970 0b3a 10000000 		.4byte	.LVL78
 2971 0b3e C70A0000 		.4byte	0xac7
 2972 0b42 1B       		.uleb128 0x1b
 2973 0b43 01       		.uleb128 0x1
 2974 0b44 50       		.byte	0x50
 2975 0b45 02       		.uleb128 0x2
 2976 0b46 74       		.byte	0x74
 2977 0b47 00       		.sleb128 0
 2978 0b48 00       		.byte	0
 2979 0b49 00       		.byte	0
 2980 0b4a 18       		.uleb128 0x18
 2981 0b4b CA080000 		.4byte	.LASF152
 2982 0b4f 01       		.byte	0x1
 2983 0b50 5406     		.2byte	0x654
 2984 0b52 BA000000 		.4byte	0xba
 2985 0b56 00000000 		.4byte	.LFB17
 2986 0b5a 1A000000 		.4byte	.LFE17-.LFB17
 2987 0b5e 01       		.uleb128 0x1
 2988 0b5f 9C       		.byte	0x9c
 2989 0b60 9C0B0000 		.4byte	0xb9c
 2990 0b64 19       		.uleb128 0x19
 2991 0b65 550F0000 		.4byte	.LASF129
 2992 0b69 01       		.byte	0x1
 2993 0b6a 5406     		.2byte	0x654
 2994 0b6c 99000000 		.4byte	0x99
 2995 0b70 D0030000 		.4byte	.LLST29
 2996 0b74 15       		.uleb128 0x15
 2997 0b75 6B070000 		.4byte	.LASF153
 2998 0b79 01       		.byte	0x1
 2999 0b7a 5606     		.2byte	0x656
 3000 0b7c BA000000 		.4byte	0xba
 3001 0b80 12040000 		.4byte	.LLST30
 3002 0b84 1E       		.uleb128 0x1e
 3003 0b85 18000000 		.4byte	.LVL86
 3004 0b89 DB110000 		.4byte	0x11db
 3005 0b8d 1B       		.uleb128 0x1b
 3006 0b8e 01       		.uleb128 0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 115


 3007 0b8f 50       		.byte	0x50
 3008 0b90 03       		.uleb128 0x3
 3009 0b91 F3       		.byte	0xf3
 3010 0b92 01       		.uleb128 0x1
 3011 0b93 50       		.byte	0x50
 3012 0b94 1B       		.uleb128 0x1b
 3013 0b95 01       		.uleb128 0x1
 3014 0b96 51       		.byte	0x51
 3015 0b97 02       		.uleb128 0x2
 3016 0b98 08       		.byte	0x8
 3017 0b99 55       		.byte	0x55
 3018 0b9a 00       		.byte	0
 3019 0b9b 00       		.byte	0
 3020 0b9c 18       		.uleb128 0x18
 3021 0b9d B4070000 		.4byte	.LASF154
 3022 0ba1 01       		.byte	0x1
 3023 0ba2 C906     		.2byte	0x6c9
 3024 0ba4 BA000000 		.4byte	0xba
 3025 0ba8 00000000 		.4byte	.LFB18
 3026 0bac 1A000000 		.4byte	.LFE18-.LFB18
 3027 0bb0 01       		.uleb128 0x1
 3028 0bb1 9C       		.byte	0x9c
 3029 0bb2 E70B0000 		.4byte	0xbe7
 3030 0bb6 15       		.uleb128 0x15
 3031 0bb7 6B070000 		.4byte	.LASF153
 3032 0bbb 01       		.byte	0x1
 3033 0bbc CB06     		.2byte	0x6cb
 3034 0bbe BA000000 		.4byte	0xba
 3035 0bc2 3C040000 		.4byte	.LLST31
 3036 0bc6 15       		.uleb128 0x15
 3037 0bc7 02090000 		.4byte	.LASF127
 3038 0bcb 01       		.byte	0x1
 3039 0bcc CC06     		.2byte	0x6cc
 3040 0bce 99000000 		.4byte	0x99
 3041 0bd2 66040000 		.4byte	.LLST32
 3042 0bd6 1E       		.uleb128 0x1e
 3043 0bd7 0E000000 		.4byte	.LVL89
 3044 0bdb 4A0B0000 		.4byte	0xb4a
 3045 0bdf 1B       		.uleb128 0x1b
 3046 0be0 01       		.uleb128 0x1
 3047 0be1 50       		.byte	0x50
 3048 0be2 02       		.uleb128 0x2
 3049 0be3 74       		.byte	0x74
 3050 0be4 00       		.sleb128 0
 3051 0be5 00       		.byte	0
 3052 0be6 00       		.byte	0
 3053 0be7 18       		.uleb128 0x18
 3054 0be8 0C050000 		.4byte	.LASF155
 3055 0bec 01       		.byte	0x1
 3056 0bed E80A     		.2byte	0xae8
 3057 0bef 99000000 		.4byte	0x99
 3058 0bf3 00000000 		.4byte	.LFB23
 3059 0bf7 10000000 		.4byte	.LFE23-.LFB23
 3060 0bfb 01       		.uleb128 0x1
 3061 0bfc 9C       		.byte	0x9c
 3062 0bfd 2E0C0000 		.4byte	0xc2e
 3063 0c01 19       		.uleb128 0x19
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 116


 3064 0c02 550F0000 		.4byte	.LASF129
 3065 0c06 01       		.byte	0x1
 3066 0c07 E80A     		.2byte	0xae8
 3067 0c09 99000000 		.4byte	0x99
 3068 0c0d 85040000 		.4byte	.LLST33
 3069 0c11 21       		.uleb128 0x21
 3070 0c12 F30B0000 		.4byte	.LASF156
 3071 0c16 01       		.byte	0x1
 3072 0c17 EA0A     		.2byte	0xaea
 3073 0c19 99000000 		.4byte	0x99
 3074 0c1d 01       		.uleb128 0x1
 3075 0c1e 50       		.byte	0x50
 3076 0c1f 21       		.uleb128 0x21
 3077 0c20 C9010000 		.4byte	.LASF157
 3078 0c24 01       		.byte	0x1
 3079 0c25 EE0A     		.2byte	0xaee
 3080 0c27 2E0C0000 		.4byte	0xc2e
 3081 0c2b 01       		.uleb128 0x1
 3082 0c2c 53       		.byte	0x53
 3083 0c2d 00       		.byte	0
 3084 0c2e 07       		.uleb128 0x7
 3085 0c2f 04       		.byte	0x4
 3086 0c30 54020000 		.4byte	0x254
 3087 0c34 18       		.uleb128 0x18
 3088 0c35 9C0C0000 		.4byte	.LASF158
 3089 0c39 01       		.byte	0x1
 3090 0c3a 140B     		.2byte	0xb14
 3091 0c3c 99000000 		.4byte	0x99
 3092 0c40 00000000 		.4byte	.LFB24
 3093 0c44 10000000 		.4byte	.LFE24-.LFB24
 3094 0c48 01       		.uleb128 0x1
 3095 0c49 9C       		.byte	0x9c
 3096 0c4a 7B0C0000 		.4byte	0xc7b
 3097 0c4e 19       		.uleb128 0x19
 3098 0c4f 550F0000 		.4byte	.LASF129
 3099 0c53 01       		.byte	0x1
 3100 0c54 140B     		.2byte	0xb14
 3101 0c56 99000000 		.4byte	0x99
 3102 0c5a A6040000 		.4byte	.LLST34
 3103 0c5e 21       		.uleb128 0x21
 3104 0c5f F30B0000 		.4byte	.LASF156
 3105 0c63 01       		.byte	0x1
 3106 0c64 160B     		.2byte	0xb16
 3107 0c66 99000000 		.4byte	0x99
 3108 0c6a 01       		.uleb128 0x1
 3109 0c6b 50       		.byte	0x50
 3110 0c6c 21       		.uleb128 0x21
 3111 0c6d C9010000 		.4byte	.LASF157
 3112 0c71 01       		.byte	0x1
 3113 0c72 1A0B     		.2byte	0xb1a
 3114 0c74 2E0C0000 		.4byte	0xc2e
 3115 0c78 01       		.uleb128 0x1
 3116 0c79 53       		.byte	0x53
 3117 0c7a 00       		.byte	0
 3118 0c7b 18       		.uleb128 0x18
 3119 0c7c 5E0F0000 		.4byte	.LASF159
 3120 0c80 01       		.byte	0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 117


 3121 0c81 400B     		.2byte	0xb40
 3122 0c83 81000000 		.4byte	0x81
 3123 0c87 00000000 		.4byte	.LFB25
 3124 0c8b 34000000 		.4byte	.LFE25-.LFB25
 3125 0c8f 01       		.uleb128 0x1
 3126 0c90 9C       		.byte	0x9c
 3127 0c91 D60C0000 		.4byte	0xcd6
 3128 0c95 19       		.uleb128 0x19
 3129 0c96 D10E0000 		.4byte	.LASF160
 3130 0c9a 01       		.byte	0x1
 3131 0c9b 400B     		.2byte	0xb40
 3132 0c9d 99000000 		.4byte	0x99
 3133 0ca1 C7040000 		.4byte	.LLST35
 3134 0ca5 19       		.uleb128 0x19
 3135 0ca6 56060000 		.4byte	.LASF37
 3136 0caa 01       		.byte	0x1
 3137 0cab 400B     		.2byte	0xb40
 3138 0cad 99000000 		.4byte	0x99
 3139 0cb1 10050000 		.4byte	.LLST36
 3140 0cb5 15       		.uleb128 0x15
 3141 0cb6 C80B0000 		.4byte	.LASF161
 3142 0cba 01       		.byte	0x1
 3143 0cbb 420B     		.2byte	0xb42
 3144 0cbd 99000000 		.4byte	0x99
 3145 0cc1 4A050000 		.4byte	.LLST37
 3146 0cc5 15       		.uleb128 0x15
 3147 0cc6 DF0E0000 		.4byte	.LASF162
 3148 0cca 01       		.byte	0x1
 3149 0ccb 430B     		.2byte	0xb43
 3150 0ccd 99000000 		.4byte	0x99
 3151 0cd1 5D050000 		.4byte	.LLST38
 3152 0cd5 00       		.byte	0
 3153 0cd6 14       		.uleb128 0x14
 3154 0cd7 88060000 		.4byte	.LASF163
 3155 0cdb 01       		.byte	0x1
 3156 0cdc 9909     		.2byte	0x999
 3157 0cde 00000000 		.4byte	.LFB22
 3158 0ce2 3C000000 		.4byte	.LFE22-.LFB22
 3159 0ce6 01       		.uleb128 0x1
 3160 0ce7 9C       		.byte	0x9c
 3161 0ce8 860D0000 		.4byte	0xd86
 3162 0cec 19       		.uleb128 0x19
 3163 0ced 02090000 		.4byte	.LASF127
 3164 0cf1 01       		.byte	0x1
 3165 0cf2 9909     		.2byte	0x999
 3166 0cf4 99000000 		.4byte	0x99
 3167 0cf8 7C050000 		.4byte	.LLST39
 3168 0cfc 19       		.uleb128 0x19
 3169 0cfd C9010000 		.4byte	.LASF157
 3170 0d01 01       		.byte	0x1
 3171 0d02 9909     		.2byte	0x999
 3172 0d04 2E0C0000 		.4byte	0xc2e
 3173 0d08 A8050000 		.4byte	.LLST40
 3174 0d0c 15       		.uleb128 0x15
 3175 0d0d B7020000 		.4byte	.LASF164
 3176 0d11 01       		.byte	0x1
 3177 0d12 9B09     		.2byte	0x99b
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 118


 3178 0d14 81000000 		.4byte	0x81
 3179 0d18 D4050000 		.4byte	.LLST41
 3180 0d1c 1D       		.uleb128 0x1d
 3181 0d1d 4F010000 		.4byte	.LASF165
 3182 0d21 01       		.byte	0x1
 3183 0d22 9C09     		.2byte	0x99c
 3184 0d24 81000000 		.4byte	0x81
 3185 0d28 00       		.byte	0
 3186 0d29 15       		.uleb128 0x15
 3187 0d2a D10E0000 		.4byte	.LASF160
 3188 0d2e 01       		.byte	0x1
 3189 0d2f A209     		.2byte	0x9a2
 3190 0d31 99000000 		.4byte	0x99
 3191 0d35 FE050000 		.4byte	.LLST42
 3192 0d39 1A       		.uleb128 0x1a
 3193 0d3a 0A000000 		.4byte	.LVL114
 3194 0d3e E70B0000 		.4byte	0xbe7
 3195 0d42 4D0D0000 		.4byte	0xd4d
 3196 0d46 1B       		.uleb128 0x1b
 3197 0d47 01       		.uleb128 0x1
 3198 0d48 50       		.byte	0x50
 3199 0d49 02       		.uleb128 0x2
 3200 0d4a 74       		.byte	0x74
 3201 0d4b 00       		.sleb128 0
 3202 0d4c 00       		.byte	0
 3203 0d4d 1A       		.uleb128 0x1a
 3204 0d4e 14000000 		.4byte	.LVL116
 3205 0d52 7B0C0000 		.4byte	0xc7b
 3206 0d56 610D0000 		.4byte	0xd61
 3207 0d5a 1B       		.uleb128 0x1b
 3208 0d5b 01       		.uleb128 0x1
 3209 0d5c 51       		.byte	0x51
 3210 0d5d 02       		.uleb128 0x2
 3211 0d5e 75       		.byte	0x75
 3212 0d5f 00       		.sleb128 0
 3213 0d60 00       		.byte	0
 3214 0d61 1A       		.uleb128 0x1a
 3215 0d62 2C000000 		.4byte	.LVL118
 3216 0d66 340C0000 		.4byte	0xc34
 3217 0d6a 750D0000 		.4byte	0xd75
 3218 0d6e 1B       		.uleb128 0x1b
 3219 0d6f 01       		.uleb128 0x1
 3220 0d70 50       		.byte	0x50
 3221 0d71 02       		.uleb128 0x2
 3222 0d72 74       		.byte	0x74
 3223 0d73 00       		.sleb128 0
 3224 0d74 00       		.byte	0
 3225 0d75 1E       		.uleb128 0x1e
 3226 0d76 34000000 		.4byte	.LVL120
 3227 0d7a 7B0C0000 		.4byte	0xc7b
 3228 0d7e 1B       		.uleb128 0x1b
 3229 0d7f 01       		.uleb128 0x1
 3230 0d80 51       		.byte	0x51
 3231 0d81 02       		.uleb128 0x2
 3232 0d82 75       		.byte	0x75
 3233 0d83 00       		.sleb128 0
 3234 0d84 00       		.byte	0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 119


 3235 0d85 00       		.byte	0
 3236 0d86 1C       		.uleb128 0x1c
 3237 0d87 32050000 		.4byte	.LASF166
 3238 0d8b 01       		.byte	0x1
 3239 0d8c 6409     		.2byte	0x964
 3240 0d8e 00000000 		.4byte	.LFB21
 3241 0d92 20000000 		.4byte	.LFE21-.LFB21
 3242 0d96 01       		.uleb128 0x1
 3243 0d97 9C       		.byte	0x9c
 3244 0d98 CD0D0000 		.4byte	0xdcd
 3245 0d9c 15       		.uleb128 0x15
 3246 0d9d 02090000 		.4byte	.LASF127
 3247 0da1 01       		.byte	0x1
 3248 0da2 6609     		.2byte	0x966
 3249 0da4 99000000 		.4byte	0x99
 3250 0da8 1C060000 		.4byte	.LLST43
 3251 0dac 15       		.uleb128 0x15
 3252 0dad C9010000 		.4byte	.LASF157
 3253 0db1 01       		.byte	0x1
 3254 0db2 6709     		.2byte	0x967
 3255 0db4 2E0C0000 		.4byte	0xc2e
 3256 0db8 3B060000 		.4byte	.LLST44
 3257 0dbc 1E       		.uleb128 0x1e
 3258 0dbd 14000000 		.4byte	.LVL126
 3259 0dc1 D60C0000 		.4byte	0xcd6
 3260 0dc5 1B       		.uleb128 0x1b
 3261 0dc6 01       		.uleb128 0x1
 3262 0dc7 50       		.byte	0x50
 3263 0dc8 02       		.uleb128 0x2
 3264 0dc9 74       		.byte	0x74
 3265 0dca 00       		.sleb128 0
 3266 0dcb 00       		.byte	0
 3267 0dcc 00       		.byte	0
 3268 0dcd 18       		.uleb128 0x18
 3269 0dce C1090000 		.4byte	.LASF167
 3270 0dd2 01       		.byte	0x1
 3271 0dd3 840C     		.2byte	0xc84
 3272 0dd5 76000000 		.4byte	0x76
 3273 0dd9 00000000 		.4byte	.LFB27
 3274 0ddd 1C000000 		.4byte	.LFE27-.LFB27
 3275 0de1 01       		.uleb128 0x1
 3276 0de2 9C       		.byte	0x9c
 3277 0de3 270E0000 		.4byte	0xe27
 3278 0de7 19       		.uleb128 0x19
 3279 0de8 7F010000 		.4byte	.LASF168
 3280 0dec 01       		.byte	0x1
 3281 0ded 840C     		.2byte	0xc84
 3282 0def ED060000 		.4byte	0x6ed
 3283 0df3 4E060000 		.4byte	.LLST45
 3284 0df7 19       		.uleb128 0x19
 3285 0df8 BB0D0000 		.4byte	.LASF133
 3286 0dfc 01       		.byte	0x1
 3287 0dfd 840C     		.2byte	0xc84
 3288 0dff 76000000 		.4byte	0x76
 3289 0e03 6F060000 		.4byte	.LLST46
 3290 0e07 15       		.uleb128 0x15
 3291 0e08 F30B0000 		.4byte	.LASF156
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 120


 3292 0e0c 01       		.byte	0x1
 3293 0e0d 860C     		.2byte	0xc86
 3294 0e0f 76000000 		.4byte	0x76
 3295 0e13 90060000 		.4byte	.LLST47
 3296 0e17 1E       		.uleb128 0x1e
 3297 0e18 14000000 		.4byte	.LVL132
 3298 0e1c E7110000 		.4byte	0x11e7
 3299 0e20 1B       		.uleb128 0x1b
 3300 0e21 01       		.uleb128 0x1
 3301 0e22 50       		.byte	0x50
 3302 0e23 01       		.uleb128 0x1
 3303 0e24 30       		.byte	0x30
 3304 0e25 00       		.byte	0
 3305 0e26 00       		.byte	0
 3306 0e27 1C       		.uleb128 0x1c
 3307 0e28 120F0000 		.4byte	.LASF169
 3308 0e2c 01       		.byte	0x1
 3309 0e2d D90C     		.2byte	0xcd9
 3310 0e2f 00000000 		.4byte	.LFB28
 3311 0e33 1C000000 		.4byte	.LFE28-.LFB28
 3312 0e37 01       		.uleb128 0x1
 3313 0e38 9C       		.byte	0x9c
 3314 0e39 900E0000 		.4byte	0xe90
 3315 0e3d 19       		.uleb128 0x19
 3316 0e3e 84010000 		.4byte	.LASF170
 3317 0e42 01       		.byte	0x1
 3318 0e43 D90C     		.2byte	0xcd9
 3319 0e45 C9050000 		.4byte	0x5c9
 3320 0e49 BB060000 		.4byte	.LLST48
 3321 0e4d 19       		.uleb128 0x19
 3322 0e4e 84080000 		.4byte	.LASF91
 3323 0e52 01       		.byte	0x1
 3324 0e53 D90C     		.2byte	0xcd9
 3325 0e55 99000000 		.4byte	0x99
 3326 0e59 E7060000 		.4byte	.LLST49
 3327 0e5d 19       		.uleb128 0x19
 3328 0e5e C0020000 		.4byte	.LASF171
 3329 0e62 01       		.byte	0x1
 3330 0e63 D90C     		.2byte	0xcd9
 3331 0e65 99000000 		.4byte	0x99
 3332 0e69 13070000 		.4byte	.LLST50
 3333 0e6d 15       		.uleb128 0x15
 3334 0e6e 15010000 		.4byte	.LASF136
 3335 0e72 01       		.byte	0x1
 3336 0e73 DB0C     		.2byte	0xcdb
 3337 0e75 81000000 		.4byte	0x81
 3338 0e79 3F070000 		.4byte	.LLST51
 3339 0e7d 16       		.uleb128 0x16
 3340 0e7e 0C000000 		.4byte	.LVL135
 3341 0e82 AE110000 		.4byte	0x11ae
 3342 0e86 16       		.uleb128 0x16
 3343 0e87 1A000000 		.4byte	.LVL137
 3344 0e8b B9110000 		.4byte	0x11b9
 3345 0e8f 00       		.byte	0
 3346 0e90 14       		.uleb128 0x14
 3347 0e91 AC080000 		.4byte	.LASF172
 3348 0e95 01       		.byte	0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 121


 3349 0e96 B903     		.2byte	0x3b9
 3350 0e98 00000000 		.4byte	.LFB9
 3351 0e9c 18000000 		.4byte	.LFE9-.LFB9
 3352 0ea0 01       		.uleb128 0x1
 3353 0ea1 9C       		.byte	0x9c
 3354 0ea2 D10E0000 		.4byte	0xed1
 3355 0ea6 1A       		.uleb128 0x1a
 3356 0ea7 0C000000 		.4byte	.LVL140
 3357 0eab 270E0000 		.4byte	0xe27
 3358 0eaf C70E0000 		.4byte	0xec7
 3359 0eb3 1B       		.uleb128 0x1b
 3360 0eb4 01       		.uleb128 0x1
 3361 0eb5 50       		.byte	0x50
 3362 0eb6 05       		.uleb128 0x5
 3363 0eb7 0C       		.byte	0xc
 3364 0eb8 00040240 		.4byte	0x40020400
 3365 0ebc 1B       		.uleb128 0x1b
 3366 0ebd 01       		.uleb128 0x1
 3367 0ebe 51       		.byte	0x51
 3368 0ebf 01       		.uleb128 0x1
 3369 0ec0 3F       		.byte	0x3f
 3370 0ec1 1B       		.uleb128 0x1b
 3371 0ec2 01       		.uleb128 0x1
 3372 0ec3 52       		.byte	0x52
 3373 0ec4 01       		.uleb128 0x1
 3374 0ec5 30       		.byte	0x30
 3375 0ec6 00       		.byte	0
 3376 0ec7 16       		.uleb128 0x16
 3377 0ec8 10000000 		.4byte	.LVL141
 3378 0ecc F2110000 		.4byte	0x11f2
 3379 0ed0 00       		.byte	0
 3380 0ed1 1C       		.uleb128 0x1c
 3381 0ed2 4D0C0000 		.4byte	.LASF173
 3382 0ed6 01       		.byte	0x1
 3383 0ed7 2B04     		.2byte	0x42b
 3384 0ed9 00000000 		.4byte	.LFB10
 3385 0edd 3C000000 		.4byte	.LFE10-.LFB10
 3386 0ee1 01       		.uleb128 0x1
 3387 0ee2 9C       		.byte	0x9c
 3388 0ee3 0A0F0000 		.4byte	0xf0a
 3389 0ee7 19       		.uleb128 0x19
 3390 0ee8 7F010000 		.4byte	.LASF168
 3391 0eec 01       		.byte	0x1
 3392 0eed 2B04     		.2byte	0x42b
 3393 0eef 80010000 		.4byte	0x180
 3394 0ef3 52070000 		.4byte	.LLST52
 3395 0ef7 16       		.uleb128 0x16
 3396 0ef8 14000000 		.4byte	.LVL143
 3397 0efc 900E0000 		.4byte	0xe90
 3398 0f00 16       		.uleb128 0x16
 3399 0f01 1C000000 		.4byte	.LVL144
 3400 0f05 FE110000 		.4byte	0x11fe
 3401 0f09 00       		.byte	0
 3402 0f0a 18       		.uleb128 0x18
 3403 0f0b 2B0D0000 		.4byte	.LASF174
 3404 0f0f 01       		.byte	0x1
 3405 0f10 C302     		.2byte	0x2c3
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 122


 3406 0f12 BA000000 		.4byte	0xba
 3407 0f16 00000000 		.4byte	.LFB7
 3408 0f1a 2C000000 		.4byte	.LFE7-.LFB7
 3409 0f1e 01       		.uleb128 0x1
 3410 0f1f 9C       		.byte	0x9c
 3411 0f20 790F0000 		.4byte	0xf79
 3412 0f24 1D       		.uleb128 0x1d
 3413 0f25 03010000 		.4byte	.LASF175
 3414 0f29 01       		.byte	0x1
 3415 0f2a C502     		.2byte	0x2c5
 3416 0f2c BA000000 		.4byte	0xba
 3417 0f30 00       		.byte	0
 3418 0f31 16       		.uleb128 0x16
 3419 0f32 06000000 		.4byte	.LVL146
 3420 0f36 4B070000 		.4byte	0x74b
 3421 0f3a 16       		.uleb128 0x16
 3422 0f3b 0A000000 		.4byte	.LVL147
 3423 0f3f 860D0000 		.4byte	0xd86
 3424 0f43 1A       		.uleb128 0x1a
 3425 0f44 10000000 		.4byte	.LVL148
 3426 0f48 AD090000 		.4byte	0x9ad
 3427 0f4c 560F0000 		.4byte	0xf56
 3428 0f50 1B       		.uleb128 0x1b
 3429 0f51 01       		.uleb128 0x1
 3430 0f52 50       		.byte	0x50
 3431 0f53 01       		.uleb128 0x1
 3432 0f54 30       		.byte	0x30
 3433 0f55 00       		.byte	0
 3434 0f56 1A       		.uleb128 0x1a
 3435 0f57 1E000000 		.4byte	.LVL149
 3436 0f5b D10E0000 		.4byte	0xed1
 3437 0f5f 690F0000 		.4byte	0xf69
 3438 0f63 1B       		.uleb128 0x1b
 3439 0f64 01       		.uleb128 0x1
 3440 0f65 50       		.byte	0x50
 3441 0f66 01       		.uleb128 0x1
 3442 0f67 30       		.byte	0x30
 3443 0f68 00       		.byte	0
 3444 0f69 1E       		.uleb128 0x1e
 3445 0f6a 24000000 		.4byte	.LVL150
 3446 0f6e D10E0000 		.4byte	0xed1
 3447 0f72 1B       		.uleb128 0x1b
 3448 0f73 01       		.uleb128 0x1
 3449 0f74 50       		.byte	0x50
 3450 0f75 01       		.uleb128 0x1
 3451 0f76 31       		.byte	0x31
 3452 0f77 00       		.byte	0
 3453 0f78 00       		.byte	0
 3454 0f79 1C       		.uleb128 0x1c
 3455 0f7a 560A0000 		.4byte	.LASF176
 3456 0f7e 01       		.byte	0x1
 3457 0f7f CD0B     		.2byte	0xbcd
 3458 0f81 00000000 		.4byte	.LFB26
 3459 0f85 84000000 		.4byte	.LFE26-.LFB26
 3460 0f89 01       		.uleb128 0x1
 3461 0f8a 9C       		.byte	0x9c
 3462 0f8b 99100000 		.4byte	0x1099
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 123


 3463 0f8f 19       		.uleb128 0x19
 3464 0f90 57040000 		.4byte	.LASF177
 3465 0f94 01       		.byte	0x1
 3466 0f95 CD0B     		.2byte	0xbcd
 3467 0f97 99000000 		.4byte	0x99
 3468 0f9b 73070000 		.4byte	.LLST53
 3469 0f9f 15       		.uleb128 0x15
 3470 0fa0 C90A0000 		.4byte	.LASF178
 3471 0fa4 01       		.byte	0x1
 3472 0fa5 D10B     		.2byte	0xbd1
 3473 0fa7 99000000 		.4byte	0x99
 3474 0fab 92070000 		.4byte	.LLST54
 3475 0faf 15       		.uleb128 0x15
 3476 0fb0 C20A0000 		.4byte	.LASF179
 3477 0fb4 01       		.byte	0x1
 3478 0fb5 D20B     		.2byte	0xbd2
 3479 0fb7 99000000 		.4byte	0x99
 3480 0fbb B0070000 		.4byte	.LLST55
 3481 0fbf 15       		.uleb128 0x15
 3482 0fc0 29010000 		.4byte	.LASF180
 3483 0fc4 01       		.byte	0x1
 3484 0fc5 D30B     		.2byte	0xbd3
 3485 0fc7 99000000 		.4byte	0x99
 3486 0fcb CE070000 		.4byte	.LLST56
 3487 0fcf 1A       		.uleb128 0x1a
 3488 0fd0 34000000 		.4byte	.LVL159
 3489 0fd4 270E0000 		.4byte	0xe27
 3490 0fd8 ED0F0000 		.4byte	0xfed
 3491 0fdc 1B       		.uleb128 0x1b
 3492 0fdd 01       		.uleb128 0x1
 3493 0fde 50       		.byte	0x50
 3494 0fdf 02       		.uleb128 0x2
 3495 0fe0 74       		.byte	0x74
 3496 0fe1 00       		.sleb128 0
 3497 0fe2 1B       		.uleb128 0x1b
 3498 0fe3 01       		.uleb128 0x1
 3499 0fe4 51       		.byte	0x51
 3500 0fe5 01       		.uleb128 0x1
 3501 0fe6 3F       		.byte	0x3f
 3502 0fe7 1B       		.uleb128 0x1b
 3503 0fe8 01       		.uleb128 0x1
 3504 0fe9 52       		.byte	0x52
 3505 0fea 01       		.uleb128 0x1
 3506 0feb 30       		.byte	0x30
 3507 0fec 00       		.byte	0
 3508 0fed 1A       		.uleb128 0x1a
 3509 0fee 3E000000 		.4byte	.LVL160
 3510 0ff2 270E0000 		.4byte	0xe27
 3511 0ff6 0B100000 		.4byte	0x100b
 3512 0ffa 1B       		.uleb128 0x1b
 3513 0ffb 01       		.uleb128 0x1
 3514 0ffc 50       		.byte	0x50
 3515 0ffd 02       		.uleb128 0x2
 3516 0ffe 76       		.byte	0x76
 3517 0fff 00       		.sleb128 0
 3518 1000 1B       		.uleb128 0x1b
 3519 1001 01       		.uleb128 0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 124


 3520 1002 51       		.byte	0x51
 3521 1003 01       		.uleb128 0x1
 3522 1004 31       		.byte	0x31
 3523 1005 1B       		.uleb128 0x1b
 3524 1006 01       		.uleb128 0x1
 3525 1007 52       		.byte	0x52
 3526 1008 01       		.uleb128 0x1
 3527 1009 30       		.byte	0x30
 3528 100a 00       		.byte	0
 3529 100b 1A       		.uleb128 0x1a
 3530 100c 48000000 		.4byte	.LVL161
 3531 1010 270E0000 		.4byte	0xe27
 3532 1014 29100000 		.4byte	0x1029
 3533 1018 1B       		.uleb128 0x1b
 3534 1019 01       		.uleb128 0x1
 3535 101a 50       		.byte	0x50
 3536 101b 02       		.uleb128 0x2
 3537 101c 75       		.byte	0x75
 3538 101d 00       		.sleb128 0
 3539 101e 1B       		.uleb128 0x1b
 3540 101f 01       		.uleb128 0x1
 3541 1020 51       		.byte	0x51
 3542 1021 01       		.uleb128 0x1
 3543 1022 37       		.byte	0x37
 3544 1023 1B       		.uleb128 0x1b
 3545 1024 01       		.uleb128 0x1
 3546 1025 52       		.byte	0x52
 3547 1026 01       		.uleb128 0x1
 3548 1027 36       		.byte	0x36
 3549 1028 00       		.byte	0
 3550 1029 1A       		.uleb128 0x1a
 3551 102a 50000000 		.4byte	.LVL162
 3552 102e 0A120000 		.4byte	0x120a
 3553 1032 3F100000 		.4byte	0x103f
 3554 1036 1B       		.uleb128 0x1b
 3555 1037 01       		.uleb128 0x1
 3556 1038 50       		.byte	0x50
 3557 1039 04       		.uleb128 0x4
 3558 103a 7D       		.byte	0x7d
 3559 103b 04       		.sleb128 4
 3560 103c 94       		.byte	0x94
 3561 103d 02       		.byte	0x2
 3562 103e 00       		.byte	0
 3563 103f 1A       		.uleb128 0x1a
 3564 1040 5A000000 		.4byte	.LVL163
 3565 1044 270E0000 		.4byte	0xe27
 3566 1048 5E100000 		.4byte	0x105e
 3567 104c 1B       		.uleb128 0x1b
 3568 104d 01       		.uleb128 0x1
 3569 104e 50       		.byte	0x50
 3570 104f 02       		.uleb128 0x2
 3571 1050 75       		.byte	0x75
 3572 1051 00       		.sleb128 0
 3573 1052 1B       		.uleb128 0x1b
 3574 1053 01       		.uleb128 0x1
 3575 1054 51       		.byte	0x51
 3576 1055 01       		.uleb128 0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 125


 3577 1056 37       		.byte	0x37
 3578 1057 1B       		.uleb128 0x1b
 3579 1058 01       		.uleb128 0x1
 3580 1059 52       		.byte	0x52
 3581 105a 02       		.uleb128 0x2
 3582 105b 7A       		.byte	0x7a
 3583 105c 00       		.sleb128 0
 3584 105d 00       		.byte	0
 3585 105e 1A       		.uleb128 0x1a
 3586 105f 64000000 		.4byte	.LVL164
 3587 1063 270E0000 		.4byte	0xe27
 3588 1067 7D100000 		.4byte	0x107d
 3589 106b 1B       		.uleb128 0x1b
 3590 106c 01       		.uleb128 0x1
 3591 106d 50       		.byte	0x50
 3592 106e 02       		.uleb128 0x2
 3593 106f 76       		.byte	0x76
 3594 1070 00       		.sleb128 0
 3595 1071 1B       		.uleb128 0x1b
 3596 1072 01       		.uleb128 0x1
 3597 1073 51       		.byte	0x51
 3598 1074 01       		.uleb128 0x1
 3599 1075 31       		.byte	0x31
 3600 1076 1B       		.uleb128 0x1b
 3601 1077 01       		.uleb128 0x1
 3602 1078 52       		.byte	0x52
 3603 1079 02       		.uleb128 0x2
 3604 107a 77       		.byte	0x77
 3605 107b 00       		.sleb128 0
 3606 107c 00       		.byte	0
 3607 107d 1E       		.uleb128 0x1e
 3608 107e 6E000000 		.4byte	.LVL165
 3609 1082 270E0000 		.4byte	0xe27
 3610 1086 1B       		.uleb128 0x1b
 3611 1087 01       		.uleb128 0x1
 3612 1088 50       		.byte	0x50
 3613 1089 02       		.uleb128 0x2
 3614 108a 74       		.byte	0x74
 3615 108b 00       		.sleb128 0
 3616 108c 1B       		.uleb128 0x1b
 3617 108d 01       		.uleb128 0x1
 3618 108e 51       		.byte	0x51
 3619 108f 01       		.uleb128 0x1
 3620 1090 3F       		.byte	0x3f
 3621 1091 1B       		.uleb128 0x1b
 3622 1092 01       		.uleb128 0x1
 3623 1093 52       		.byte	0x52
 3624 1094 02       		.uleb128 0x2
 3625 1095 78       		.byte	0x78
 3626 1096 00       		.sleb128 0
 3627 1097 00       		.byte	0
 3628 1098 00       		.byte	0
 3629 1099 22       		.uleb128 0x22
 3630 109a 8E040000 		.4byte	.LASF181
 3631 109e 06       		.byte	0x6
 3632 109f 6F04     		.2byte	0x46f
 3633 10a1 3E050000 		.4byte	0x53e
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 126


 3634 10a5 22       		.uleb128 0x22
 3635 10a6 DE070000 		.4byte	.LASF182
 3636 10aa 06       		.byte	0x6
 3637 10ab 7004     		.2byte	0x470
 3638 10ad B1100000 		.4byte	0x10b1
 3639 10b1 1F       		.uleb128 0x1f
 3640 10b2 AF060000 		.4byte	0x6af
 3641 10b6 0E       		.uleb128 0xe
 3642 10b7 A8090000 		.4byte	0x9a8
 3643 10bb C6100000 		.4byte	0x10c6
 3644 10bf 0F       		.uleb128 0xf
 3645 10c0 4D020000 		.4byte	0x24d
 3646 10c4 07       		.byte	0x7
 3647 10c5 00       		.byte	0
 3648 10c6 22       		.uleb128 0x22
 3649 10c7 420A0000 		.4byte	.LASF183
 3650 10cb 06       		.byte	0x6
 3651 10cc 7104     		.2byte	0x471
 3652 10ce D2100000 		.4byte	0x10d2
 3653 10d2 1F       		.uleb128 0x1f
 3654 10d3 B6100000 		.4byte	0x10b6
 3655 10d7 23       		.uleb128 0x23
 3656 10d8 AA030000 		.4byte	.LASF184
 3657 10dc 01       		.byte	0x1
 3658 10dd BC       		.byte	0xbc
 3659 10de D2000000 		.4byte	0xd2
 3660 10e2 05       		.uleb128 0x5
 3661 10e3 03       		.byte	0x3
 3662 10e4 00000000 		.4byte	Mux_CapSense_widgetIndex
 3663 10e8 23       		.uleb128 0x23
 3664 10e9 85020000 		.4byte	.LASF185
 3665 10ed 01       		.byte	0x1
 3666 10ee BD       		.byte	0xbd
 3667 10ef D2000000 		.4byte	0xd2
 3668 10f3 05       		.uleb128 0x5
 3669 10f4 03       		.byte	0x3
 3670 10f5 00000000 		.4byte	Mux_CapSense_sensorIndex
 3671 10f9 23       		.uleb128 0x23
 3672 10fa DE040000 		.4byte	.LASF186
 3673 10fe 01       		.byte	0x1
 3674 10ff BE       		.byte	0xbe
 3675 1100 81000000 		.4byte	0x81
 3676 1104 05       		.uleb128 0x5
 3677 1105 03       		.byte	0x3
 3678 1106 00000000 		.4byte	Mux_CapSense_requestScanAllWidget
 3679 110a 23       		.uleb128 0x23
 3680 110b 0A0C0000 		.4byte	.LASF187
 3681 110f 01       		.byte	0x1
 3682 1110 C1       		.byte	0xc1
 3683 1111 70060000 		.4byte	0x670
 3684 1115 05       		.uleb128 0x5
 3685 1116 03       		.byte	0x3
 3686 1117 00000000 		.4byte	Mux_CapSense_curRamSnsPtr
 3687 111b 23       		.uleb128 0x23
 3688 111c 2C090000 		.4byte	.LASF188
 3689 1120 01       		.byte	0x1
 3690 1121 AF       		.byte	0xaf
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 127


 3691 1122 80010000 		.4byte	0x180
 3692 1126 05       		.uleb128 0x5
 3693 1127 03       		.byte	0x3
 3694 1128 00000000 		.4byte	Mux_CapSense_currentSenseMethod
 3695 112c 23       		.uleb128 0x23
 3696 112d 3C040000 		.4byte	.LASF189
 3697 1131 01       		.byte	0x1
 3698 1132 B8       		.byte	0xb8
 3699 1133 3D110000 		.4byte	0x113d
 3700 1137 05       		.uleb128 0x5
 3701 1138 03       		.byte	0x3
 3702 1139 00000000 		.4byte	Mux_CapSense_scanFreqIndex
 3703 113d 1F       		.uleb128 0x1f
 3704 113e 81000000 		.4byte	0x81
 3705 1142 23       		.uleb128 0x23
 3706 1143 89080000 		.4byte	.LASF190
 3707 1147 01       		.byte	0x1
 3708 1148 D0       		.byte	0xd0
 3709 1149 A2090000 		.4byte	0x9a2
 3710 114d 05       		.uleb128 0x5
 3711 114e 03       		.byte	0x3
 3712 114f 00000000 		.4byte	Mux_CapSense_curSnsIOPtr
 3713 1153 0E       		.uleb128 0xe
 3714 1154 63110000 		.4byte	0x1163
 3715 1158 63110000 		.4byte	0x1163
 3716 115c 0F       		.uleb128 0xf
 3717 115d 4D020000 		.4byte	0x24d
 3718 1161 01       		.byte	0x1
 3719 1162 00       		.byte	0
 3720 1163 1F       		.uleb128 0x1f
 3721 1164 19070000 		.4byte	0x719
 3722 1168 23       		.uleb128 0x23
 3723 1169 3A0F0000 		.4byte	.LASF191
 3724 116d 01       		.byte	0x1
 3725 116e D2       		.byte	0xd2
 3726 116f 79110000 		.4byte	0x1179
 3727 1173 05       		.uleb128 0x5
 3728 1174 03       		.byte	0x3
 3729 1175 00000000 		.4byte	Mux_CapSense_idacGainTable
 3730 1179 1F       		.uleb128 0x1f
 3731 117a 53110000 		.4byte	0x1153
 3732 117e 24       		.uleb128 0x24
 3733 117f B5060000 		.4byte	.LASF192
 3734 1183 B5060000 		.4byte	.LASF192
 3735 1187 08       		.byte	0x8
 3736 1188 8801     		.2byte	0x188
 3737 118a 24       		.uleb128 0x24
 3738 118b BC0E0000 		.4byte	.LASF193
 3739 118f BC0E0000 		.4byte	.LASF193
 3740 1193 08       		.byte	0x8
 3741 1194 8A01     		.2byte	0x18a
 3742 1196 24       		.uleb128 0x24
 3743 1197 CB0C0000 		.4byte	.LASF194
 3744 119b CB0C0000 		.4byte	.LASF194
 3745 119f 08       		.byte	0x8
 3746 11a0 8901     		.2byte	0x189
 3747 11a2 24       		.uleb128 0x24
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 128


 3748 11a3 7D000000 		.4byte	.LASF195
 3749 11a7 7D000000 		.4byte	.LASF195
 3750 11ab 08       		.byte	0x8
 3751 11ac 8B01     		.2byte	0x18b
 3752 11ae 25       		.uleb128 0x25
 3753 11af FD0D0000 		.4byte	.LASF196
 3754 11b3 FD0D0000 		.4byte	.LASF196
 3755 11b7 09       		.byte	0x9
 3756 11b8 F8       		.byte	0xf8
 3757 11b9 25       		.uleb128 0x25
 3758 11ba A4050000 		.4byte	.LASF197
 3759 11be A4050000 		.4byte	.LASF197
 3760 11c2 09       		.byte	0x9
 3761 11c3 F9       		.byte	0xf9
 3762 11c4 24       		.uleb128 0x24
 3763 11c5 36020000 		.4byte	.LASF198
 3764 11c9 36020000 		.4byte	.LASF198
 3765 11cd 08       		.byte	0x8
 3766 11ce 9101     		.2byte	0x191
 3767 11d0 25       		.uleb128 0x25
 3768 11d1 340C0000 		.4byte	.LASF199
 3769 11d5 340C0000 		.4byte	.LASF199
 3770 11d9 0A       		.byte	0xa
 3771 11da 18       		.byte	0x18
 3772 11db 24       		.uleb128 0x24
 3773 11dc 5A080000 		.4byte	.LASF200
 3774 11e0 5A080000 		.4byte	.LASF200
 3775 11e4 08       		.byte	0x8
 3776 11e5 8E01     		.2byte	0x18e
 3777 11e7 25       		.uleb128 0x25
 3778 11e8 0E010000 		.4byte	.LASF201
 3779 11ec 0E010000 		.4byte	.LASF201
 3780 11f0 09       		.byte	0x9
 3781 11f1 FA       		.byte	0xfa
 3782 11f2 24       		.uleb128 0x24
 3783 11f3 4C0E0000 		.4byte	.LASF202
 3784 11f7 4C0E0000 		.4byte	.LASF202
 3785 11fb 08       		.byte	0x8
 3786 11fc A501     		.2byte	0x1a5
 3787 11fe 24       		.uleb128 0x24
 3788 11ff A4090000 		.4byte	.LASF203
 3789 1203 A4090000 		.4byte	.LASF203
 3790 1207 08       		.byte	0x8
 3791 1208 A101     		.2byte	0x1a1
 3792 120a 25       		.uleb128 0x25
 3793 120b A2080000 		.4byte	.LASF204
 3794 120f A2080000 		.4byte	.LASF204
 3795 1213 09       		.byte	0x9
 3796 1214 ED       		.byte	0xed
 3797 1215 00       		.byte	0
 3798              		.section	.debug_abbrev,"",%progbits
 3799              	.Ldebug_abbrev0:
 3800 0000 01       		.uleb128 0x1
 3801 0001 11       		.uleb128 0x11
 3802 0002 01       		.byte	0x1
 3803 0003 25       		.uleb128 0x25
 3804 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 129


 3805 0005 13       		.uleb128 0x13
 3806 0006 0B       		.uleb128 0xb
 3807 0007 03       		.uleb128 0x3
 3808 0008 0E       		.uleb128 0xe
 3809 0009 1B       		.uleb128 0x1b
 3810 000a 0E       		.uleb128 0xe
 3811 000b 55       		.uleb128 0x55
 3812 000c 17       		.uleb128 0x17
 3813 000d 11       		.uleb128 0x11
 3814 000e 01       		.uleb128 0x1
 3815 000f 10       		.uleb128 0x10
 3816 0010 17       		.uleb128 0x17
 3817 0011 00       		.byte	0
 3818 0012 00       		.byte	0
 3819 0013 02       		.uleb128 0x2
 3820 0014 24       		.uleb128 0x24
 3821 0015 00       		.byte	0
 3822 0016 0B       		.uleb128 0xb
 3823 0017 0B       		.uleb128 0xb
 3824 0018 3E       		.uleb128 0x3e
 3825 0019 0B       		.uleb128 0xb
 3826 001a 03       		.uleb128 0x3
 3827 001b 0E       		.uleb128 0xe
 3828 001c 00       		.byte	0
 3829 001d 00       		.byte	0
 3830 001e 03       		.uleb128 0x3
 3831 001f 16       		.uleb128 0x16
 3832 0020 00       		.byte	0
 3833 0021 03       		.uleb128 0x3
 3834 0022 0E       		.uleb128 0xe
 3835 0023 3A       		.uleb128 0x3a
 3836 0024 0B       		.uleb128 0xb
 3837 0025 3B       		.uleb128 0x3b
 3838 0026 0B       		.uleb128 0xb
 3839 0027 49       		.uleb128 0x49
 3840 0028 13       		.uleb128 0x13
 3841 0029 00       		.byte	0
 3842 002a 00       		.byte	0
 3843 002b 04       		.uleb128 0x4
 3844 002c 24       		.uleb128 0x24
 3845 002d 00       		.byte	0
 3846 002e 0B       		.uleb128 0xb
 3847 002f 0B       		.uleb128 0xb
 3848 0030 3E       		.uleb128 0x3e
 3849 0031 0B       		.uleb128 0xb
 3850 0032 03       		.uleb128 0x3
 3851 0033 08       		.uleb128 0x8
 3852 0034 00       		.byte	0
 3853 0035 00       		.byte	0
 3854 0036 05       		.uleb128 0x5
 3855 0037 16       		.uleb128 0x16
 3856 0038 00       		.byte	0
 3857 0039 03       		.uleb128 0x3
 3858 003a 0E       		.uleb128 0xe
 3859 003b 3A       		.uleb128 0x3a
 3860 003c 0B       		.uleb128 0xb
 3861 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 130


 3862 003e 05       		.uleb128 0x5
 3863 003f 49       		.uleb128 0x49
 3864 0040 13       		.uleb128 0x13
 3865 0041 00       		.byte	0
 3866 0042 00       		.byte	0
 3867 0043 06       		.uleb128 0x6
 3868 0044 35       		.uleb128 0x35
 3869 0045 00       		.byte	0
 3870 0046 49       		.uleb128 0x49
 3871 0047 13       		.uleb128 0x13
 3872 0048 00       		.byte	0
 3873 0049 00       		.byte	0
 3874 004a 07       		.uleb128 0x7
 3875 004b 0F       		.uleb128 0xf
 3876 004c 00       		.byte	0
 3877 004d 0B       		.uleb128 0xb
 3878 004e 0B       		.uleb128 0xb
 3879 004f 49       		.uleb128 0x49
 3880 0050 13       		.uleb128 0x13
 3881 0051 00       		.byte	0
 3882 0052 00       		.byte	0
 3883 0053 08       		.uleb128 0x8
 3884 0054 15       		.uleb128 0x15
 3885 0055 00       		.byte	0
 3886 0056 27       		.uleb128 0x27
 3887 0057 19       		.uleb128 0x19
 3888 0058 00       		.byte	0
 3889 0059 00       		.byte	0
 3890 005a 09       		.uleb128 0x9
 3891 005b 04       		.uleb128 0x4
 3892 005c 01       		.byte	0x1
 3893 005d 0B       		.uleb128 0xb
 3894 005e 0B       		.uleb128 0xb
 3895 005f 49       		.uleb128 0x49
 3896 0060 13       		.uleb128 0x13
 3897 0061 3A       		.uleb128 0x3a
 3898 0062 0B       		.uleb128 0xb
 3899 0063 3B       		.uleb128 0x3b
 3900 0064 0B       		.uleb128 0xb
 3901 0065 01       		.uleb128 0x1
 3902 0066 13       		.uleb128 0x13
 3903 0067 00       		.byte	0
 3904 0068 00       		.byte	0
 3905 0069 0A       		.uleb128 0xa
 3906 006a 28       		.uleb128 0x28
 3907 006b 00       		.byte	0
 3908 006c 03       		.uleb128 0x3
 3909 006d 0E       		.uleb128 0xe
 3910 006e 1C       		.uleb128 0x1c
 3911 006f 0B       		.uleb128 0xb
 3912 0070 00       		.byte	0
 3913 0071 00       		.byte	0
 3914 0072 0B       		.uleb128 0xb
 3915 0073 13       		.uleb128 0x13
 3916 0074 01       		.byte	0x1
 3917 0075 0B       		.uleb128 0xb
 3918 0076 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 131


 3919 0077 3A       		.uleb128 0x3a
 3920 0078 0B       		.uleb128 0xb
 3921 0079 3B       		.uleb128 0x3b
 3922 007a 0B       		.uleb128 0xb
 3923 007b 01       		.uleb128 0x1
 3924 007c 13       		.uleb128 0x13
 3925 007d 00       		.byte	0
 3926 007e 00       		.byte	0
 3927 007f 0C       		.uleb128 0xc
 3928 0080 0D       		.uleb128 0xd
 3929 0081 00       		.byte	0
 3930 0082 03       		.uleb128 0x3
 3931 0083 0E       		.uleb128 0xe
 3932 0084 3A       		.uleb128 0x3a
 3933 0085 0B       		.uleb128 0xb
 3934 0086 3B       		.uleb128 0x3b
 3935 0087 0B       		.uleb128 0xb
 3936 0088 49       		.uleb128 0x49
 3937 0089 13       		.uleb128 0x13
 3938 008a 38       		.uleb128 0x38
 3939 008b 0B       		.uleb128 0xb
 3940 008c 00       		.byte	0
 3941 008d 00       		.byte	0
 3942 008e 0D       		.uleb128 0xd
 3943 008f 0D       		.uleb128 0xd
 3944 0090 00       		.byte	0
 3945 0091 03       		.uleb128 0x3
 3946 0092 0E       		.uleb128 0xe
 3947 0093 3A       		.uleb128 0x3a
 3948 0094 0B       		.uleb128 0xb
 3949 0095 3B       		.uleb128 0x3b
 3950 0096 05       		.uleb128 0x5
 3951 0097 49       		.uleb128 0x49
 3952 0098 13       		.uleb128 0x13
 3953 0099 38       		.uleb128 0x38
 3954 009a 0B       		.uleb128 0xb
 3955 009b 00       		.byte	0
 3956 009c 00       		.byte	0
 3957 009d 0E       		.uleb128 0xe
 3958 009e 01       		.uleb128 0x1
 3959 009f 01       		.byte	0x1
 3960 00a0 49       		.uleb128 0x49
 3961 00a1 13       		.uleb128 0x13
 3962 00a2 01       		.uleb128 0x1
 3963 00a3 13       		.uleb128 0x13
 3964 00a4 00       		.byte	0
 3965 00a5 00       		.byte	0
 3966 00a6 0F       		.uleb128 0xf
 3967 00a7 21       		.uleb128 0x21
 3968 00a8 00       		.byte	0
 3969 00a9 49       		.uleb128 0x49
 3970 00aa 13       		.uleb128 0x13
 3971 00ab 2F       		.uleb128 0x2f
 3972 00ac 0B       		.uleb128 0xb
 3973 00ad 00       		.byte	0
 3974 00ae 00       		.byte	0
 3975 00af 10       		.uleb128 0x10
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 132


 3976 00b0 13       		.uleb128 0x13
 3977 00b1 01       		.byte	0x1
 3978 00b2 0B       		.uleb128 0xb
 3979 00b3 0B       		.uleb128 0xb
 3980 00b4 3A       		.uleb128 0x3a
 3981 00b5 0B       		.uleb128 0xb
 3982 00b6 3B       		.uleb128 0x3b
 3983 00b7 05       		.uleb128 0x5
 3984 00b8 01       		.uleb128 0x1
 3985 00b9 13       		.uleb128 0x13
 3986 00ba 00       		.byte	0
 3987 00bb 00       		.byte	0
 3988 00bc 11       		.uleb128 0x11
 3989 00bd 0D       		.uleb128 0xd
 3990 00be 00       		.byte	0
 3991 00bf 03       		.uleb128 0x3
 3992 00c0 08       		.uleb128 0x8
 3993 00c1 3A       		.uleb128 0x3a
 3994 00c2 0B       		.uleb128 0xb
 3995 00c3 3B       		.uleb128 0x3b
 3996 00c4 05       		.uleb128 0x5
 3997 00c5 49       		.uleb128 0x49
 3998 00c6 13       		.uleb128 0x13
 3999 00c7 38       		.uleb128 0x38
 4000 00c8 0B       		.uleb128 0xb
 4001 00c9 00       		.byte	0
 4002 00ca 00       		.byte	0
 4003 00cb 12       		.uleb128 0x12
 4004 00cc 26       		.uleb128 0x26
 4005 00cd 00       		.byte	0
 4006 00ce 00       		.byte	0
 4007 00cf 00       		.byte	0
 4008 00d0 13       		.uleb128 0x13
 4009 00d1 0F       		.uleb128 0xf
 4010 00d2 00       		.byte	0
 4011 00d3 0B       		.uleb128 0xb
 4012 00d4 0B       		.uleb128 0xb
 4013 00d5 00       		.byte	0
 4014 00d6 00       		.byte	0
 4015 00d7 14       		.uleb128 0x14
 4016 00d8 2E       		.uleb128 0x2e
 4017 00d9 01       		.byte	0x1
 4018 00da 03       		.uleb128 0x3
 4019 00db 0E       		.uleb128 0xe
 4020 00dc 3A       		.uleb128 0x3a
 4021 00dd 0B       		.uleb128 0xb
 4022 00de 3B       		.uleb128 0x3b
 4023 00df 05       		.uleb128 0x5
 4024 00e0 27       		.uleb128 0x27
 4025 00e1 19       		.uleb128 0x19
 4026 00e2 11       		.uleb128 0x11
 4027 00e3 01       		.uleb128 0x1
 4028 00e4 12       		.uleb128 0x12
 4029 00e5 06       		.uleb128 0x6
 4030 00e6 40       		.uleb128 0x40
 4031 00e7 18       		.uleb128 0x18
 4032 00e8 9742     		.uleb128 0x2117
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 133


 4033 00ea 19       		.uleb128 0x19
 4034 00eb 01       		.uleb128 0x1
 4035 00ec 13       		.uleb128 0x13
 4036 00ed 00       		.byte	0
 4037 00ee 00       		.byte	0
 4038 00ef 15       		.uleb128 0x15
 4039 00f0 34       		.uleb128 0x34
 4040 00f1 00       		.byte	0
 4041 00f2 03       		.uleb128 0x3
 4042 00f3 0E       		.uleb128 0xe
 4043 00f4 3A       		.uleb128 0x3a
 4044 00f5 0B       		.uleb128 0xb
 4045 00f6 3B       		.uleb128 0x3b
 4046 00f7 05       		.uleb128 0x5
 4047 00f8 49       		.uleb128 0x49
 4048 00f9 13       		.uleb128 0x13
 4049 00fa 02       		.uleb128 0x2
 4050 00fb 17       		.uleb128 0x17
 4051 00fc 00       		.byte	0
 4052 00fd 00       		.byte	0
 4053 00fe 16       		.uleb128 0x16
 4054 00ff 898201   		.uleb128 0x4109
 4055 0102 00       		.byte	0
 4056 0103 11       		.uleb128 0x11
 4057 0104 01       		.uleb128 0x1
 4058 0105 31       		.uleb128 0x31
 4059 0106 13       		.uleb128 0x13
 4060 0107 00       		.byte	0
 4061 0108 00       		.byte	0
 4062 0109 17       		.uleb128 0x17
 4063 010a 2E       		.uleb128 0x2e
 4064 010b 00       		.byte	0
 4065 010c 3F       		.uleb128 0x3f
 4066 010d 19       		.uleb128 0x19
 4067 010e 03       		.uleb128 0x3
 4068 010f 0E       		.uleb128 0xe
 4069 0110 3A       		.uleb128 0x3a
 4070 0111 0B       		.uleb128 0xb
 4071 0112 3B       		.uleb128 0x3b
 4072 0113 0B       		.uleb128 0xb
 4073 0114 27       		.uleb128 0x27
 4074 0115 19       		.uleb128 0x19
 4075 0116 49       		.uleb128 0x49
 4076 0117 13       		.uleb128 0x13
 4077 0118 11       		.uleb128 0x11
 4078 0119 01       		.uleb128 0x1
 4079 011a 12       		.uleb128 0x12
 4080 011b 06       		.uleb128 0x6
 4081 011c 40       		.uleb128 0x40
 4082 011d 18       		.uleb128 0x18
 4083 011e 9742     		.uleb128 0x2117
 4084 0120 19       		.uleb128 0x19
 4085 0121 00       		.byte	0
 4086 0122 00       		.byte	0
 4087 0123 18       		.uleb128 0x18
 4088 0124 2E       		.uleb128 0x2e
 4089 0125 01       		.byte	0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 134


 4090 0126 3F       		.uleb128 0x3f
 4091 0127 19       		.uleb128 0x19
 4092 0128 03       		.uleb128 0x3
 4093 0129 0E       		.uleb128 0xe
 4094 012a 3A       		.uleb128 0x3a
 4095 012b 0B       		.uleb128 0xb
 4096 012c 3B       		.uleb128 0x3b
 4097 012d 05       		.uleb128 0x5
 4098 012e 27       		.uleb128 0x27
 4099 012f 19       		.uleb128 0x19
 4100 0130 49       		.uleb128 0x49
 4101 0131 13       		.uleb128 0x13
 4102 0132 11       		.uleb128 0x11
 4103 0133 01       		.uleb128 0x1
 4104 0134 12       		.uleb128 0x12
 4105 0135 06       		.uleb128 0x6
 4106 0136 40       		.uleb128 0x40
 4107 0137 18       		.uleb128 0x18
 4108 0138 9742     		.uleb128 0x2117
 4109 013a 19       		.uleb128 0x19
 4110 013b 01       		.uleb128 0x1
 4111 013c 13       		.uleb128 0x13
 4112 013d 00       		.byte	0
 4113 013e 00       		.byte	0
 4114 013f 19       		.uleb128 0x19
 4115 0140 05       		.uleb128 0x5
 4116 0141 00       		.byte	0
 4117 0142 03       		.uleb128 0x3
 4118 0143 0E       		.uleb128 0xe
 4119 0144 3A       		.uleb128 0x3a
 4120 0145 0B       		.uleb128 0xb
 4121 0146 3B       		.uleb128 0x3b
 4122 0147 05       		.uleb128 0x5
 4123 0148 49       		.uleb128 0x49
 4124 0149 13       		.uleb128 0x13
 4125 014a 02       		.uleb128 0x2
 4126 014b 17       		.uleb128 0x17
 4127 014c 00       		.byte	0
 4128 014d 00       		.byte	0
 4129 014e 1A       		.uleb128 0x1a
 4130 014f 898201   		.uleb128 0x4109
 4131 0152 01       		.byte	0x1
 4132 0153 11       		.uleb128 0x11
 4133 0154 01       		.uleb128 0x1
 4134 0155 31       		.uleb128 0x31
 4135 0156 13       		.uleb128 0x13
 4136 0157 01       		.uleb128 0x1
 4137 0158 13       		.uleb128 0x13
 4138 0159 00       		.byte	0
 4139 015a 00       		.byte	0
 4140 015b 1B       		.uleb128 0x1b
 4141 015c 8A8201   		.uleb128 0x410a
 4142 015f 00       		.byte	0
 4143 0160 02       		.uleb128 0x2
 4144 0161 18       		.uleb128 0x18
 4145 0162 9142     		.uleb128 0x2111
 4146 0164 18       		.uleb128 0x18
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 135


 4147 0165 00       		.byte	0
 4148 0166 00       		.byte	0
 4149 0167 1C       		.uleb128 0x1c
 4150 0168 2E       		.uleb128 0x2e
 4151 0169 01       		.byte	0x1
 4152 016a 3F       		.uleb128 0x3f
 4153 016b 19       		.uleb128 0x19
 4154 016c 03       		.uleb128 0x3
 4155 016d 0E       		.uleb128 0xe
 4156 016e 3A       		.uleb128 0x3a
 4157 016f 0B       		.uleb128 0xb
 4158 0170 3B       		.uleb128 0x3b
 4159 0171 05       		.uleb128 0x5
 4160 0172 27       		.uleb128 0x27
 4161 0173 19       		.uleb128 0x19
 4162 0174 11       		.uleb128 0x11
 4163 0175 01       		.uleb128 0x1
 4164 0176 12       		.uleb128 0x12
 4165 0177 06       		.uleb128 0x6
 4166 0178 40       		.uleb128 0x40
 4167 0179 18       		.uleb128 0x18
 4168 017a 9742     		.uleb128 0x2117
 4169 017c 19       		.uleb128 0x19
 4170 017d 01       		.uleb128 0x1
 4171 017e 13       		.uleb128 0x13
 4172 017f 00       		.byte	0
 4173 0180 00       		.byte	0
 4174 0181 1D       		.uleb128 0x1d
 4175 0182 34       		.uleb128 0x34
 4176 0183 00       		.byte	0
 4177 0184 03       		.uleb128 0x3
 4178 0185 0E       		.uleb128 0xe
 4179 0186 3A       		.uleb128 0x3a
 4180 0187 0B       		.uleb128 0xb
 4181 0188 3B       		.uleb128 0x3b
 4182 0189 05       		.uleb128 0x5
 4183 018a 49       		.uleb128 0x49
 4184 018b 13       		.uleb128 0x13
 4185 018c 1C       		.uleb128 0x1c
 4186 018d 0B       		.uleb128 0xb
 4187 018e 00       		.byte	0
 4188 018f 00       		.byte	0
 4189 0190 1E       		.uleb128 0x1e
 4190 0191 898201   		.uleb128 0x4109
 4191 0194 01       		.byte	0x1
 4192 0195 11       		.uleb128 0x11
 4193 0196 01       		.uleb128 0x1
 4194 0197 31       		.uleb128 0x31
 4195 0198 13       		.uleb128 0x13
 4196 0199 00       		.byte	0
 4197 019a 00       		.byte	0
 4198 019b 1F       		.uleb128 0x1f
 4199 019c 26       		.uleb128 0x26
 4200 019d 00       		.byte	0
 4201 019e 49       		.uleb128 0x49
 4202 019f 13       		.uleb128 0x13
 4203 01a0 00       		.byte	0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 136


 4204 01a1 00       		.byte	0
 4205 01a2 20       		.uleb128 0x20
 4206 01a3 2E       		.uleb128 0x2e
 4207 01a4 00       		.byte	0
 4208 01a5 3F       		.uleb128 0x3f
 4209 01a6 19       		.uleb128 0x19
 4210 01a7 03       		.uleb128 0x3
 4211 01a8 0E       		.uleb128 0xe
 4212 01a9 3A       		.uleb128 0x3a
 4213 01aa 0B       		.uleb128 0xb
 4214 01ab 3B       		.uleb128 0x3b
 4215 01ac 05       		.uleb128 0x5
 4216 01ad 27       		.uleb128 0x27
 4217 01ae 19       		.uleb128 0x19
 4218 01af 11       		.uleb128 0x11
 4219 01b0 01       		.uleb128 0x1
 4220 01b1 12       		.uleb128 0x12
 4221 01b2 06       		.uleb128 0x6
 4222 01b3 40       		.uleb128 0x40
 4223 01b4 18       		.uleb128 0x18
 4224 01b5 9742     		.uleb128 0x2117
 4225 01b7 19       		.uleb128 0x19
 4226 01b8 00       		.byte	0
 4227 01b9 00       		.byte	0
 4228 01ba 21       		.uleb128 0x21
 4229 01bb 34       		.uleb128 0x34
 4230 01bc 00       		.byte	0
 4231 01bd 03       		.uleb128 0x3
 4232 01be 0E       		.uleb128 0xe
 4233 01bf 3A       		.uleb128 0x3a
 4234 01c0 0B       		.uleb128 0xb
 4235 01c1 3B       		.uleb128 0x3b
 4236 01c2 05       		.uleb128 0x5
 4237 01c3 49       		.uleb128 0x49
 4238 01c4 13       		.uleb128 0x13
 4239 01c5 02       		.uleb128 0x2
 4240 01c6 18       		.uleb128 0x18
 4241 01c7 00       		.byte	0
 4242 01c8 00       		.byte	0
 4243 01c9 22       		.uleb128 0x22
 4244 01ca 34       		.uleb128 0x34
 4245 01cb 00       		.byte	0
 4246 01cc 03       		.uleb128 0x3
 4247 01cd 0E       		.uleb128 0xe
 4248 01ce 3A       		.uleb128 0x3a
 4249 01cf 0B       		.uleb128 0xb
 4250 01d0 3B       		.uleb128 0x3b
 4251 01d1 05       		.uleb128 0x5
 4252 01d2 49       		.uleb128 0x49
 4253 01d3 13       		.uleb128 0x13
 4254 01d4 3F       		.uleb128 0x3f
 4255 01d5 19       		.uleb128 0x19
 4256 01d6 3C       		.uleb128 0x3c
 4257 01d7 19       		.uleb128 0x19
 4258 01d8 00       		.byte	0
 4259 01d9 00       		.byte	0
 4260 01da 23       		.uleb128 0x23
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 137


 4261 01db 34       		.uleb128 0x34
 4262 01dc 00       		.byte	0
 4263 01dd 03       		.uleb128 0x3
 4264 01de 0E       		.uleb128 0xe
 4265 01df 3A       		.uleb128 0x3a
 4266 01e0 0B       		.uleb128 0xb
 4267 01e1 3B       		.uleb128 0x3b
 4268 01e2 0B       		.uleb128 0xb
 4269 01e3 49       		.uleb128 0x49
 4270 01e4 13       		.uleb128 0x13
 4271 01e5 3F       		.uleb128 0x3f
 4272 01e6 19       		.uleb128 0x19
 4273 01e7 02       		.uleb128 0x2
 4274 01e8 18       		.uleb128 0x18
 4275 01e9 00       		.byte	0
 4276 01ea 00       		.byte	0
 4277 01eb 24       		.uleb128 0x24
 4278 01ec 2E       		.uleb128 0x2e
 4279 01ed 00       		.byte	0
 4280 01ee 3F       		.uleb128 0x3f
 4281 01ef 19       		.uleb128 0x19
 4282 01f0 3C       		.uleb128 0x3c
 4283 01f1 19       		.uleb128 0x19
 4284 01f2 6E       		.uleb128 0x6e
 4285 01f3 0E       		.uleb128 0xe
 4286 01f4 03       		.uleb128 0x3
 4287 01f5 0E       		.uleb128 0xe
 4288 01f6 3A       		.uleb128 0x3a
 4289 01f7 0B       		.uleb128 0xb
 4290 01f8 3B       		.uleb128 0x3b
 4291 01f9 05       		.uleb128 0x5
 4292 01fa 00       		.byte	0
 4293 01fb 00       		.byte	0
 4294 01fc 25       		.uleb128 0x25
 4295 01fd 2E       		.uleb128 0x2e
 4296 01fe 00       		.byte	0
 4297 01ff 3F       		.uleb128 0x3f
 4298 0200 19       		.uleb128 0x19
 4299 0201 3C       		.uleb128 0x3c
 4300 0202 19       		.uleb128 0x19
 4301 0203 6E       		.uleb128 0x6e
 4302 0204 0E       		.uleb128 0xe
 4303 0205 03       		.uleb128 0x3
 4304 0206 0E       		.uleb128 0xe
 4305 0207 3A       		.uleb128 0x3a
 4306 0208 0B       		.uleb128 0xb
 4307 0209 3B       		.uleb128 0x3b
 4308 020a 0B       		.uleb128 0xb
 4309 020b 00       		.byte	0
 4310 020c 00       		.byte	0
 4311 020d 00       		.byte	0
 4312              		.section	.debug_loc,"",%progbits
 4313              	.Ldebug_loc0:
 4314              	.LLST0:
 4315 0000 0C000000 		.4byte	.LVL0
 4316 0004 16000000 		.4byte	.LVL1
 4317 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 138


 4318 000a 51       		.byte	0x51
 4319 000b 16000000 		.4byte	.LVL1
 4320 000f 2C000000 		.4byte	.LFE19
 4321 0013 0100     		.2byte	0x1
 4322 0015 53       		.byte	0x53
 4323 0016 00000000 		.4byte	0
 4324 001a 00000000 		.4byte	0
 4325              	.LLST1:
 4326 001e 00000000 		.4byte	.LVL5
 4327 0022 37000000 		.4byte	.LVL7-1
 4328 0026 0100     		.2byte	0x1
 4329 0028 50       		.byte	0x50
 4330 0029 37000000 		.4byte	.LVL7-1
 4331 002d 40000000 		.4byte	.LFE2
 4332 0031 0400     		.2byte	0x4
 4333 0033 F3       		.byte	0xf3
 4334 0034 01       		.uleb128 0x1
 4335 0035 50       		.byte	0x50
 4336 0036 9F       		.byte	0x9f
 4337 0037 00000000 		.4byte	0
 4338 003b 00000000 		.4byte	0
 4339              	.LLST2:
 4340 003f 30000000 		.4byte	.LVL6
 4341 0043 3A000000 		.4byte	.LVL8
 4342 0047 0100     		.2byte	0x1
 4343 0049 54       		.byte	0x54
 4344 004a 3A000000 		.4byte	.LVL8
 4345 004e 40000000 		.4byte	.LFE2
 4346 0052 0100     		.2byte	0x1
 4347 0054 50       		.byte	0x50
 4348 0055 00000000 		.4byte	0
 4349 0059 00000000 		.4byte	0
 4350              	.LLST3:
 4351 005d 02000000 		.4byte	.LVL9
 4352 0061 22000000 		.4byte	.LVL11
 4353 0065 0200     		.2byte	0x2
 4354 0067 30       		.byte	0x30
 4355 0068 9F       		.byte	0x9f
 4356 0069 22000000 		.4byte	.LVL11
 4357 006d 2C000000 		.4byte	.LFE3
 4358 0071 0100     		.2byte	0x1
 4359 0073 50       		.byte	0x50
 4360 0074 00000000 		.4byte	0
 4361 0078 00000000 		.4byte	0
 4362              	.LLST4:
 4363 007c 02000000 		.4byte	.LVL12
 4364 0080 12000000 		.4byte	.LVL13
 4365 0084 0300     		.2byte	0x3
 4366 0086 09       		.byte	0x9
 4367 0087 FF       		.byte	0xff
 4368 0088 9F       		.byte	0x9f
 4369 0089 12000000 		.4byte	.LVL13
 4370 008d 14000000 		.4byte	.LVL14
 4371 0091 0100     		.2byte	0x1
 4372 0093 50       		.byte	0x50
 4373 0094 18000000 		.4byte	.LVL15
 4374 0098 25000000 		.4byte	.LVL16-1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 139


 4375 009c 0100     		.2byte	0x1
 4376 009e 50       		.byte	0x50
 4377 009f 26000000 		.4byte	.LVL16
 4378 00a3 30000000 		.4byte	.LVL18
 4379 00a7 0100     		.2byte	0x1
 4380 00a9 50       		.byte	0x50
 4381 00aa 30000000 		.4byte	.LVL18
 4382 00ae 32000000 		.4byte	.LVL19
 4383 00b2 0300     		.2byte	0x3
 4384 00b4 09       		.byte	0x9
 4385 00b5 FF       		.byte	0xff
 4386 00b6 9F       		.byte	0x9f
 4387 00b7 32000000 		.4byte	.LVL19
 4388 00bb 3C000000 		.4byte	.LFE4
 4389 00bf 0100     		.2byte	0x1
 4390 00c1 50       		.byte	0x50
 4391 00c2 00000000 		.4byte	0
 4392 00c6 00000000 		.4byte	0
 4393              	.LLST5:
 4394 00ca 12000000 		.4byte	.LVL13
 4395 00ce 30000000 		.4byte	.LVL18
 4396 00d2 0100     		.2byte	0x1
 4397 00d4 54       		.byte	0x54
 4398 00d5 00000000 		.4byte	0
 4399 00d9 00000000 		.4byte	0
 4400              	.LLST6:
 4401 00dd 00000000 		.4byte	.LVL20
 4402 00e1 47000000 		.4byte	.LVL22-1
 4403 00e5 0100     		.2byte	0x1
 4404 00e7 50       		.byte	0x50
 4405 00e8 47000000 		.4byte	.LVL22-1
 4406 00ec 54000000 		.4byte	.LFE5
 4407 00f0 0400     		.2byte	0x4
 4408 00f2 F3       		.byte	0xf3
 4409 00f3 01       		.uleb128 0x1
 4410 00f4 50       		.byte	0x50
 4411 00f5 9F       		.byte	0x9f
 4412 00f6 00000000 		.4byte	0
 4413 00fa 00000000 		.4byte	0
 4414              	.LLST7:
 4415 00fe 00000000 		.4byte	.LVL20
 4416 0102 47000000 		.4byte	.LVL22-1
 4417 0106 0100     		.2byte	0x1
 4418 0108 51       		.byte	0x51
 4419 0109 47000000 		.4byte	.LVL22-1
 4420 010d 54000000 		.4byte	.LFE5
 4421 0111 0400     		.2byte	0x4
 4422 0113 F3       		.byte	0xf3
 4423 0114 01       		.uleb128 0x1
 4424 0115 51       		.byte	0x51
 4425 0116 9F       		.byte	0x9f
 4426 0117 00000000 		.4byte	0
 4427 011b 00000000 		.4byte	0
 4428              	.LLST8:
 4429 011f 40000000 		.4byte	.LVL21
 4430 0123 4A000000 		.4byte	.LVL23
 4431 0127 0100     		.2byte	0x1
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 140


 4432 0129 54       		.byte	0x54
 4433 012a 4A000000 		.4byte	.LVL23
 4434 012e 54000000 		.4byte	.LFE5
 4435 0132 0100     		.2byte	0x1
 4436 0134 50       		.byte	0x50
 4437 0135 00000000 		.4byte	0
 4438 0139 00000000 		.4byte	0
 4439              	.LLST9:
 4440 013d 02000000 		.4byte	.LVL24
 4441 0141 22000000 		.4byte	.LVL26
 4442 0145 0200     		.2byte	0x2
 4443 0147 30       		.byte	0x30
 4444 0148 9F       		.byte	0x9f
 4445 0149 22000000 		.4byte	.LVL26
 4446 014d 2C000000 		.4byte	.LFE6
 4447 0151 0100     		.2byte	0x1
 4448 0153 50       		.byte	0x50
 4449 0154 00000000 		.4byte	0
 4450 0158 00000000 		.4byte	0
 4451              	.LLST10:
 4452 015c 00000000 		.4byte	.LVL27
 4453 0160 06000000 		.4byte	.LVL28
 4454 0164 0100     		.2byte	0x1
 4455 0166 50       		.byte	0x50
 4456 0167 06000000 		.4byte	.LVL28
 4457 016b 9C000000 		.4byte	.LFE8
 4458 016f 0400     		.2byte	0x4
 4459 0171 F3       		.byte	0xf3
 4460 0172 01       		.uleb128 0x1
 4461 0173 50       		.byte	0x50
 4462 0174 9F       		.byte	0x9f
 4463 0175 00000000 		.4byte	0
 4464 0179 00000000 		.4byte	0
 4465              	.LLST11:
 4466 017d 00000000 		.4byte	.LVL27
 4467 0181 0E000000 		.4byte	.LVL29
 4468 0185 0100     		.2byte	0x1
 4469 0187 51       		.byte	0x51
 4470 0188 0E000000 		.4byte	.LVL29
 4471 018c 9C000000 		.4byte	.LFE8
 4472 0190 0400     		.2byte	0x4
 4473 0192 F3       		.byte	0xf3
 4474 0193 01       		.uleb128 0x1
 4475 0194 51       		.byte	0x51
 4476 0195 9F       		.byte	0x9f
 4477 0196 00000000 		.4byte	0
 4478 019a 00000000 		.4byte	0
 4479              	.LLST12:
 4480 019e 00000000 		.4byte	.LVL27
 4481 01a2 16000000 		.4byte	.LVL31
 4482 01a6 0100     		.2byte	0x1
 4483 01a8 52       		.byte	0x52
 4484 01a9 16000000 		.4byte	.LVL31
 4485 01ad 94000000 		.4byte	.LVL43
 4486 01b1 0100     		.2byte	0x1
 4487 01b3 56       		.byte	0x56
 4488 01b4 94000000 		.4byte	.LVL43
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 141


 4489 01b8 9C000000 		.4byte	.LFE8
 4490 01bc 0400     		.2byte	0x4
 4491 01be F3       		.byte	0xf3
 4492 01bf 01       		.uleb128 0x1
 4493 01c0 52       		.byte	0x52
 4494 01c1 9F       		.byte	0x9f
 4495 01c2 00000000 		.4byte	0
 4496 01c6 00000000 		.4byte	0
 4497              	.LLST13:
 4498 01ca 12000000 		.4byte	.LVL30
 4499 01ce 16000000 		.4byte	.LVL31
 4500 01d2 0200     		.2byte	0x2
 4501 01d4 30       		.byte	0x30
 4502 01d5 9F       		.byte	0x9f
 4503 01d6 16000000 		.4byte	.LVL31
 4504 01da 94000000 		.4byte	.LVL42
 4505 01de 0100     		.2byte	0x1
 4506 01e0 55       		.byte	0x55
 4507 01e1 00000000 		.4byte	0
 4508 01e5 00000000 		.4byte	0
 4509              	.LLST14:
 4510 01e9 1A000000 		.4byte	.LVL32
 4511 01ed 39000000 		.4byte	.LVL33-1
 4512 01f1 0100     		.2byte	0x1
 4513 01f3 50       		.byte	0x50
 4514 01f4 4C000000 		.4byte	.LVL34
 4515 01f8 6B000000 		.4byte	.LVL35-1
 4516 01fc 0100     		.2byte	0x1
 4517 01fe 50       		.byte	0x50
 4518 01ff 72000000 		.4byte	.LVL36
 4519 0203 83000000 		.4byte	.LVL37-1
 4520 0207 0100     		.2byte	0x1
 4521 0209 50       		.byte	0x50
 4522 020a 00000000 		.4byte	0
 4523 020e 00000000 		.4byte	0
 4524              	.LLST15:
 4525 0212 12000000 		.4byte	.LVL30
 4526 0216 94000000 		.4byte	.LVL41
 4527 021a 0100     		.2byte	0x1
 4528 021c 54       		.byte	0x54
 4529 021d 00000000 		.4byte	0
 4530 0221 00000000 		.4byte	0
 4531              	.LLST16:
 4532 0225 00000000 		.4byte	.LVL44
 4533 0229 30000000 		.4byte	.LVL48
 4534 022d 0100     		.2byte	0x1
 4535 022f 50       		.byte	0x50
 4536 0230 30000000 		.4byte	.LVL48
 4537 0234 80000000 		.4byte	.LFE11
 4538 0238 0400     		.2byte	0x4
 4539 023a F3       		.byte	0xf3
 4540 023b 01       		.uleb128 0x1
 4541 023c 50       		.byte	0x50
 4542 023d 9F       		.byte	0x9f
 4543 023e 00000000 		.4byte	0
 4544 0242 00000000 		.4byte	0
 4545              	.LLST17:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 142


 4546 0246 34000000 		.4byte	.LVL49
 4547 024a 6B000000 		.4byte	.LVL60-1
 4548 024e 0100     		.2byte	0x1
 4549 0250 50       		.byte	0x50
 4550 0251 00000000 		.4byte	0
 4551 0255 00000000 		.4byte	0
 4552              	.LLST18:
 4553 0259 2A000000 		.4byte	.LVL47
 4554 025d 30000000 		.4byte	.LVL48
 4555 0261 0200     		.2byte	0x2
 4556 0263 30       		.byte	0x30
 4557 0264 9F       		.byte	0x9f
 4558 0265 30000000 		.4byte	.LVL48
 4559 0269 74000000 		.4byte	.LVL64
 4560 026d 0100     		.2byte	0x1
 4561 026f 55       		.byte	0x55
 4562 0270 00000000 		.4byte	0
 4563 0274 00000000 		.4byte	0
 4564              	.LLST19:
 4565 0278 1A000000 		.4byte	.LVL45
 4566 027c 24000000 		.4byte	.LVL46
 4567 0280 0200     		.2byte	0x2
 4568 0282 30       		.byte	0x30
 4569 0283 9F       		.byte	0x9f
 4570 0284 2A000000 		.4byte	.LVL47
 4571 0288 74000000 		.4byte	.LVL65
 4572 028c 0100     		.2byte	0x1
 4573 028e 58       		.byte	0x58
 4574 028f 00000000 		.4byte	0
 4575 0293 00000000 		.4byte	0
 4576              	.LLST20:
 4577 0297 1A000000 		.4byte	.LVL45
 4578 029b 24000000 		.4byte	.LVL46
 4579 029f 0200     		.2byte	0x2
 4580 02a1 35       		.byte	0x35
 4581 02a2 9F       		.byte	0x9f
 4582 02a3 2A000000 		.4byte	.LVL47
 4583 02a7 74000000 		.4byte	.LVL66
 4584 02ab 0100     		.2byte	0x1
 4585 02ad 59       		.byte	0x59
 4586 02ae 00000000 		.4byte	0
 4587 02b2 00000000 		.4byte	0
 4588              	.LLST21:
 4589 02b6 42000000 		.4byte	.LVL52
 4590 02ba 54000000 		.4byte	.LVL55
 4591 02be 0100     		.2byte	0x1
 4592 02c0 52       		.byte	0x52
 4593 02c1 54000000 		.4byte	.LVL55
 4594 02c5 5E000000 		.4byte	.LVL57
 4595 02c9 0200     		.2byte	0x2
 4596 02cb 76       		.byte	0x76
 4597 02cc 00       		.sleb128 0
 4598 02cd 62000000 		.4byte	.LVL58
 4599 02d1 6B000000 		.4byte	.LVL60-1
 4600 02d5 0100     		.2byte	0x1
 4601 02d7 53       		.byte	0x53
 4602 02d8 00000000 		.4byte	0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 143


 4603 02dc 00000000 		.4byte	0
 4604              	.LLST22:
 4605 02e0 38000000 		.4byte	.LVL50
 4606 02e4 62000000 		.4byte	.LVL58
 4607 02e8 0100     		.2byte	0x1
 4608 02ea 53       		.byte	0x53
 4609 02eb 00000000 		.4byte	0
 4610 02ef 00000000 		.4byte	0
 4611              	.LLST23:
 4612 02f3 30000000 		.4byte	.LVL48
 4613 02f7 74000000 		.4byte	.LVL63
 4614 02fb 0100     		.2byte	0x1
 4615 02fd 54       		.byte	0x54
 4616 02fe 00000000 		.4byte	0
 4617 0302 00000000 		.4byte	0
 4618              	.LLST24:
 4619 0306 00000000 		.4byte	.LVL67
 4620 030a 05000000 		.4byte	.LVL68-1
 4621 030e 0100     		.2byte	0x1
 4622 0310 50       		.byte	0x50
 4623 0311 05000000 		.4byte	.LVL68-1
 4624 0315 08000000 		.4byte	.LFE13
 4625 0319 0400     		.2byte	0x4
 4626 031b F3       		.byte	0xf3
 4627 031c 01       		.uleb128 0x1
 4628 031d 50       		.byte	0x50
 4629 031e 9F       		.byte	0x9f
 4630 031f 00000000 		.4byte	0
 4631 0323 00000000 		.4byte	0
 4632              	.LLST25:
 4633 0327 00000000 		.4byte	.LVL69
 4634 032b 08000000 		.4byte	.LVL70
 4635 032f 0100     		.2byte	0x1
 4636 0331 50       		.byte	0x50
 4637 0332 08000000 		.4byte	.LVL70
 4638 0336 0A000000 		.4byte	.LVL71
 4639 033a 0300     		.2byte	0x3
 4640 033c 70       		.byte	0x70
 4641 033d 01       		.sleb128 1
 4642 033e 9F       		.byte	0x9f
 4643 033f 0A000000 		.4byte	.LVL71
 4644 0343 30000000 		.4byte	.LFE14
 4645 0347 0400     		.2byte	0x4
 4646 0349 F3       		.byte	0xf3
 4647 034a 01       		.uleb128 0x1
 4648 034b 50       		.byte	0x50
 4649 034c 9F       		.byte	0x9f
 4650 034d 00000000 		.4byte	0
 4651 0351 00000000 		.4byte	0
 4652              	.LLST26:
 4653 0355 00000000 		.4byte	.LVL72
 4654 0359 08000000 		.4byte	.LVL73
 4655 035d 0100     		.2byte	0x1
 4656 035f 50       		.byte	0x50
 4657 0360 08000000 		.4byte	.LVL73
 4658 0364 0A000000 		.4byte	.LVL74
 4659 0368 0300     		.2byte	0x3
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 144


 4660 036a 70       		.byte	0x70
 4661 036b 01       		.sleb128 1
 4662 036c 9F       		.byte	0x9f
 4663 036d 0A000000 		.4byte	.LVL74
 4664 0371 30000000 		.4byte	.LFE15
 4665 0375 0400     		.2byte	0x4
 4666 0377 F3       		.byte	0xf3
 4667 0378 01       		.uleb128 0x1
 4668 0379 50       		.byte	0x50
 4669 037a 9F       		.byte	0x9f
 4670 037b 00000000 		.4byte	0
 4671 037f 00000000 		.4byte	0
 4672              	.LLST27:
 4673 0383 00000000 		.4byte	.LVL75
 4674 0387 06000000 		.4byte	.LVL76
 4675 038b 0100     		.2byte	0x1
 4676 038d 50       		.byte	0x50
 4677 038e 06000000 		.4byte	.LVL76
 4678 0392 10000000 		.4byte	.LVL79
 4679 0396 0100     		.2byte	0x1
 4680 0398 54       		.byte	0x54
 4681 0399 10000000 		.4byte	.LVL79
 4682 039d 12000000 		.4byte	.LFE16
 4683 03a1 0400     		.2byte	0x4
 4684 03a3 F3       		.byte	0xf3
 4685 03a4 01       		.uleb128 0x1
 4686 03a5 50       		.byte	0x50
 4687 03a6 9F       		.byte	0x9f
 4688 03a7 00000000 		.4byte	0
 4689 03ab 00000000 		.4byte	0
 4690              	.LLST28:
 4691 03af 00000000 		.4byte	.LVL75
 4692 03b3 09000000 		.4byte	.LVL77-1
 4693 03b7 0100     		.2byte	0x1
 4694 03b9 51       		.byte	0x51
 4695 03ba 09000000 		.4byte	.LVL77-1
 4696 03be 12000000 		.4byte	.LFE16
 4697 03c2 0400     		.2byte	0x4
 4698 03c4 F3       		.byte	0xf3
 4699 03c5 01       		.uleb128 0x1
 4700 03c6 51       		.byte	0x51
 4701 03c7 9F       		.byte	0x9f
 4702 03c8 00000000 		.4byte	0
 4703 03cc 00000000 		.4byte	0
 4704              	.LLST29:
 4705 03d0 00000000 		.4byte	.LVL80
 4706 03d4 08000000 		.4byte	.LVL82
 4707 03d8 0100     		.2byte	0x1
 4708 03da 50       		.byte	0x50
 4709 03db 08000000 		.4byte	.LVL82
 4710 03df 0A000000 		.4byte	.LVL83
 4711 03e3 0100     		.2byte	0x1
 4712 03e5 53       		.byte	0x53
 4713 03e6 0A000000 		.4byte	.LVL83
 4714 03ea 0C000000 		.4byte	.LVL84
 4715 03ee 0100     		.2byte	0x1
 4716 03f0 50       		.byte	0x50
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 145


 4717 03f1 0C000000 		.4byte	.LVL84
 4718 03f5 17000000 		.4byte	.LVL86-1
 4719 03f9 0100     		.2byte	0x1
 4720 03fb 53       		.byte	0x53
 4721 03fc 17000000 		.4byte	.LVL86-1
 4722 0400 1A000000 		.4byte	.LFE17
 4723 0404 0400     		.2byte	0x4
 4724 0406 F3       		.byte	0xf3
 4725 0407 01       		.uleb128 0x1
 4726 0408 50       		.byte	0x50
 4727 0409 9F       		.byte	0x9f
 4728 040a 00000000 		.4byte	0
 4729 040e 00000000 		.4byte	0
 4730              	.LLST30:
 4731 0412 04000000 		.4byte	.LVL81
 4732 0416 0C000000 		.4byte	.LVL84
 4733 041a 0200     		.2byte	0x2
 4734 041c 30       		.byte	0x30
 4735 041d 9F       		.byte	0x9f
 4736 041e 0C000000 		.4byte	.LVL84
 4737 0422 14000000 		.4byte	.LVL85
 4738 0426 0100     		.2byte	0x1
 4739 0428 50       		.byte	0x50
 4740 0429 18000000 		.4byte	.LVL86
 4741 042d 1A000000 		.4byte	.LFE17
 4742 0431 0100     		.2byte	0x1
 4743 0433 50       		.byte	0x50
 4744 0434 00000000 		.4byte	0
 4745 0438 00000000 		.4byte	0
 4746              	.LLST31:
 4747 043c 02000000 		.4byte	.LVL87
 4748 0440 08000000 		.4byte	.LVL88
 4749 0444 0200     		.2byte	0x2
 4750 0446 30       		.byte	0x30
 4751 0447 9F       		.byte	0x9f
 4752 0448 08000000 		.4byte	.LVL88
 4753 044c 18000000 		.4byte	.LVL93
 4754 0450 0100     		.2byte	0x1
 4755 0452 55       		.byte	0x55
 4756 0453 18000000 		.4byte	.LVL93
 4757 0457 1A000000 		.4byte	.LFE18
 4758 045b 0100     		.2byte	0x1
 4759 045d 50       		.byte	0x50
 4760 045e 00000000 		.4byte	0
 4761 0462 00000000 		.4byte	0
 4762              	.LLST32:
 4763 0466 02000000 		.4byte	.LVL87
 4764 046a 08000000 		.4byte	.LVL88
 4765 046e 0200     		.2byte	0x2
 4766 0470 30       		.byte	0x30
 4767 0471 9F       		.byte	0x9f
 4768 0472 08000000 		.4byte	.LVL88
 4769 0476 18000000 		.4byte	.LVL92
 4770 047a 0100     		.2byte	0x1
 4771 047c 54       		.byte	0x54
 4772 047d 00000000 		.4byte	0
 4773 0481 00000000 		.4byte	0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 146


 4774              	.LLST33:
 4775 0485 00000000 		.4byte	.LVL94
 4776 0489 02000000 		.4byte	.LVL95
 4777 048d 0100     		.2byte	0x1
 4778 048f 50       		.byte	0x50
 4779 0490 02000000 		.4byte	.LVL95
 4780 0494 10000000 		.4byte	.LFE23
 4781 0498 0400     		.2byte	0x4
 4782 049a F3       		.byte	0xf3
 4783 049b 01       		.uleb128 0x1
 4784 049c 50       		.byte	0x50
 4785 049d 9F       		.byte	0x9f
 4786 049e 00000000 		.4byte	0
 4787 04a2 00000000 		.4byte	0
 4788              	.LLST34:
 4789 04a6 00000000 		.4byte	.LVL98
 4790 04aa 02000000 		.4byte	.LVL99
 4791 04ae 0100     		.2byte	0x1
 4792 04b0 50       		.byte	0x50
 4793 04b1 02000000 		.4byte	.LVL99
 4794 04b5 10000000 		.4byte	.LFE24
 4795 04b9 0400     		.2byte	0x4
 4796 04bb F3       		.byte	0xf3
 4797 04bc 01       		.uleb128 0x1
 4798 04bd 50       		.byte	0x50
 4799 04be 9F       		.byte	0x9f
 4800 04bf 00000000 		.4byte	0
 4801 04c3 00000000 		.4byte	0
 4802              	.LLST35:
 4803 04c7 00000000 		.4byte	.LVL102
 4804 04cb 08000000 		.4byte	.LVL105
 4805 04cf 0100     		.2byte	0x1
 4806 04d1 50       		.byte	0x50
 4807 04d2 08000000 		.4byte	.LVL105
 4808 04d6 1C000000 		.4byte	.LVL107
 4809 04da 0100     		.2byte	0x1
 4810 04dc 52       		.byte	0x52
 4811 04dd 1C000000 		.4byte	.LVL107
 4812 04e1 24000000 		.4byte	.LVL108
 4813 04e5 0600     		.2byte	0x6
 4814 04e7 F3       		.byte	0xf3
 4815 04e8 01       		.uleb128 0x1
 4816 04e9 50       		.byte	0x50
 4817 04ea 31       		.byte	0x31
 4818 04eb 24       		.byte	0x24
 4819 04ec 9F       		.byte	0x9f
 4820 04ed 24000000 		.4byte	.LVL108
 4821 04f1 28000000 		.4byte	.LVL109
 4822 04f5 0100     		.2byte	0x1
 4823 04f7 52       		.byte	0x52
 4824 04f8 28000000 		.4byte	.LVL109
 4825 04fc 34000000 		.4byte	.LFE25
 4826 0500 0600     		.2byte	0x6
 4827 0502 F3       		.byte	0xf3
 4828 0503 01       		.uleb128 0x1
 4829 0504 50       		.byte	0x50
 4830 0505 31       		.byte	0x31
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 147


 4831 0506 24       		.byte	0x24
 4832 0507 9F       		.byte	0x9f
 4833 0508 00000000 		.4byte	0
 4834 050c 00000000 		.4byte	0
 4835              	.LLST36:
 4836 0510 00000000 		.4byte	.LVL102
 4837 0514 1A000000 		.4byte	.LVL106
 4838 0518 0100     		.2byte	0x1
 4839 051a 51       		.byte	0x51
 4840 051b 1A000000 		.4byte	.LVL106
 4841 051f 24000000 		.4byte	.LVL108
 4842 0523 0400     		.2byte	0x4
 4843 0525 F3       		.byte	0xf3
 4844 0526 01       		.uleb128 0x1
 4845 0527 51       		.byte	0x51
 4846 0528 9F       		.byte	0x9f
 4847 0529 24000000 		.4byte	.LVL108
 4848 052d 28000000 		.4byte	.LVL109
 4849 0531 0100     		.2byte	0x1
 4850 0533 51       		.byte	0x51
 4851 0534 28000000 		.4byte	.LVL109
 4852 0538 34000000 		.4byte	.LFE25
 4853 053c 0400     		.2byte	0x4
 4854 053e F3       		.byte	0xf3
 4855 053f 01       		.uleb128 0x1
 4856 0540 51       		.byte	0x51
 4857 0541 9F       		.byte	0x9f
 4858 0542 00000000 		.4byte	0
 4859 0546 00000000 		.4byte	0
 4860              	.LLST37:
 4861 054a 2A000000 		.4byte	.LVL110
 4862 054e 2C000000 		.4byte	.LVL111
 4863 0552 0100     		.2byte	0x1
 4864 0554 50       		.byte	0x50
 4865 0555 00000000 		.4byte	0
 4866 0559 00000000 		.4byte	0
 4867              	.LLST38:
 4868 055d 02000000 		.4byte	.LVL103
 4869 0561 06000000 		.4byte	.LVL104
 4870 0565 0200     		.2byte	0x2
 4871 0567 31       		.byte	0x31
 4872 0568 9F       		.byte	0x9f
 4873 0569 06000000 		.4byte	.LVL104
 4874 056d 2C000000 		.4byte	.LVL112
 4875 0571 0100     		.2byte	0x1
 4876 0573 54       		.byte	0x54
 4877 0574 00000000 		.4byte	0
 4878 0578 00000000 		.4byte	0
 4879              	.LLST39:
 4880 057c 00000000 		.4byte	.LVL113
 4881 0580 09000000 		.4byte	.LVL114-1
 4882 0584 0100     		.2byte	0x1
 4883 0586 50       		.byte	0x50
 4884 0587 09000000 		.4byte	.LVL114-1
 4885 058b 36000000 		.4byte	.LVL121
 4886 058f 0100     		.2byte	0x1
 4887 0591 54       		.byte	0x54
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 148


 4888 0592 36000000 		.4byte	.LVL121
 4889 0596 3C000000 		.4byte	.LFE22
 4890 059a 0400     		.2byte	0x4
 4891 059c F3       		.byte	0xf3
 4892 059d 01       		.uleb128 0x1
 4893 059e 50       		.byte	0x50
 4894 059f 9F       		.byte	0x9f
 4895 05a0 00000000 		.4byte	0
 4896 05a4 00000000 		.4byte	0
 4897              	.LLST40:
 4898 05a8 00000000 		.4byte	.LVL113
 4899 05ac 09000000 		.4byte	.LVL114-1
 4900 05b0 0100     		.2byte	0x1
 4901 05b2 51       		.byte	0x51
 4902 05b3 09000000 		.4byte	.LVL114-1
 4903 05b7 36000000 		.4byte	.LVL122
 4904 05bb 0100     		.2byte	0x1
 4905 05bd 56       		.byte	0x56
 4906 05be 36000000 		.4byte	.LVL122
 4907 05c2 3C000000 		.4byte	.LFE22
 4908 05c6 0400     		.2byte	0x4
 4909 05c8 F3       		.byte	0xf3
 4910 05c9 01       		.uleb128 0x1
 4911 05ca 51       		.byte	0x51
 4912 05cb 9F       		.byte	0x9f
 4913 05cc 00000000 		.4byte	0
 4914 05d0 00000000 		.4byte	0
 4915              	.LLST41:
 4916 05d4 14000000 		.4byte	.LVL116
 4917 05d8 28000000 		.4byte	.LVL117
 4918 05dc 0100     		.2byte	0x1
 4919 05de 50       		.byte	0x50
 4920 05df 28000000 		.4byte	.LVL117
 4921 05e3 2B000000 		.4byte	.LVL118-1
 4922 05e7 0200     		.2byte	0x2
 4923 05e9 76       		.byte	0x76
 4924 05ea 10       		.sleb128 16
 4925 05eb 34000000 		.4byte	.LVL120
 4926 05ef 3C000000 		.4byte	.LFE22
 4927 05f3 0100     		.2byte	0x1
 4928 05f5 50       		.byte	0x50
 4929 05f6 00000000 		.4byte	0
 4930 05fa 00000000 		.4byte	0
 4931              	.LLST42:
 4932 05fe 0A000000 		.4byte	.LVL114
 4933 0602 0C000000 		.4byte	.LVL115
 4934 0606 0100     		.2byte	0x1
 4935 0608 50       		.byte	0x50
 4936 0609 2C000000 		.4byte	.LVL118
 4937 060d 2E000000 		.4byte	.LVL119
 4938 0611 0100     		.2byte	0x1
 4939 0613 50       		.byte	0x50
 4940 0614 00000000 		.4byte	0
 4941 0618 00000000 		.4byte	0
 4942              	.LLST43:
 4943 061c 02000000 		.4byte	.LVL123
 4944 0620 06000000 		.4byte	.LVL124
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 149


 4945 0624 0200     		.2byte	0x2
 4946 0626 30       		.byte	0x30
 4947 0627 9F       		.byte	0x9f
 4948 0628 06000000 		.4byte	.LVL124
 4949 062c 1A000000 		.4byte	.LVL128
 4950 0630 0100     		.2byte	0x1
 4951 0632 54       		.byte	0x54
 4952 0633 00000000 		.4byte	0
 4953 0637 00000000 		.4byte	0
 4954              	.LLST44:
 4955 063b 0E000000 		.4byte	.LVL125
 4956 063f 13000000 		.4byte	.LVL126-1
 4957 0643 0100     		.2byte	0x1
 4958 0645 51       		.byte	0x51
 4959 0646 00000000 		.4byte	0
 4960 064a 00000000 		.4byte	0
 4961              	.LLST45:
 4962 064e 00000000 		.4byte	.LVL129
 4963 0652 10000000 		.4byte	.LVL131
 4964 0656 0100     		.2byte	0x1
 4965 0658 50       		.byte	0x50
 4966 0659 10000000 		.4byte	.LVL131
 4967 065d 1C000000 		.4byte	.LFE27
 4968 0661 0400     		.2byte	0x4
 4969 0663 F3       		.byte	0xf3
 4970 0664 01       		.uleb128 0x1
 4971 0665 50       		.byte	0x50
 4972 0666 9F       		.byte	0x9f
 4973 0667 00000000 		.4byte	0
 4974 066b 00000000 		.4byte	0
 4975              	.LLST46:
 4976 066f 00000000 		.4byte	.LVL129
 4977 0673 13000000 		.4byte	.LVL132-1
 4978 0677 0100     		.2byte	0x1
 4979 0679 51       		.byte	0x51
 4980 067a 13000000 		.4byte	.LVL132-1
 4981 067e 1C000000 		.4byte	.LFE27
 4982 0682 0400     		.2byte	0x4
 4983 0684 F3       		.byte	0xf3
 4984 0685 01       		.uleb128 0x1
 4985 0686 51       		.byte	0x51
 4986 0687 9F       		.byte	0x9f
 4987 0688 00000000 		.4byte	0
 4988 068c 00000000 		.4byte	0
 4989              	.LLST47:
 4990 0690 02000000 		.4byte	.LVL130
 4991 0694 14000000 		.4byte	.LVL132
 4992 0698 0200     		.2byte	0x2
 4993 069a 30       		.byte	0x30
 4994 069b 9F       		.byte	0x9f
 4995 069c 14000000 		.4byte	.LVL132
 4996 06a0 16000000 		.4byte	.LVL133
 4997 06a4 0200     		.2byte	0x2
 4998 06a6 31       		.byte	0x31
 4999 06a7 9F       		.byte	0x9f
 5000 06a8 16000000 		.4byte	.LVL133
 5001 06ac 1C000000 		.4byte	.LFE27
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 150


 5002 06b0 0100     		.2byte	0x1
 5003 06b2 50       		.byte	0x50
 5004 06b3 00000000 		.4byte	0
 5005 06b7 00000000 		.4byte	0
 5006              	.LLST48:
 5007 06bb 00000000 		.4byte	.LVL134
 5008 06bf 0B000000 		.4byte	.LVL135-1
 5009 06c3 0100     		.2byte	0x1
 5010 06c5 50       		.byte	0x50
 5011 06c6 0B000000 		.4byte	.LVL135-1
 5012 06ca 1A000000 		.4byte	.LVL138
 5013 06ce 0100     		.2byte	0x1
 5014 06d0 55       		.byte	0x55
 5015 06d1 1A000000 		.4byte	.LVL138
 5016 06d5 1C000000 		.4byte	.LFE28
 5017 06d9 0400     		.2byte	0x4
 5018 06db F3       		.byte	0xf3
 5019 06dc 01       		.uleb128 0x1
 5020 06dd 50       		.byte	0x50
 5021 06de 9F       		.byte	0x9f
 5022 06df 00000000 		.4byte	0
 5023 06e3 00000000 		.4byte	0
 5024              	.LLST49:
 5025 06e7 00000000 		.4byte	.LVL134
 5026 06eb 0B000000 		.4byte	.LVL135-1
 5027 06ef 0100     		.2byte	0x1
 5028 06f1 51       		.byte	0x51
 5029 06f2 0B000000 		.4byte	.LVL135-1
 5030 06f6 1A000000 		.4byte	.LVL139
 5031 06fa 0100     		.2byte	0x1
 5032 06fc 56       		.byte	0x56
 5033 06fd 1A000000 		.4byte	.LVL139
 5034 0701 1C000000 		.4byte	.LFE28
 5035 0705 0400     		.2byte	0x4
 5036 0707 F3       		.byte	0xf3
 5037 0708 01       		.uleb128 0x1
 5038 0709 51       		.byte	0x51
 5039 070a 9F       		.byte	0x9f
 5040 070b 00000000 		.4byte	0
 5041 070f 00000000 		.4byte	0
 5042              	.LLST50:
 5043 0713 00000000 		.4byte	.LVL134
 5044 0717 0B000000 		.4byte	.LVL135-1
 5045 071b 0100     		.2byte	0x1
 5046 071d 52       		.byte	0x52
 5047 071e 0B000000 		.4byte	.LVL135-1
 5048 0722 10000000 		.4byte	.LVL136
 5049 0726 0100     		.2byte	0x1
 5050 0728 54       		.byte	0x54
 5051 0729 10000000 		.4byte	.LVL136
 5052 072d 1C000000 		.4byte	.LFE28
 5053 0731 0400     		.2byte	0x4
 5054 0733 F3       		.byte	0xf3
 5055 0734 01       		.uleb128 0x1
 5056 0735 52       		.byte	0x52
 5057 0736 9F       		.byte	0x9f
 5058 0737 00000000 		.4byte	0
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 151


 5059 073b 00000000 		.4byte	0
 5060              	.LLST51:
 5061 073f 0C000000 		.4byte	.LVL135
 5062 0743 19000000 		.4byte	.LVL137-1
 5063 0747 0100     		.2byte	0x1
 5064 0749 50       		.byte	0x50
 5065 074a 00000000 		.4byte	0
 5066 074e 00000000 		.4byte	0
 5067              	.LLST52:
 5068 0752 00000000 		.4byte	.LVL142
 5069 0756 13000000 		.4byte	.LVL143-1
 5070 075a 0100     		.2byte	0x1
 5071 075c 50       		.byte	0x50
 5072 075d 13000000 		.4byte	.LVL143-1
 5073 0761 3C000000 		.4byte	.LFE10
 5074 0765 0400     		.2byte	0x4
 5075 0767 F3       		.byte	0xf3
 5076 0768 01       		.uleb128 0x1
 5077 0769 50       		.byte	0x50
 5078 076a 9F       		.byte	0x9f
 5079 076b 00000000 		.4byte	0
 5080 076f 00000000 		.4byte	0
 5081              	.LLST53:
 5082 0773 00000000 		.4byte	.LVL151
 5083 0777 30000000 		.4byte	.LVL158
 5084 077b 0100     		.2byte	0x1
 5085 077d 50       		.byte	0x50
 5086 077e 30000000 		.4byte	.LVL158
 5087 0782 84000000 		.4byte	.LFE26
 5088 0786 0200     		.2byte	0x2
 5089 0788 91       		.byte	0x91
 5090 0789 5C       		.sleb128 -36
 5091 078a 00000000 		.4byte	0
 5092 078e 00000000 		.4byte	0
 5093              	.LLST54:
 5094 0792 16000000 		.4byte	.LVL152
 5095 0796 22000000 		.4byte	.LVL154
 5096 079a 0100     		.2byte	0x1
 5097 079c 55       		.byte	0x55
 5098 079d 22000000 		.4byte	.LVL154
 5099 07a1 70000000 		.4byte	.LVL167
 5100 07a5 0100     		.2byte	0x1
 5101 07a7 58       		.byte	0x58
 5102 07a8 00000000 		.4byte	0
 5103 07ac 00000000 		.4byte	0
 5104              	.LLST55:
 5105 07b0 20000000 		.4byte	.LVL153
 5106 07b4 26000000 		.4byte	.LVL155
 5107 07b8 0100     		.2byte	0x1
 5108 07ba 52       		.byte	0x52
 5109 07bb 26000000 		.4byte	.LVL155
 5110 07bf 70000000 		.4byte	.LVL166
 5111 07c3 0100     		.2byte	0x1
 5112 07c5 57       		.byte	0x57
 5113 07c6 00000000 		.4byte	0
 5114 07ca 00000000 		.4byte	0
 5115              	.LLST56:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 152


 5116 07ce 2A000000 		.4byte	.LVL156
 5117 07d2 2C000000 		.4byte	.LVL157
 5118 07d6 0100     		.2byte	0x1
 5119 07d8 52       		.byte	0x52
 5120 07d9 2C000000 		.4byte	.LVL157
 5121 07dd 70000000 		.4byte	.LVL168
 5122 07e1 0100     		.2byte	0x1
 5123 07e3 5A       		.byte	0x5a
 5124 07e4 00000000 		.4byte	0
 5125 07e8 00000000 		.4byte	0
 5126              		.section	.debug_aranges,"",%progbits
 5127 0000 F4000000 		.4byte	0xf4
 5128 0004 0200     		.2byte	0x2
 5129 0006 00000000 		.4byte	.Ldebug_info0
 5130 000a 04       		.byte	0x4
 5131 000b 00       		.byte	0
 5132 000c 0000     		.2byte	0
 5133 000e 0000     		.2byte	0
 5134 0010 00000000 		.4byte	.LFB19
 5135 0014 2C000000 		.4byte	.LFE19-.LFB19
 5136 0018 00000000 		.4byte	.LFB20
 5137 001c 08000000 		.4byte	.LFE20-.LFB20
 5138 0020 00000000 		.4byte	.LFB1
 5139 0024 10000000 		.4byte	.LFE1-.LFB1
 5140 0028 00000000 		.4byte	.LFB2
 5141 002c 40000000 		.4byte	.LFE2-.LFB2
 5142 0030 00000000 		.4byte	.LFB3
 5143 0034 2C000000 		.4byte	.LFE3-.LFB3
 5144 0038 00000000 		.4byte	.LFB4
 5145 003c 3C000000 		.4byte	.LFE4-.LFB4
 5146 0040 00000000 		.4byte	.LFB5
 5147 0044 54000000 		.4byte	.LFE5-.LFB5
 5148 0048 00000000 		.4byte	.LFB6
 5149 004c 2C000000 		.4byte	.LFE6-.LFB6
 5150 0050 00000000 		.4byte	.LFB8
 5151 0054 9C000000 		.4byte	.LFE8-.LFB8
 5152 0058 00000000 		.4byte	.LFB11
 5153 005c 80000000 		.4byte	.LFE11-.LFB11
 5154 0060 00000000 		.4byte	.LFB12
 5155 0064 02000000 		.4byte	.LFE12-.LFB12
 5156 0068 00000000 		.4byte	.LFB13
 5157 006c 08000000 		.4byte	.LFE13-.LFB13
 5158 0070 00000000 		.4byte	.LFB14
 5159 0074 30000000 		.4byte	.LFE14-.LFB14
 5160 0078 00000000 		.4byte	.LFB15
 5161 007c 30000000 		.4byte	.LFE15-.LFB15
 5162 0080 00000000 		.4byte	.LFB16
 5163 0084 12000000 		.4byte	.LFE16-.LFB16
 5164 0088 00000000 		.4byte	.LFB17
 5165 008c 1A000000 		.4byte	.LFE17-.LFB17
 5166 0090 00000000 		.4byte	.LFB18
 5167 0094 1A000000 		.4byte	.LFE18-.LFB18
 5168 0098 00000000 		.4byte	.LFB23
 5169 009c 10000000 		.4byte	.LFE23-.LFB23
 5170 00a0 00000000 		.4byte	.LFB24
 5171 00a4 10000000 		.4byte	.LFE24-.LFB24
 5172 00a8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 153


 5173 00ac 34000000 		.4byte	.LFE25-.LFB25
 5174 00b0 00000000 		.4byte	.LFB22
 5175 00b4 3C000000 		.4byte	.LFE22-.LFB22
 5176 00b8 00000000 		.4byte	.LFB21
 5177 00bc 20000000 		.4byte	.LFE21-.LFB21
 5178 00c0 00000000 		.4byte	.LFB27
 5179 00c4 1C000000 		.4byte	.LFE27-.LFB27
 5180 00c8 00000000 		.4byte	.LFB28
 5181 00cc 1C000000 		.4byte	.LFE28-.LFB28
 5182 00d0 00000000 		.4byte	.LFB9
 5183 00d4 18000000 		.4byte	.LFE9-.LFB9
 5184 00d8 00000000 		.4byte	.LFB10
 5185 00dc 3C000000 		.4byte	.LFE10-.LFB10
 5186 00e0 00000000 		.4byte	.LFB7
 5187 00e4 2C000000 		.4byte	.LFE7-.LFB7
 5188 00e8 00000000 		.4byte	.LFB26
 5189 00ec 84000000 		.4byte	.LFE26-.LFB26
 5190 00f0 00000000 		.4byte	0
 5191 00f4 00000000 		.4byte	0
 5192              		.section	.debug_ranges,"",%progbits
 5193              	.Ldebug_ranges0:
 5194 0000 00000000 		.4byte	.LFB19
 5195 0004 2C000000 		.4byte	.LFE19
 5196 0008 00000000 		.4byte	.LFB20
 5197 000c 08000000 		.4byte	.LFE20
 5198 0010 00000000 		.4byte	.LFB1
 5199 0014 10000000 		.4byte	.LFE1
 5200 0018 00000000 		.4byte	.LFB2
 5201 001c 40000000 		.4byte	.LFE2
 5202 0020 00000000 		.4byte	.LFB3
 5203 0024 2C000000 		.4byte	.LFE3
 5204 0028 00000000 		.4byte	.LFB4
 5205 002c 3C000000 		.4byte	.LFE4
 5206 0030 00000000 		.4byte	.LFB5
 5207 0034 54000000 		.4byte	.LFE5
 5208 0038 00000000 		.4byte	.LFB6
 5209 003c 2C000000 		.4byte	.LFE6
 5210 0040 00000000 		.4byte	.LFB8
 5211 0044 9C000000 		.4byte	.LFE8
 5212 0048 00000000 		.4byte	.LFB11
 5213 004c 80000000 		.4byte	.LFE11
 5214 0050 00000000 		.4byte	.LFB12
 5215 0054 02000000 		.4byte	.LFE12
 5216 0058 00000000 		.4byte	.LFB13
 5217 005c 08000000 		.4byte	.LFE13
 5218 0060 00000000 		.4byte	.LFB14
 5219 0064 30000000 		.4byte	.LFE14
 5220 0068 00000000 		.4byte	.LFB15
 5221 006c 30000000 		.4byte	.LFE15
 5222 0070 00000000 		.4byte	.LFB16
 5223 0074 12000000 		.4byte	.LFE16
 5224 0078 00000000 		.4byte	.LFB17
 5225 007c 1A000000 		.4byte	.LFE17
 5226 0080 00000000 		.4byte	.LFB18
 5227 0084 1A000000 		.4byte	.LFE18
 5228 0088 00000000 		.4byte	.LFB23
 5229 008c 10000000 		.4byte	.LFE23
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 154


 5230 0090 00000000 		.4byte	.LFB24
 5231 0094 10000000 		.4byte	.LFE24
 5232 0098 00000000 		.4byte	.LFB25
 5233 009c 34000000 		.4byte	.LFE25
 5234 00a0 00000000 		.4byte	.LFB22
 5235 00a4 3C000000 		.4byte	.LFE22
 5236 00a8 00000000 		.4byte	.LFB21
 5237 00ac 20000000 		.4byte	.LFE21
 5238 00b0 00000000 		.4byte	.LFB27
 5239 00b4 1C000000 		.4byte	.LFE27
 5240 00b8 00000000 		.4byte	.LFB28
 5241 00bc 1C000000 		.4byte	.LFE28
 5242 00c0 00000000 		.4byte	.LFB9
 5243 00c4 18000000 		.4byte	.LFE9
 5244 00c8 00000000 		.4byte	.LFB10
 5245 00cc 3C000000 		.4byte	.LFE10
 5246 00d0 00000000 		.4byte	.LFB7
 5247 00d4 2C000000 		.4byte	.LFE7
 5248 00d8 00000000 		.4byte	.LFB26
 5249 00dc 84000000 		.4byte	.LFE26
 5250 00e0 00000000 		.4byte	0
 5251 00e4 00000000 		.4byte	0
 5252              		.section	.debug_line,"",%progbits
 5253              	.Ldebug_line0:
 5254 0000 85050000 		.section	.debug_str,"MS",%progbits,1
 5254      0200E501 
 5254      00000201 
 5254      FB0E0D00 
 5254      01010101 
 5255              	.LASF22:
 5256 0000 4D75785F 		.ascii	"Mux_CapSense_LOW_BSLN_RST_TYPE\000"
 5256      43617053 
 5256      656E7365 
 5256      5F4C4F57 
 5256      5F42534C 
 5257              	.LASF148:
 5258 001f 4D75785F 		.ascii	"Mux_CapSense_SsSetModClkClockDivider\000"
 5258      43617053 
 5258      656E7365 
 5258      5F537353 
 5258      65744D6F 
 5259              	.LASF58:
 5260 0044 4D75785F 		.ascii	"Mux_CapSense_RAM_WD_LIST_STRUCT\000"
 5260      43617053 
 5260      656E7365 
 5260      5F52414D 
 5260      5F57445F 
 5261              	.LASF132:
 5262 0064 73656E73 		.ascii	"sensorElement\000"
 5262      6F72456C 
 5262      656D656E 
 5262      7400
 5263              	.LASF125:
 5264 0072 7363616E 		.ascii	"scanStatus\000"
 5264      53746174 
 5264      757300
 5265              	.LASF195:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 155


 5266 007d 4D75785F 		.ascii	"Mux_CapSense_CSDScanExt\000"
 5266      43617053 
 5266      656E7365 
 5266      5F435344 
 5266      5363616E 
 5267              	.LASF120:
 5268 0095 4D75785F 		.ascii	"Mux_CapSense_SsTrimIdacs\000"
 5268      43617053 
 5268      656E7365 
 5268      5F537354 
 5268      72696D49 
 5269              	.LASF79:
 5270 00ae 736E7254 		.ascii	"snrTestWidgetId\000"
 5270      65737457 
 5270      69646765 
 5270      74496400 
 5271              	.LASF31:
 5272 00be 4D75785F 		.ascii	"Mux_CapSense_UNDEFINED_E\000"
 5272      43617053 
 5272      656E7365 
 5272      5F554E44 
 5272      4546494E 
 5273              	.LASF8:
 5274 00d7 756E7369 		.ascii	"unsigned int\000"
 5274      676E6564 
 5274      20696E74 
 5274      00
 5275              	.LASF70:
 5276 00e4 7363616E 		.ascii	"scanCounter\000"
 5276      436F756E 
 5276      74657200 
 5277              	.LASF68:
 5278 00f0 6877436C 		.ascii	"hwClock\000"
 5278      6F636B00 
 5279              	.LASF83:
 5280 00f8 7363616E 		.ascii	"scanCsdISC\000"
 5280      43736449 
 5280      534300
 5281              	.LASF175:
 5282 0103 696E6974 		.ascii	"initStatus\000"
 5282      53746174 
 5282      757300
 5283              	.LASF201:
 5284 010e 43794861 		.ascii	"CyHalt\000"
 5284      6C7400
 5285              	.LASF136:
 5286 0115 696E7465 		.ascii	"interruptState\000"
 5286      72727570 
 5286      74537461 
 5286      746500
 5287              	.LASF18:
 5288 0124 72656738 		.ascii	"reg8\000"
 5288      00
 5289              	.LASF180:
 5290 0129 636D6F64 		.ascii	"cmodPc\000"
 5290      506300
 5291              	.LASF36:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 156


 5292 0130 4D75785F 		.ascii	"Mux_CapSense_SENSE_METHOD_ENUM\000"
 5292      43617053 
 5292      656E7365 
 5292      5F53454E 
 5292      53455F4D 
 5293              	.LASF165:
 5294 014f 6C667372 		.ascii	"lfsrScale\000"
 5294      5363616C 
 5294      6500
 5295              	.LASF56:
 5296 0159 4D75785F 		.ascii	"Mux_CapSense_RAM_WD_CSD_MATRIX_STRUCT\000"
 5296      43617053 
 5296      656E7365 
 5296      5F52414D 
 5296      5F57445F 
 5297              	.LASF168:
 5298 017f 6D6F6465 		.ascii	"mode\000"
 5298      00
 5299              	.LASF170:
 5300 0184 72656750 		.ascii	"regPtr\000"
 5300      747200
 5301              	.LASF206:
 5302 018b 47656E65 		.ascii	"Generated_Source\\PSoC4\\Mux_CapSense_Sensing.c\000"
 5302      72617465 
 5302      645F536F 
 5302      75726365 
 5302      5C50536F 
 5303              	.LASF130:
 5304 01b9 73656E73 		.ascii	"sensorId\000"
 5304      6F724964 
 5304      00
 5305              	.LASF54:
 5306 01c2 706F7352 		.ascii	"posRow\000"
 5306      6F7700
 5307              	.LASF157:
 5308 01c9 70747257 		.ascii	"ptrWdgt\000"
 5308      64677400 
 5309              	.LASF10:
 5310 01d1 75696E74 		.ascii	"uint32_t\000"
 5310      33325F74 
 5310      00
 5311              	.LASF118:
 5312 01da 4D75785F 		.ascii	"Mux_CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 5312      43617053 
 5312      656E7365 
 5312      5F494441 
 5312      435F4741 
 5313              	.LASF46:
 5314 01fe 69646163 		.ascii	"idacGainIndex\000"
 5314      4761696E 
 5314      496E6465 
 5314      7800
 5315              	.LASF26:
 5316 020c 4D75785F 		.ascii	"Mux_CapSense_WD_MATRIX_BUTTON_E\000"
 5316      43617053 
 5316      656E7365 
 5316      5F57445F 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 157


 5316      4D415452 
 5317              	.LASF140:
 5318 022c 6C6F6F70 		.ascii	"loopIndex\000"
 5318      496E6465 
 5318      7800
 5319              	.LASF198:
 5320 0236 4D75785F 		.ascii	"Mux_CapSense_CSDConnectSns\000"
 5320      43617053 
 5320      656E7365 
 5320      5F435344 
 5320      436F6E6E 
 5321              	.LASF14:
 5322 0251 666C6F61 		.ascii	"float\000"
 5322      7400
 5323              	.LASF94:
 5324 0257 73686966 		.ascii	"shift\000"
 5324      7400
 5325              	.LASF145:
 5326 025d 736E7349 		.ascii	"snsIoPtr\000"
 5326      6F507472 
 5326      00
 5327              	.LASF78:
 5328 0266 736E734C 		.ascii	"snsList\000"
 5328      69737400 
 5329              	.LASF7:
 5330 026e 6C6F6E67 		.ascii	"long long unsigned int\000"
 5330      206C6F6E 
 5330      6720756E 
 5330      7369676E 
 5330      65642069 
 5331              	.LASF185:
 5332 0285 4D75785F 		.ascii	"Mux_CapSense_sensorIndex\000"
 5332      43617053 
 5332      656E7365 
 5332      5F73656E 
 5332      736F7249 
 5333              	.LASF80:
 5334 029e 736E7254 		.ascii	"snrTestSensorId\000"
 5334      65737453 
 5334      656E736F 
 5334      72496400 
 5335              	.LASF103:
 5336 02ae 77646774 		.ascii	"wdgtType\000"
 5336      54797065 
 5336      00
 5337              	.LASF164:
 5338 02b7 6C667372 		.ascii	"lfsrSize\000"
 5338      53697A65 
 5338      00
 5339              	.LASF171:
 5340 02c0 76616C75 		.ascii	"value\000"
 5340      6500
 5341              	.LASF142:
 5342 02c6 6E657750 		.ascii	"newPinHsiomVal\000"
 5342      696E4873 
 5342      696F6D56 
 5342      616C00
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 158


 5343              	.LASF25:
 5344 02d5 4D75785F 		.ascii	"Mux_CapSense_WD_RADIAL_SLIDER_E\000"
 5344      43617053 
 5344      656E7365 
 5344      5F57445F 
 5344      52414449 
 5345              	.LASF205:
 5346 02f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5346      43313120 
 5346      352E342E 
 5346      31203230 
 5346      31363036 
 5347 0328 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5347      20726576 
 5347      6973696F 
 5347      6E203233 
 5347      37373135 
 5348 035b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5348      66756E63 
 5348      74696F6E 
 5348      2D736563 
 5348      74696F6E 
 5349              	.LASF76:
 5350 0383 6D6F6443 		.ascii	"modCsdClk\000"
 5350      7364436C 
 5350      6B00
 5351              	.LASF106:
 5352 038d 4D75785F 		.ascii	"Mux_CapSense_FLASH_WD_STRUCT\000"
 5352      43617053 
 5352      656E7365 
 5352      5F464C41 
 5352      53485F57 
 5353              	.LASF184:
 5354 03aa 4D75785F 		.ascii	"Mux_CapSense_widgetIndex\000"
 5354      43617053 
 5354      656E7365 
 5354      5F776964 
 5354      67657449 
 5355              	.LASF29:
 5356 03c3 4D75785F 		.ascii	"Mux_CapSense_WD_ENCODERDIAL_E\000"
 5356      43617053 
 5356      656E7365 
 5356      5F57445F 
 5356      454E434F 
 5357              	.LASF88:
 5358 03e1 64725074 		.ascii	"drPtr\000"
 5358      7200
 5359              	.LASF209:
 5360 03e7 4D75785F 		.ascii	"Mux_CapSense_SsPostAllWidgetsScan\000"
 5360      43617053 
 5360      656E7365 
 5360      5F537350 
 5360      6F737441 
 5361              	.LASF149:
 5362 0409 6D6F6443 		.ascii	"modClk\000"
 5362      6C6B00
 5363              	.LASF141:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 159


 5364 0410 6E657750 		.ascii	"newPinPcVal\000"
 5364      696E5063 
 5364      56616C00 
 5365              	.LASF41:
 5366 041c 68797374 		.ascii	"hysteresis\000"
 5366      65726573 
 5366      697300
 5367              	.LASF131:
 5368 0427 4D75785F 		.ascii	"Mux_CapSense_ScanExt\000"
 5368      43617053 
 5368      656E7365 
 5368      5F536361 
 5368      6E457874 
 5369              	.LASF189:
 5370 043c 4D75785F 		.ascii	"Mux_CapSense_scanFreqIndex\000"
 5370      43617053 
 5370      656E7365 
 5370      5F736361 
 5370      6E467265 
 5371              	.LASF177:
 5372 0457 64697363 		.ascii	"dischargeTime\000"
 5372      68617267 
 5372      6554696D 
 5372      6500
 5373              	.LASF119:
 5374 0465 4D75785F 		.ascii	"Mux_CapSense_SsTrimIdacsSourcing\000"
 5374      43617053 
 5374      656E7365 
 5374      5F537354 
 5374      72696D49 
 5375              	.LASF134:
 5376 0486 656C7464 		.ascii	"eltdNum\000"
 5376      4E756D00 
 5377              	.LASF181:
 5378 048e 4D75785F 		.ascii	"Mux_CapSense_dsRam\000"
 5378      43617053 
 5378      656E7365 
 5378      5F647352 
 5378      616D00
 5379              	.LASF43:
 5380 04a1 6C6F7742 		.ascii	"lowBslnRst\000"
 5380      736C6E52 
 5380      737400
 5381              	.LASF124:
 5382 04ac 4D75785F 		.ascii	"Mux_CapSense_Scan\000"
 5382      43617053 
 5382      656E7365 
 5382      5F536361 
 5382      6E00
 5383              	.LASF112:
 5384 04be 4D75785F 		.ascii	"Mux_CapSense_BIST_CSD_SNS_CAP_E\000"
 5384      43617053 
 5384      656E7365 
 5384      5F424953 
 5384      545F4353 
 5385              	.LASF186:
 5386 04de 4D75785F 		.ascii	"Mux_CapSense_requestScanAllWidget\000"
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 160


 5386      43617053 
 5386      656E7365 
 5386      5F726571 
 5386      75657374 
 5387              	.LASF102:
 5388 0500 746F7461 		.ascii	"totalNumSns\000"
 5388      6C4E756D 
 5388      536E7300 
 5389              	.LASF155:
 5390 050c 4D75785F 		.ascii	"Mux_CapSense_SsCSDGetColSnsClkDivider\000"
 5390      43617053 
 5390      656E7365 
 5390      5F537343 
 5390      53444765 
 5391              	.LASF166:
 5392 0532 4D75785F 		.ascii	"Mux_CapSense_SsInitializeSourceSenseClk\000"
 5392      43617053 
 5392      656E7365 
 5392      5F537349 
 5392      6E697469 
 5393              	.LASF52:
 5394 055a 4D75785F 		.ascii	"Mux_CapSense_RAM_WD_BASE_STRUCT\000"
 5394      43617053 
 5394      656E7365 
 5394      5F52414D 
 5394      5F57445F 
 5395              	.LASF95:
 5396 057a 4D75785F 		.ascii	"Mux_CapSense_FLASH_IO_STRUCT\000"
 5396      43617053 
 5396      656E7365 
 5396      5F464C41 
 5396      53485F49 
 5397              	.LASF39:
 5398 0597 6E6F6973 		.ascii	"noiseTh\000"
 5398      65546800 
 5399              	.LASF16:
 5400 059f 63686172 		.ascii	"char\000"
 5400      00
 5401              	.LASF197:
 5402 05a4 43794578 		.ascii	"CyExitCriticalSection\000"
 5402      69744372 
 5402      69746963 
 5402      616C5365 
 5402      6374696F 
 5403              	.LASF50:
 5404 05ba 726F7753 		.ascii	"rowSnsClkSource\000"
 5404      6E73436C 
 5404      6B536F75 
 5404      72636500 
 5405              	.LASF108:
 5406 05ca 4D75785F 		.ascii	"Mux_CapSense_FLASH_STRUCT\000"
 5406      43617053 
 5406      656E7365 
 5406      5F464C41 
 5406      53485F53 
 5407              	.LASF24:
 5408 05e4 4D75785F 		.ascii	"Mux_CapSense_WD_LINEAR_SLIDER_E\000"
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 161


 5408      43617053 
 5408      656E7365 
 5408      5F57445F 
 5408      4C494E45 
 5409              	.LASF92:
 5410 0604 6873696F 		.ascii	"hsiomShift\000"
 5410      6D536869 
 5410      667400
 5411              	.LASF126:
 5412 060f 4D75785F 		.ascii	"Mux_CapSense_ScanAllWidgets\000"
 5412      43617053 
 5412      656E7365 
 5412      5F536361 
 5412      6E416C6C 
 5413              	.LASF12:
 5414 062b 75696E74 		.ascii	"uint16\000"
 5414      313600
 5415              	.LASF48:
 5416 0632 726F7753 		.ascii	"rowSnsClk\000"
 5416      6E73436C 
 5416      6B00
 5417              	.LASF30:
 5418 063c 4D75785F 		.ascii	"Mux_CapSense_WD_TYPE_ENUM\000"
 5418      43617053 
 5418      656E7365 
 5418      5F57445F 
 5418      54595045 
 5419              	.LASF37:
 5420 0656 7265736F 		.ascii	"resolution\000"
 5420      6C757469 
 5420      6F6E00
 5421              	.LASF71:
 5422 0661 73746174 		.ascii	"status\000"
 5422      757300
 5423              	.LASF35:
 5424 0668 4D75785F 		.ascii	"Mux_CapSense_SENSE_METHOD_ISX_E\000"
 5424      43617053 
 5424      656E7365 
 5424      5F53454E 
 5424      53455F4D 
 5425              	.LASF163:
 5426 0688 4D75785F 		.ascii	"Mux_CapSense_SsSetWidgetSenseClkSrc\000"
 5426      43617053 
 5426      656E7365 
 5426      5F537353 
 5426      65745769 
 5427              	.LASF63:
 5428 06ac 69646163 		.ascii	"idacComp\000"
 5428      436F6D70 
 5428      00
 5429              	.LASF192:
 5430 06b5 4D75785F 		.ascii	"Mux_CapSense_CSDSetupWidget\000"
 5430      43617053 
 5430      656E7365 
 5430      5F435344 
 5430      53657475 
 5431              	.LASF87:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 162


 5432 06d1 70635074 		.ascii	"pcPtr\000"
 5432      7200
 5433              	.LASF6:
 5434 06d7 6C6F6E67 		.ascii	"long long int\000"
 5434      206C6F6E 
 5434      6720696E 
 5434      7400
 5435              	.LASF104:
 5436 06e5 6E756D43 		.ascii	"numCols\000"
 5436      6F6C7300 
 5437              	.LASF115:
 5438 06ed 4D75785F 		.ascii	"Mux_CapSense_OPERATION_MODE_ENUM\000"
 5438      43617053 
 5438      656E7365 
 5438      5F4F5045 
 5438      52415449 
 5439              	.LASF111:
 5440 070e 4D75785F 		.ascii	"Mux_CapSense_SCAN_CSX_E\000"
 5440      43617053 
 5440      656E7365 
 5440      5F534341 
 5440      4E5F4353 
 5441              	.LASF139:
 5442 0726 4D75785F 		.ascii	"Mux_CapSense_SsSetAllIOsState\000"
 5442      43617053 
 5442      656E7365 
 5442      5F537353 
 5442      6574416C 
 5443              	.LASF42:
 5444 0744 6F6E4465 		.ascii	"onDebounce\000"
 5444      626F756E 
 5444      636500
 5445              	.LASF21:
 5446 074f 4D75785F 		.ascii	"Mux_CapSense_THRESHOLD_TYPE\000"
 5446      43617053 
 5446      656E7365 
 5446      5F544852 
 5446      4553484F 
 5447              	.LASF153:
 5448 076b 63616C69 		.ascii	"calibrateStatus\000"
 5448      62726174 
 5448      65537461 
 5448      74757300 
 5449              	.LASF77:
 5450 077b 77646774 		.ascii	"wdgtList\000"
 5450      4C697374 
 5450      00
 5451              	.LASF151:
 5452 0784 4D75785F 		.ascii	"Mux_CapSense_SsSetClockDividers\000"
 5452      43617053 
 5452      656E7365 
 5452      5F537353 
 5452      6574436C 
 5453              	.LASF82:
 5454 07a4 736E7254 		.ascii	"snrTestRawCount\000"
 5454      65737452 
 5454      6177436F 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 163


 5454      756E7400 
 5455              	.LASF154:
 5456 07b4 4D75785F 		.ascii	"Mux_CapSense_CalibrateAllWidgets\000"
 5456      43617053 
 5456      656E7365 
 5456      5F43616C 
 5456      69627261 
 5457              	.LASF40:
 5458 07d5 6E4E6F69 		.ascii	"nNoiseTh\000"
 5458      73655468 
 5458      00
 5459              	.LASF182:
 5460 07de 4D75785F 		.ascii	"Mux_CapSense_dsFlash\000"
 5460      43617053 
 5460      656E7365 
 5460      5F647346 
 5460      6C617368 
 5461              	.LASF75:
 5462 07f3 63736430 		.ascii	"csd0Config\000"
 5462      436F6E66 
 5462      696700
 5463              	.LASF20:
 5464 07fe 63796973 		.ascii	"cyisraddress\000"
 5464      72616464 
 5464      72657373 
 5464      00
 5465              	.LASF33:
 5466 080b 4D75785F 		.ascii	"Mux_CapSense_SENSE_METHOD_CSX_E\000"
 5466      43617053 
 5466      656E7365 
 5466      5F53454E 
 5466      53455F4D 
 5467              	.LASF86:
 5468 082b 6873696F 		.ascii	"hsiomPtr\000"
 5468      6D507472 
 5468      00
 5469              	.LASF57:
 5470 0834 6D617472 		.ascii	"matrixbuttons0\000"
 5470      69786275 
 5470      74746F6E 
 5470      733000
 5471              	.LASF13:
 5472 0843 75696E74 		.ascii	"uint32\000"
 5472      333200
 5473              	.LASF99:
 5474 084a 70747232 		.ascii	"ptr2FltrHistory\000"
 5474      466C7472 
 5474      48697374 
 5474      6F727900 
 5475              	.LASF200:
 5476 085a 4D75785F 		.ascii	"Mux_CapSense_CSDCalibrateWidget\000"
 5476      43617053 
 5476      656E7365 
 5476      5F435344 
 5476      43616C69 
 5477              	.LASF117:
 5478 087a 6761696E 		.ascii	"gainValue\000"
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 164


 5478      56616C75 
 5478      6500
 5479              	.LASF91:
 5480 0884 6D61736B 		.ascii	"mask\000"
 5480      00
 5481              	.LASF190:
 5482 0889 4D75785F 		.ascii	"Mux_CapSense_curSnsIOPtr\000"
 5482      43617053 
 5482      656E7365 
 5482      5F637572 
 5482      536E7349 
 5483              	.LASF204:
 5484 08a2 43794465 		.ascii	"CyDelayUs\000"
 5484      6C617955 
 5484      7300
 5485              	.LASF172:
 5486 08ac 4D75785F 		.ascii	"Mux_CapSense_SsCSDDisableMode\000"
 5486      43617053 
 5486      656E7365 
 5486      5F537343 
 5486      53444469 
 5487              	.LASF152:
 5488 08ca 4D75785F 		.ascii	"Mux_CapSense_CalibrateWidget\000"
 5488      43617053 
 5488      656E7365 
 5488      5F43616C 
 5488      69627261 
 5489              	.LASF27:
 5490 08e7 4D75785F 		.ascii	"Mux_CapSense_WD_TOUCHPAD_E\000"
 5490      43617053 
 5490      656E7365 
 5490      5F57445F 
 5490      544F5543 
 5491              	.LASF127:
 5492 0902 77646774 		.ascii	"wdgtIndex\000"
 5492      496E6465 
 5492      7800
 5493              	.LASF32:
 5494 090c 4D75785F 		.ascii	"Mux_CapSense_SENSE_METHOD_CSD_E\000"
 5494      43617053 
 5494      656E7365 
 5494      5F53454E 
 5494      53455F4D 
 5495              	.LASF188:
 5496 092c 4D75785F 		.ascii	"Mux_CapSense_currentSenseMethod\000"
 5496      43617053 
 5496      656E7365 
 5496      5F637572 
 5496      72656E74 
 5497              	.LASF109:
 5498 094c 6C6F6E67 		.ascii	"long double\000"
 5498      20646F75 
 5498      626C6500 
 5499              	.LASF19:
 5500 0958 72656733 		.ascii	"reg32\000"
 5500      3200
 5501              	.LASF81:
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 165


 5502 095e 736E7254 		.ascii	"snrTestScanCounter\000"
 5502      65737453 
 5502      63616E43 
 5502      6F756E74 
 5502      657200
 5503              	.LASF66:
 5504 0971 636F6E66 		.ascii	"configId\000"
 5504      69674964 
 5504      00
 5505              	.LASF98:
 5506 097a 70747232 		.ascii	"ptr2SnsRam\000"
 5506      536E7352 
 5506      616D00
 5507              	.LASF114:
 5508 0985 4D75785F 		.ascii	"Mux_CapSense_BIST_CSD_SH_CAP_E\000"
 5508      43617053 
 5508      656E7365 
 5508      5F424953 
 5508      545F4353 
 5509              	.LASF203:
 5510 09a4 4D75785F 		.ascii	"Mux_CapSense_SsCSDInitialize\000"
 5510      43617053 
 5510      656E7365 
 5510      5F537343 
 5510      5344496E 
 5511              	.LASF167:
 5512 09c1 4D75785F 		.ascii	"Mux_CapSense_SetInactiveElectrodeState\000"
 5512      43617053 
 5512      656E7365 
 5512      5F536574 
 5512      496E6163 
 5513              	.LASF74:
 5514 09e8 736E7353 		.ascii	"snsStatus\000"
 5514      74617475 
 5514      7300
 5515              	.LASF49:
 5516 09f2 736E7343 		.ascii	"snsClkSource\000"
 5516      6C6B536F 
 5516      75726365 
 5516      00
 5517              	.LASF55:
 5518 09ff 706F7353 		.ascii	"posSnsId\000"
 5518      6E734964 
 5518      00
 5519              	.LASF28:
 5520 0a08 4D75785F 		.ascii	"Mux_CapSense_WD_PROXIMITY_E\000"
 5520      43617053 
 5520      656E7365 
 5520      5F57445F 
 5520      50524F58 
 5521              	.LASF2:
 5522 0a24 73686F72 		.ascii	"short int\000"
 5522      7420696E 
 5522      7400
 5523              	.LASF4:
 5524 0a2e 6C6F6E67 		.ascii	"long int\000"
 5524      20696E74 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 166


 5524      00
 5525              	.LASF72:
 5526 0a37 77646774 		.ascii	"wdgtEnable\000"
 5526      456E6162 
 5526      6C6500
 5527              	.LASF183:
 5528 0a42 4D75785F 		.ascii	"Mux_CapSense_ioList\000"
 5528      43617053 
 5528      656E7365 
 5528      5F696F4C 
 5528      69737400 
 5529              	.LASF176:
 5530 0a56 4D75785F 		.ascii	"Mux_CapSense_DischargeExtCapacitors\000"
 5530      43617053 
 5530      656E7365 
 5530      5F446973 
 5530      63686172 
 5531              	.LASF110:
 5532 0a7a 4D75785F 		.ascii	"Mux_CapSense_SCAN_CSD_E\000"
 5532      43617053 
 5532      656E7365 
 5532      5F534341 
 5532      4E5F4353 
 5533              	.LASF61:
 5534 0a92 64696666 		.ascii	"diff\000"
 5534      00
 5535              	.LASF128:
 5536 0a97 4D75785F 		.ascii	"Mux_CapSense_SetupWidgetExt\000"
 5536      43617053 
 5536      656E7365 
 5536      5F536574 
 5536      75705769 
 5537              	.LASF69:
 5538 0ab3 74756E65 		.ascii	"tunerCmd\000"
 5538      72436D64 
 5538      00
 5539              	.LASF89:
 5540 0abc 70735074 		.ascii	"psPtr\000"
 5540      7200
 5541              	.LASF179:
 5542 0ac2 636D6F64 		.ascii	"cmodDr\000"
 5542      447200
 5543              	.LASF178:
 5544 0ac9 636D6F64 		.ascii	"cmodHsiom\000"
 5544      4873696F 
 5544      6D00
 5545              	.LASF123:
 5546 0ad3 4D75785F 		.ascii	"Mux_CapSense_SetupWidget\000"
 5546      43617053 
 5546      656E7365 
 5546      5F536574 
 5546      75705769 
 5547              	.LASF207:
 5548 0aec 433A5C55 		.ascii	"C:\\Users\\Prajwal Trachealth\\Documents\\PSoC Crea"
 5548      73657273 
 5548      5C507261 
 5548      6A77616C 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 167


 5548      20547261 
 5549 0b1b 746F725C 		.ascii	"tor\\E-Lagori PSoC 11th April 2023\\PSoC CapSense_H"
 5549      452D4C61 
 5549      676F7269 
 5549      2050536F 
 5549      43203131 
 5550 0b4c 6578546F 		.ascii	"exTouch.cydsn\000"
 5550      7563682E 
 5550      63796473 
 5550      6E00
 5551              	.LASF23:
 5552 0b5a 4D75785F 		.ascii	"Mux_CapSense_WD_BUTTON_E\000"
 5552      43617053 
 5552      656E7365 
 5552      5F57445F 
 5552      42555454 
 5553              	.LASF143:
 5554 0b73 746D7050 		.ascii	"tmpPcDrRegValue\000"
 5554      63447252 
 5554      65675661 
 5554      6C756500 
 5555              	.LASF116:
 5556 0b83 6761696E 		.ascii	"gainReg\000"
 5556      52656700 
 5557              	.LASF137:
 5558 0b8b 696F5074 		.ascii	"ioPtr\000"
 5558      7200
 5559              	.LASF45:
 5560 0b91 726F7749 		.ascii	"rowIdacMod\000"
 5560      6461634D 
 5560      6F6400
 5561              	.LASF73:
 5562 0b9c 77646774 		.ascii	"wdgtStatus\000"
 5562      53746174 
 5562      757300
 5563              	.LASF34:
 5564 0ba7 4D75785F 		.ascii	"Mux_CapSense_SENSE_METHOD_BIST_E\000"
 5564      43617053 
 5564      656E7365 
 5564      5F53454E 
 5564      53455F4D 
 5565              	.LASF161:
 5566 0bc8 70727353 		.ascii	"prsSize\000"
 5566      697A6500 
 5567              	.LASF51:
 5568 0bd0 73697A65 		.ascii	"sizetype\000"
 5568      74797065 
 5568      00
 5569              	.LASF93:
 5570 0bd9 64725368 		.ascii	"drShift\000"
 5570      69667400 
 5571              	.LASF5:
 5572 0be1 6C6F6E67 		.ascii	"long unsigned int\000"
 5572      20756E73 
 5572      69676E65 
 5572      6420696E 
 5572      7400
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 168


 5573              	.LASF156:
 5574 0bf3 72657456 		.ascii	"retVal\000"
 5574      616C00
 5575              	.LASF147:
 5576 0bfa 61646472 		.ascii	"address\000"
 5576      65737300 
 5577              	.LASF44:
 5578 0c02 69646163 		.ascii	"idacMod\000"
 5578      4D6F6400 
 5579              	.LASF187:
 5580 0c0a 4D75785F 		.ascii	"Mux_CapSense_curRamSnsPtr\000"
 5580      43617053 
 5580      656E7365 
 5580      5F637572 
 5580      52616D53 
 5581              	.LASF100:
 5582 0c24 70747232 		.ascii	"ptr2DebounceArr\000"
 5582      4465626F 
 5582      756E6365 
 5582      41727200 
 5583              	.LASF199:
 5584 0c34 4D75785F 		.ascii	"Mux_CapSense_ISR_StartEx\000"
 5584      43617053 
 5584      656E7365 
 5584      5F495352 
 5584      5F537461 
 5585              	.LASF173:
 5586 0c4d 4D75785F 		.ascii	"Mux_CapSense_SsSwitchSensingMode\000"
 5586      43617053 
 5586      656E7365 
 5586      5F537353 
 5586      77697463 
 5587              	.LASF38:
 5588 0c6e 66696E67 		.ascii	"fingerTh\000"
 5588      65725468 
 5588      00
 5589              	.LASF146:
 5590 0c77 4D75785F 		.ascii	"Mux_CapSense_SsIsrInitialize\000"
 5590      43617053 
 5590      656E7365 
 5590      5F537349 
 5590      7372496E 
 5591              	.LASF60:
 5592 0c94 62736C6E 		.ascii	"bslnExt\000"
 5592      45787400 
 5593              	.LASF158:
 5594 0c9c 4D75785F 		.ascii	"Mux_CapSense_SsCSDGetRowSnsClkDivider\000"
 5594      43617053 
 5594      656E7365 
 5594      5F537343 
 5594      53444765 
 5595              	.LASF17:
 5596 0cc2 63797374 		.ascii	"cystatus\000"
 5596      61747573 
 5596      00
 5597              	.LASF194:
 5598 0ccb 4D75785F 		.ascii	"Mux_CapSense_CSDSetupWidgetExt\000"
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 169


 5598      43617053 
 5598      656E7365 
 5598      5F435344 
 5598      53657475 
 5599              	.LASF1:
 5600 0cea 756E7369 		.ascii	"unsigned char\000"
 5600      676E6564 
 5600      20636861 
 5600      7200
 5601              	.LASF121:
 5602 0cf8 7472696D 		.ascii	"trimValue\000"
 5602      56616C75 
 5602      6500
 5603              	.LASF9:
 5604 0d02 5F5F7569 		.ascii	"__uint32_t\000"
 5604      6E743332 
 5604      5F7400
 5605              	.LASF144:
 5606 0d0d 746D7048 		.ascii	"tmpHsiomRegValue\000"
 5606      73696F6D 
 5606      52656756 
 5606      616C7565 
 5606      00
 5607              	.LASF101:
 5608 0d1e 73746174 		.ascii	"staticConfig\000"
 5608      6963436F 
 5608      6E666967 
 5608      00
 5609              	.LASF174:
 5610 0d2b 4D75785F 		.ascii	"Mux_CapSense_SsInitialize\000"
 5610      43617053 
 5610      656E7365 
 5610      5F537349 
 5610      6E697469 
 5611              	.LASF85:
 5612 0d45 4D75785F 		.ascii	"Mux_CapSense_RAM_STRUCT\000"
 5612      43617053 
 5612      656E7365 
 5612      5F52414D 
 5612      5F535452 
 5613              	.LASF84:
 5614 0d5d 7363616E 		.ascii	"scanCurrentISC\000"
 5614      43757272 
 5614      656E7449 
 5614      534300
 5615              	.LASF97:
 5616 0d6c 70747232 		.ascii	"ptr2WdgtRam\000"
 5616      57646774 
 5616      52616D00 
 5617              	.LASF138:
 5618 0d78 4D75785F 		.ascii	"Mux_CapSense_SetPinState\000"
 5618      43617053 
 5618      656E7365 
 5618      5F536574 
 5618      50696E53 
 5619              	.LASF150:
 5620 0d91 4D75785F 		.ascii	"Mux_CapSense_SsSetSnsClockDivider\000"
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 170


 5620      43617053 
 5620      656E7365 
 5620      5F537353 
 5620      6574536E 
 5621              	.LASF105:
 5622 0db3 6E756D52 		.ascii	"numRows\000"
 5622      6F777300 
 5623              	.LASF133:
 5624 0dbb 73746174 		.ascii	"state\000"
 5624      6500
 5625              	.LASF135:
 5626 0dc1 656C7464 		.ascii	"eltdIndex\000"
 5626      496E6465 
 5626      7800
 5627              	.LASF90:
 5628 0dcb 6873696F 		.ascii	"hsiomMask\000"
 5628      6D4D6173 
 5628      6B00
 5629              	.LASF47:
 5630 0dd5 736E7343 		.ascii	"snsClk\000"
 5630      6C6B00
 5631              	.LASF65:
 5632 0ddc 4D75785F 		.ascii	"Mux_CapSense_RAM_SNS_LIST_STRUCT\000"
 5632      43617053 
 5632      656E7365 
 5632      5F52414D 
 5632      5F534E53 
 5633              	.LASF196:
 5634 0dfd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5634      74657243 
 5634      72697469 
 5634      63616C53 
 5634      65637469 
 5635              	.LASF0:
 5636 0e14 7369676E 		.ascii	"signed char\000"
 5636      65642063 
 5636      68617200 
 5637              	.LASF59:
 5638 0e20 62736C6E 		.ascii	"bsln\000"
 5638      00
 5639              	.LASF3:
 5640 0e25 73686F72 		.ascii	"short unsigned int\000"
 5640      7420756E 
 5640      7369676E 
 5640      65642069 
 5640      6E7400
 5641              	.LASF208:
 5642 0e38 4D75785F 		.ascii	"Mux_CapSense_IsBusy\000"
 5642      43617053 
 5642      656E7365 
 5642      5F497342 
 5642      75737900 
 5643              	.LASF202:
 5644 0e4c 4D75785F 		.ascii	"Mux_CapSense_SsCSDElectrodeCheck\000"
 5644      43617053 
 5644      656E7365 
 5644      5F537343 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 171


 5644      5344456C 
 5645              	.LASF113:
 5646 0e6d 4D75785F 		.ascii	"Mux_CapSense_BIST_CSX_SNS_CAP_E\000"
 5646      43617053 
 5646      656E7365 
 5646      5F424953 
 5646      545F4353 
 5647              	.LASF96:
 5648 0e8d 70747232 		.ascii	"ptr2SnsFlash\000"
 5648      536E7346 
 5648      6C617368 
 5648      00
 5649              	.LASF53:
 5650 0e9a 706F7343 		.ascii	"posCol\000"
 5650      6F6C00
 5651              	.LASF11:
 5652 0ea1 75696E74 		.ascii	"uint8\000"
 5652      3800
 5653              	.LASF15:
 5654 0ea7 646F7562 		.ascii	"double\000"
 5654      6C6500
 5655              	.LASF62:
 5656 0eae 6E656742 		.ascii	"negBslnRstCnt\000"
 5656      736C6E52 
 5656      7374436E 
 5656      7400
 5657              	.LASF193:
 5658 0ebc 4D75785F 		.ascii	"Mux_CapSense_CSDScan\000"
 5658      43617053 
 5658      656E7365 
 5658      5F435344 
 5658      5363616E 
 5659              	.LASF160:
 5660 0ed1 736E7343 		.ascii	"snsClkDivider\000"
 5660      6C6B4469 
 5660      76696465 
 5660      7200
 5661              	.LASF162:
 5662 0edf 6D6F6443 		.ascii	"modClkDivider\000"
 5662      6C6B4469 
 5662      76696465 
 5662      7200
 5663              	.LASF67:
 5664 0eed 64657669 		.ascii	"deviceId\000"
 5664      63654964 
 5664      00
 5665              	.LASF64:
 5666 0ef6 4D75785F 		.ascii	"Mux_CapSense_RAM_SNS_STRUCT\000"
 5666      43617053 
 5666      656E7365 
 5666      5F52414D 
 5666      5F534E53 
 5667              	.LASF169:
 5668 0f12 4D75785F 		.ascii	"Mux_CapSense_WriteBitsSafe\000"
 5668      43617053 
 5668      656E7365 
 5668      5F577269 
ARM GAS  C:\Users\PRAJWA~1\AppData\Local\Temp\cc1adzH5.s 			page 172


 5668      74654269 
 5669              	.LASF122:
 5670 0f2d 77696467 		.ascii	"widgetStatus\000"
 5670      65745374 
 5670      61747573 
 5670      00
 5671              	.LASF191:
 5672 0f3a 4D75785F 		.ascii	"Mux_CapSense_idacGainTable\000"
 5672      43617053 
 5672      656E7365 
 5672      5F696461 
 5672      63476169 
 5673              	.LASF129:
 5674 0f55 77696467 		.ascii	"widgetId\000"
 5674      65744964 
 5674      00
 5675              	.LASF159:
 5676 0f5e 4D75785F 		.ascii	"Mux_CapSense_SsCSDCalcPrsSize\000"
 5676      43617053 
 5676      656E7365 
 5676      5F537343 
 5676      53444361 
 5677              	.LASF107:
 5678 0f7c 77646774 		.ascii	"wdgtArray\000"
 5678      41727261 
 5678      7900
 5679              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
